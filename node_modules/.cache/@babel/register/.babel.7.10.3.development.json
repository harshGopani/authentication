{
  "{\"sourceRoot\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"filename\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\code\\dds\\social-share-backend-nikund",
      "filename": "E:\\code\\dds\\social-share-backend-nikund\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\code\\dds\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\code\\dds\\social-share-backend-nikund\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\code\\dds\\social-share-backend-nikund\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _http = _interopRequireDefault(require(\"http\"));\n\nvar _server = _interopRequireDefault(require(\"./server\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar server = null;\n\nif (process.env.NODE_ENV === \"development\") {\n  server = _http[\"default\"].createServer(_server[\"default\"]);\n} else {\n  console.log(\"This is the production environment\");\n  server = _server[\"default\"];\n}\n\n_server[\"default\"].get('/', function (req, res) {\n  res.send('welcome');\n});\n\nvar PORT = process.env.PORT || 8000;\nserver.listen(PORT, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n  return regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          try {\n            console.log(\"Server listening on port \".concat(PORT));\n          } catch (err) {\n            console.log(\"Server init error\", err);\n          }\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n})));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInNlcnZlciIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsImh0dHAiLCJjcmVhdGVTZXJ2ZXIiLCJhcHAiLCJjb25zb2xlIiwibG9nIiwiZ2V0IiwicmVxIiwicmVzIiwic2VuZCIsIlBPUlQiLCJsaXN0ZW4iLCJlcnIiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBRUE7Ozs7Ozs7O0FBRUEsSUFBSUEsTUFBTSxHQUFHLElBQWI7O0FBRUEsSUFBSUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFFBQVosS0FBeUIsYUFBN0IsRUFBNEM7QUFDeENILEVBQUFBLE1BQU0sR0FBR0ksaUJBQUtDLFlBQUwsQ0FBa0JDLGtCQUFsQixDQUFUO0FBQ0QsQ0FGSCxNQUVTO0FBQ0xDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLG9DQUFaO0FBQ0FSLEVBQUFBLE1BQU0sR0FBR00sa0JBQVQ7QUFDRDs7QUFFREEsbUJBQUlHLEdBQUosQ0FBUSxHQUFSLEVBQWEsVUFBQ0MsR0FBRCxFQUFLQyxHQUFMLEVBQWE7QUFDeEJBLEVBQUFBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTLFNBQVQ7QUFDRCxDQUZEOztBQUlGLElBQU1DLElBQUksR0FBR1osT0FBTyxDQUFDQyxHQUFSLENBQVlXLElBQVosSUFBb0IsSUFBakM7QUFFQWIsTUFBTSxDQUFDYyxNQUFQLENBQWNELElBQWQsdUVBQW9CO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDbEIsY0FBSTtBQUNGTixZQUFBQSxPQUFPLENBQUNDLEdBQVIsb0NBQXdDSyxJQUF4QztBQUNELFdBRkQsQ0FFRSxPQUFPRSxHQUFQLEVBQVk7QUFDWlIsWUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksbUJBQVosRUFBaUNPLEdBQWpDO0FBQ0Q7O0FBTGlCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLENBQXBCIiwic291cmNlUm9vdCI6IkU6XFxjb2RlXFxkZHNcXHNvY2lhbC1zaGFyZS1iYWNrZW5kLW5pa3VuZFxcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGh0dHAgZnJvbSBcImh0dHBcIlxuXG5pbXBvcnQgYXBwIGZyb20gXCIuL3NlcnZlclwiXG5cbmxldCBzZXJ2ZXIgPSBudWxsO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwiZGV2ZWxvcG1lbnRcIikge1xuICAgIHNlcnZlciA9IGh0dHAuY3JlYXRlU2VydmVyKGFwcClcbiAgfSBlbHNlIHtcbiAgICBjb25zb2xlLmxvZyhcIlRoaXMgaXMgdGhlIHByb2R1Y3Rpb24gZW52aXJvbm1lbnRcIilcbiAgICBzZXJ2ZXIgPSBhcHBcbiAgfVxuXG4gIGFwcC5nZXQoJy8nLCAocmVxLHJlcykgPT4ge1xuICAgIHJlcy5zZW5kKCd3ZWxjb21lJyk7XG4gIH0pXG5cbmNvbnN0IFBPUlQgPSBwcm9jZXNzLmVudi5QT1JUIHx8IDgwMDBcblxuc2VydmVyLmxpc3RlbihQT1JULCBhc3luYyAoKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc29sZS5sb2coYFNlcnZlciBsaXN0ZW5pbmcgb24gcG9ydCAke1BPUlR9YClcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgY29uc29sZS5sb2coXCJTZXJ2ZXIgaW5pdCBlcnJvclwiLCBlcnIpXG4gIH1cbn0pXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "server",
        "process",
        "env",
        "NODE_ENV",
        "http",
        "createServer",
        "app",
        "console",
        "log",
        "get",
        "req",
        "res",
        "send",
        "PORT",
        "listen",
        "err"
      ],
      "mappings": ";;AAAA;;AAEA;;;;;;;;AAEA,IAAIA,MAAM,GAAG,IAAb;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxCH,EAAAA,MAAM,GAAGI,iBAAKC,YAAL,CAAkBC,kBAAlB,CAAT;AACD,CAFH,MAES;AACLC,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACAR,EAAAA,MAAM,GAAGM,kBAAT;AACD;;AAEDA,mBAAIG,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAKC,GAAL,EAAa;AACxBA,EAAAA,GAAG,CAACC,IAAJ,CAAS,SAAT;AACD,CAFD;;AAIF,IAAMC,IAAI,GAAGZ,OAAO,CAACC,GAAR,CAAYW,IAAZ,IAAoB,IAAjC;AAEAb,MAAM,CAACc,MAAP,CAAcD,IAAd,uEAAoB;AAAA;AAAA;AAAA;AAAA;AAClB,cAAI;AACFN,YAAAA,OAAO,CAACC,GAAR,oCAAwCK,IAAxC;AACD,WAFD,CAEE,OAAOE,GAAP,EAAY;AACZR,YAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCO,GAAjC;AACD;;AALiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB",
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\",
      "sourcesContent": [
        "import http from \"http\"\n\nimport app from \"./server\"\n\nlet server = null;\n\nif (process.env.NODE_ENV === \"development\") {\n    server = http.createServer(app)\n  } else {\n    console.log(\"This is the production environment\")\n    server = app\n  }\n\n  app.get('/', (req,res) => {\n    res.send('welcome');\n  })\n\nconst PORT = process.env.PORT || 8000\n\nserver.listen(PORT, async () => {\n  try {\n    console.log(`Server listening on port ${PORT}`)\n  } catch (err) {\n    console.log(\"Server init error\", err)\n  }\n})\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1594986597061
  },
  "{\"sourceRoot\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"filename\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\code\\dds\\social-share-backend-nikund",
      "filename": "E:\\code\\dds\\social-share-backend-nikund\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\code\\dds\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\code\\dds\\social-share-backend-nikund\\server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\code\\dds\\social-share-backend-nikund\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _db = require(\"./db\");\n\nvar _middlewares = _interopRequireDefault(require(\"./middlewares\"));\n\nvar _aurthorization = require(\"./aurthorization\");\n\nvar _restRouter = require(\"./api/restRouter\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\n\nrequire(\"dotenv\").config();\n\n(0, _middlewares[\"default\"])(app);\n(0, _db.connect)();\napp.use((0, _cors[\"default\"])());\napp.use('/auth', function (req, res, next) {\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  res.header(\"Access-Control-Allow-Methods\", \"POST, GET, PUT, DELETE, OPTIONS\");\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Authorization, Accept, Access-Control-Al\" + \"low-Methods\");\n  res.header(\"X-Frame-Options\", \"deny\");\n  res.header(\"X-Content-Type-Options\", \"nosniff\");\n  next();\n});\napp.use('/auth', _aurthorization.authRouter);\napp.use(_express[\"default\"][\"static\"]('public'));\napp.use('/api', function (req, res, next) {\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  res.header(\"Access-Control-Allow-Methods\", \"POST, GET, PUT, DELETE, OPTIONS\");\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Authorization, Accept, Access-Control-Al\" + \"low-Methods\");\n  res.header(\"X-Frame-Options\", \"deny\");\n  res.header(\"X-Content-Type-Options\", \"nosniff\");\n  next();\n});\napp.use('/api', _restRouter.restRouter);\nvar _default = app;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJyZXF1aXJlIiwiY29uZmlnIiwidXNlIiwicmVxIiwicmVzIiwibmV4dCIsImhlYWRlciIsImF1dGhSb3V0ZXIiLCJleHByZXNzIiwicmVzdFJvdXRlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBQ0EsSUFBTUEsR0FBRyxHQUFHLDBCQUFaOztBQUVBQyxPQUFPLENBQUMsUUFBRCxDQUFQLENBQWtCQyxNQUFsQjs7QUFFQSw2QkFBY0YsR0FBZDtBQUVBO0FBRUFBLEdBQUcsQ0FBQ0csR0FBSixDQUFRLHVCQUFSO0FBQ0FILEdBQUcsQ0FBQ0csR0FBSixDQUFRLE9BQVIsRUFBZ0IsVUFBQ0MsR0FBRCxFQUFLQyxHQUFMLEVBQVNDLElBQVQsRUFBZ0I7QUFDOUJELEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXLDZCQUFYLEVBQTBDLEdBQTFDO0FBQ0FGLEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXLDhCQUFYLEVBQTJDLGlDQUEzQztBQUNBRixFQUFBQSxHQUFHLENBQUNFLE1BQUosQ0FDSSw4QkFESixFQUVJLHFGQUNFLGFBSE47QUFLQUYsRUFBQUEsR0FBRyxDQUFDRSxNQUFKLENBQVcsaUJBQVgsRUFBOEIsTUFBOUI7QUFDQUYsRUFBQUEsR0FBRyxDQUFDRSxNQUFKLENBQVcsd0JBQVgsRUFBcUMsU0FBckM7QUFDQUQsRUFBQUEsSUFBSTtBQUNMLENBWEQ7QUFZQU4sR0FBRyxDQUFDRyxHQUFKLENBQVEsT0FBUixFQUFnQkssMEJBQWhCO0FBQ0FSLEdBQUcsQ0FBQ0csR0FBSixDQUFRTSw4QkFBZSxRQUFmLENBQVI7QUFDQVQsR0FBRyxDQUFDRyxHQUFKLENBQVEsTUFBUixFQUFlLFVBQUNDLEdBQUQsRUFBS0MsR0FBTCxFQUFTQyxJQUFULEVBQWdCO0FBQzdCRCxFQUFBQSxHQUFHLENBQUNFLE1BQUosQ0FBVyw2QkFBWCxFQUEwQyxHQUExQztBQUNBRixFQUFBQSxHQUFHLENBQUNFLE1BQUosQ0FBVyw4QkFBWCxFQUEyQyxpQ0FBM0M7QUFDQUYsRUFBQUEsR0FBRyxDQUFDRSxNQUFKLENBQ0ksOEJBREosRUFFSSxxRkFDRSxhQUhOO0FBS0FGLEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXLGlCQUFYLEVBQThCLE1BQTlCO0FBQ0FGLEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXLHdCQUFYLEVBQXFDLFNBQXJDO0FBQ0FELEVBQUFBLElBQUk7QUFDTCxDQVhEO0FBWUFOLEdBQUcsQ0FBQ0csR0FBSixDQUFRLE1BQVIsRUFBZU8sc0JBQWY7ZUFDZVYsRyIsInNvdXJjZVJvb3QiOiJFOlxcY29kZVxcZGRzXFxzb2NpYWwtc2hhcmUtYmFja2VuZC1uaWt1bmRcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XG5pbXBvcnQgY29ycyBmcm9tIFwiY29yc1wiO1xuaW1wb3J0IHtjb25uZWN0fSBmcm9tICcuL2RiJ1xuaW1wb3J0IHNldHVwTWlkZHdhcmUgZnJvbSAnLi9taWRkbGV3YXJlcydcbmltcG9ydCB7YXV0aFJvdXRlcn0gZnJvbSAnLi9hdXJ0aG9yaXphdGlvbidcbmltcG9ydCB7cmVzdFJvdXRlcn0gZnJvbSAnLi9hcGkvcmVzdFJvdXRlcidcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxucmVxdWlyZShcImRvdGVudlwiKS5jb25maWcoKVxuXG5zZXR1cE1pZGR3YXJlKGFwcClcblxuY29ubmVjdCgpO1xuXG5hcHAudXNlKGNvcnMoKSk7XG5hcHAudXNlKCcvYXV0aCcsKHJlcSxyZXMsbmV4dCk9PntcbiAgcmVzLmhlYWRlcihcIkFjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpblwiLCBcIipcIilcbiAgcmVzLmhlYWRlcihcIkFjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHNcIiwgXCJQT1NULCBHRVQsIFBVVCwgREVMRVRFLCBPUFRJT05TXCIpXG4gIHJlcy5oZWFkZXIoXG4gICAgICBcIkFjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnNcIixcbiAgICAgIFwiT3JpZ2luLCBYLVJlcXVlc3RlZC1XaXRoLCBDb250ZW50LVR5cGUsIEF1dGhvcml6YXRpb24sIEFjY2VwdCwgQWNjZXNzLUNvbnRyb2wtQWxcIiArXG4gICAgICAgIFwibG93LU1ldGhvZHNcIlxuICAgIClcbiAgcmVzLmhlYWRlcihcIlgtRnJhbWUtT3B0aW9uc1wiLCBcImRlbnlcIilcbiAgcmVzLmhlYWRlcihcIlgtQ29udGVudC1UeXBlLU9wdGlvbnNcIiwgXCJub3NuaWZmXCIpXG4gIG5leHQoKTtcbn0pXG5hcHAudXNlKCcvYXV0aCcsYXV0aFJvdXRlcilcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMoJ3B1YmxpYycpKVxuYXBwLnVzZSgnL2FwaScsKHJlcSxyZXMsbmV4dCk9PntcbiAgcmVzLmhlYWRlcihcIkFjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpblwiLCBcIipcIilcbiAgcmVzLmhlYWRlcihcIkFjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHNcIiwgXCJQT1NULCBHRVQsIFBVVCwgREVMRVRFLCBPUFRJT05TXCIpXG4gIHJlcy5oZWFkZXIoXG4gICAgICBcIkFjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnNcIixcbiAgICAgIFwiT3JpZ2luLCBYLVJlcXVlc3RlZC1XaXRoLCBDb250ZW50LVR5cGUsIEF1dGhvcml6YXRpb24sIEFjY2VwdCwgQWNjZXNzLUNvbnRyb2wtQWxcIiArXG4gICAgICAgIFwibG93LU1ldGhvZHNcIlxuICAgIClcbiAgcmVzLmhlYWRlcihcIlgtRnJhbWUtT3B0aW9uc1wiLCBcImRlbnlcIilcbiAgcmVzLmhlYWRlcihcIlgtQ29udGVudC1UeXBlLU9wdGlvbnNcIiwgXCJub3NuaWZmXCIpXG4gIG5leHQoKTtcbn0pXG5hcHAudXNlKCcvYXBpJyxyZXN0Um91dGVyKVxuZXhwb3J0IGRlZmF1bHQgYXBwO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "require",
        "config",
        "use",
        "req",
        "res",
        "next",
        "header",
        "authRouter",
        "express",
        "restRouter"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AACA,IAAMA,GAAG,GAAG,0BAAZ;;AAEAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,6BAAcF,GAAd;AAEA;AAEAA,GAAG,CAACG,GAAJ,CAAQ,uBAAR;AACAH,GAAG,CAACG,GAAJ,CAAQ,OAAR,EAAgB,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAgB;AAC9BD,EAAAA,GAAG,CAACE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA2C,iCAA3C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CACI,8BADJ,EAEI,qFACE,aAHN;AAKAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,iBAAX,EAA8B,MAA9B;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,wBAAX,EAAqC,SAArC;AACAD,EAAAA,IAAI;AACL,CAXD;AAYAN,GAAG,CAACG,GAAJ,CAAQ,OAAR,EAAgBK,0BAAhB;AACAR,GAAG,CAACG,GAAJ,CAAQM,8BAAe,QAAf,CAAR;AACAT,GAAG,CAACG,GAAJ,CAAQ,MAAR,EAAe,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAgB;AAC7BD,EAAAA,GAAG,CAACE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA2C,iCAA3C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CACI,8BADJ,EAEI,qFACE,aAHN;AAKAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,iBAAX,EAA8B,MAA9B;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,wBAAX,EAAqC,SAArC;AACAD,EAAAA,IAAI;AACL,CAXD;AAYAN,GAAG,CAACG,GAAJ,CAAQ,MAAR,EAAeO,sBAAf;eACeV,G",
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\",
      "sourcesContent": [
        "import express from \"express\";\nimport cors from \"cors\";\nimport {connect} from './db'\nimport setupMiddware from './middlewares'\nimport {authRouter} from './aurthorization'\nimport {restRouter} from './api/restRouter'\nconst app = express();\n\nrequire(\"dotenv\").config()\n\nsetupMiddware(app)\n\nconnect();\n\napp.use(cors());\napp.use('/auth',(req,res,next)=>{\n  res.header(\"Access-Control-Allow-Origin\", \"*\")\n  res.header(\"Access-Control-Allow-Methods\", \"POST, GET, PUT, DELETE, OPTIONS\")\n  res.header(\n      \"Access-Control-Allow-Headers\",\n      \"Origin, X-Requested-With, Content-Type, Authorization, Accept, Access-Control-Al\" +\n        \"low-Methods\"\n    )\n  res.header(\"X-Frame-Options\", \"deny\")\n  res.header(\"X-Content-Type-Options\", \"nosniff\")\n  next();\n})\napp.use('/auth',authRouter)\napp.use(express.static('public'))\napp.use('/api',(req,res,next)=>{\n  res.header(\"Access-Control-Allow-Origin\", \"*\")\n  res.header(\"Access-Control-Allow-Methods\", \"POST, GET, PUT, DELETE, OPTIONS\")\n  res.header(\n      \"Access-Control-Allow-Headers\",\n      \"Origin, X-Requested-With, Content-Type, Authorization, Accept, Access-Control-Al\" +\n        \"low-Methods\"\n    )\n  res.header(\"X-Frame-Options\", \"deny\")\n  res.header(\"X-Content-Type-Options\", \"nosniff\")\n  next();\n})\napp.use('/api',restRouter)\nexport default app;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1594986597996
  },
  "{\"sourceRoot\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"filename\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\code\\dds\\social-share-backend-nikund",
      "filename": "E:\\code\\dds\\social-share-backend-nikund\\db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\code\\dds\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\code\\dds\\social-share-backend-nikund\\db.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\code\\dds\\social-share-backend-nikund\\db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.connect = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _mongooseTimestamp = _interopRequireDefault(require(\"mongoose-timestamp\"));\n\nvar _config = _interopRequireDefault(require(\"./config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_mongoose[\"default\"].Promise = global.Promise;\n\n_mongoose[\"default\"].plugin(_mongooseTimestamp[\"default\"]);\n\nvar connect = function connect() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _config[\"default\"];\n\n  _mongoose[\"default\"].set(\"useCreateIndex\", true);\n\n  _mongoose[\"default\"].set(\"useNewUrlParser\", true);\n\n  _mongoose[\"default\"].set(\"useFindAndModify\", false);\n\n  _mongoose[\"default\"].connect(_config[\"default\"].db.url, {\n    useUnifiedTopology: true,\n    useNewUrlParser: true\n  }).then(function () {\n    console.log(\"db connected\");\n  })[\"catch\"](function (err) {\n    console.log(err);\n  });\n};\n\nexports.connect = connect;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwiUHJvbWlzZSIsImdsb2JhbCIsInBsdWdpbiIsInRpbWVzdGFtcHMiLCJjb25uZWN0IiwiY29uZmlnIiwiYXBwQ29uZmlnIiwic2V0IiwiZGIiLCJ1cmwiLCJ1c2VVbmlmaWVkVG9wb2xvZ3kiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ0aGVuIiwiY29uc29sZSIsImxvZyIsImVyciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOzs7O0FBRUFBLHFCQUFTQyxPQUFULEdBQW1CQyxNQUFNLENBQUNELE9BQTFCOztBQUNBRCxxQkFBU0csTUFBVCxDQUFnQkMsNkJBQWhCOztBQUVPLElBQU1DLE9BQU8sR0FBRyxTQUFWQSxPQUFVLEdBQXdCO0FBQUEsTUFBdkJDLE1BQXVCLHVFQUFkQyxrQkFBYzs7QUFDM0NQLHVCQUFTUSxHQUFULENBQWEsZ0JBQWIsRUFBK0IsSUFBL0I7O0FBQ0FSLHVCQUFTUSxHQUFULENBQWEsaUJBQWIsRUFBZ0MsSUFBaEM7O0FBQ0FSLHVCQUFTUSxHQUFULENBQWEsa0JBQWIsRUFBaUMsS0FBakM7O0FBQ0FSLHVCQUFTSyxPQUFULENBQ0VFLG1CQUFVRSxFQUFWLENBQWFDLEdBRGYsRUFFRTtBQUFFQyxJQUFBQSxrQkFBa0IsRUFBRSxJQUF0QjtBQUNFQyxJQUFBQSxlQUFlLEVBQUU7QUFEbkIsR0FGRixFQUtFQyxJQUxGLENBS08sWUFBSTtBQUFDQyxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxjQUFaO0FBQTRCLEdBTHhDLFdBTU8sVUFBQ0MsR0FBRCxFQUFPO0FBQUNGLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxHQUFaO0FBQWlCLEdBTmhDO0FBUUQsQ0FaSSIsInNvdXJjZVJvb3QiOiJFOlxcY29kZVxcZGRzXFxzb2NpYWwtc2hhcmUtYmFja2VuZC1uaWt1bmRcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSdcbmltcG9ydCB0aW1lc3RhbXBzIGZyb20gJ21vbmdvb3NlLXRpbWVzdGFtcCdcbmltcG9ydCBhcHBDb25maWcgZnJvbSBcIi4vY29uZmlnXCI7XG5cbm1vbmdvb3NlLlByb21pc2UgPSBnbG9iYWwuUHJvbWlzZTtcbm1vbmdvb3NlLnBsdWdpbih0aW1lc3RhbXBzKTtcblxuZXhwb3J0IGNvbnN0IGNvbm5lY3QgPSAoY29uZmlnID0gYXBwQ29uZmlnKSA9PiB7XG4gICAgbW9uZ29vc2Uuc2V0KFwidXNlQ3JlYXRlSW5kZXhcIiwgdHJ1ZSk7XG4gICAgbW9uZ29vc2Uuc2V0KFwidXNlTmV3VXJsUGFyc2VyXCIsIHRydWUpO1xuICAgIG1vbmdvb3NlLnNldChcInVzZUZpbmRBbmRNb2RpZnlcIiwgZmFsc2UpO1xuICAgIG1vbmdvb3NlLmNvbm5lY3QoXG4gICAgICBhcHBDb25maWcuZGIudXJsLFxuICAgICAgeyB1c2VVbmlmaWVkVG9wb2xvZ3k6IHRydWUsXG4gICAgICAgIHVzZU5ld1VybFBhcnNlcjogdHJ1ZVxuICAgICAgfVxuICAgICkudGhlbigoKT0+e2NvbnNvbGUubG9nKFwiZGIgY29ubmVjdGVkXCIpfSlcbiAgICAuY2F0Y2goKGVycik9Pntjb25zb2xlLmxvZyhlcnIpfVxuICAgIClcbiAgfTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "mongoose",
        "Promise",
        "global",
        "plugin",
        "timestamps",
        "connect",
        "config",
        "appConfig",
        "set",
        "db",
        "url",
        "useUnifiedTopology",
        "useNewUrlParser",
        "then",
        "console",
        "log",
        "err"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAEAA,qBAASC,OAAT,GAAmBC,MAAM,CAACD,OAA1B;;AACAD,qBAASG,MAAT,CAAgBC,6BAAhB;;AAEO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAwB;AAAA,MAAvBC,MAAuB,uEAAdC,kBAAc;;AAC3CP,uBAASQ,GAAT,CAAa,gBAAb,EAA+B,IAA/B;;AACAR,uBAASQ,GAAT,CAAa,iBAAb,EAAgC,IAAhC;;AACAR,uBAASQ,GAAT,CAAa,kBAAb,EAAiC,KAAjC;;AACAR,uBAASK,OAAT,CACEE,mBAAUE,EAAV,CAAaC,GADf,EAEE;AAAEC,IAAAA,kBAAkB,EAAE,IAAtB;AACEC,IAAAA,eAAe,EAAE;AADnB,GAFF,EAKEC,IALF,CAKO,YAAI;AAACC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAA4B,GALxC,WAMO,UAACC,GAAD,EAAO;AAACF,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AAAiB,GANhC;AAQD,CAZI",
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\",
      "sourcesContent": [
        "import mongoose from 'mongoose'\nimport timestamps from 'mongoose-timestamp'\nimport appConfig from \"./config\";\n\nmongoose.Promise = global.Promise;\nmongoose.plugin(timestamps);\n\nexport const connect = (config = appConfig) => {\n    mongoose.set(\"useCreateIndex\", true);\n    mongoose.set(\"useNewUrlParser\", true);\n    mongoose.set(\"useFindAndModify\", false);\n    mongoose.connect(\n      appConfig.db.url,\n      { useUnifiedTopology: true,\n        useNewUrlParser: true\n      }\n    ).then(()=>{console.log(\"db connected\")})\n    .catch((err)=>{console.log(err)}\n    )\n  };"
      ]
    },
    "sourceType": "script",
    "mtime": 1594986596817
  },
  "{\"sourceRoot\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\config\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"filename\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\config\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\config\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\code\\dds\\social-share-backend-nikund",
      "filename": "E:\\code\\dds\\social-share-backend-nikund\\config\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\code\\dds\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\code\\dds\\social-share-backend-nikund\\config\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\code\\dds\\social-share-backend-nikund\\config\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\config\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nrequire(\"dotenv\").config();\n\nvar config = {\n  expireTime: process.env.JWTEXPIRE,\n  secrets: {\n    JWT_SECRET: process.env.JWTSECRET\n  },\n  db: {\n    url: process.env.DBURL\n  },\n  port: process.env.PORT\n};\nvar _default = config;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJjb25maWciLCJleHBpcmVUaW1lIiwicHJvY2VzcyIsImVudiIsIkpXVEVYUElSRSIsInNlY3JldHMiLCJKV1RfU0VDUkVUIiwiSldUU0VDUkVUIiwiZGIiLCJ1cmwiLCJEQlVSTCIsInBvcnQiLCJQT1JUIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUFBLE9BQU8sQ0FBQyxRQUFELENBQVAsQ0FBa0JDLE1BQWxCOztBQUNBLElBQU1BLE1BQU0sR0FBRztBQUNYQyxFQUFBQSxVQUFVLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxTQURiO0FBRVhDLEVBQUFBLE9BQU8sRUFBRTtBQUNQQyxJQUFBQSxVQUFVLEVBQUVKLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSTtBQURqQixHQUZFO0FBS1hDLEVBQUFBLEVBQUUsRUFBRTtBQUNGQyxJQUFBQSxHQUFHLEVBQUVQLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTztBQURmLEdBTE87QUFRWEMsRUFBQUEsSUFBSSxFQUFFVCxPQUFPLENBQUNDLEdBQVIsQ0FBWVM7QUFSUCxDQUFmO2VBV2lCWixNIiwic291cmNlUm9vdCI6IkU6XFxjb2RlXFxkZHNcXHNvY2lhbC1zaGFyZS1iYWNrZW5kLW5pa3VuZFxcY29uZmlnXFwiLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKFwiZG90ZW52XCIpLmNvbmZpZygpXG5jb25zdCBjb25maWcgPSB7XG4gICAgZXhwaXJlVGltZTogcHJvY2Vzcy5lbnYuSldURVhQSVJFLFxuICAgIHNlY3JldHM6IHtcbiAgICAgIEpXVF9TRUNSRVQ6IHByb2Nlc3MuZW52LkpXVFNFQ1JFVFxuICAgIH0sXG4gICAgZGI6IHtcbiAgICAgIHVybDogcHJvY2Vzcy5lbnYuREJVUkxcbiAgICB9LFxuICAgIHBvcnQ6IHByb2Nlc3MuZW52LlBPUlQsXG4gIH1cbiAgXG4gIGV4cG9ydCBkZWZhdWx0IGNvbmZpZyAiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "require",
        "config",
        "expireTime",
        "process",
        "env",
        "JWTEXPIRE",
        "secrets",
        "JWT_SECRET",
        "JWTSECRET",
        "db",
        "url",
        "DBURL",
        "port",
        "PORT"
      ],
      "mappings": ";;;;;;;AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,IAAMA,MAAM,GAAG;AACXC,EAAAA,UAAU,EAAEC,OAAO,CAACC,GAAR,CAAYC,SADb;AAEXC,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EAAEJ,OAAO,CAACC,GAAR,CAAYI;AADjB,GAFE;AAKXC,EAAAA,EAAE,EAAE;AACFC,IAAAA,GAAG,EAAEP,OAAO,CAACC,GAAR,CAAYO;AADf,GALO;AAQXC,EAAAA,IAAI,EAAET,OAAO,CAACC,GAAR,CAAYS;AARP,CAAf;eAWiBZ,M",
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\config\\",
      "sourcesContent": [
        "require(\"dotenv\").config()\nconst config = {\n    expireTime: process.env.JWTEXPIRE,\n    secrets: {\n      JWT_SECRET: process.env.JWTSECRET\n    },\n    db: {\n      url: process.env.DBURL\n    },\n    port: process.env.PORT,\n  }\n  \n  export default config "
      ]
    },
    "sourceType": "script",
    "mtime": 1594986604012
  },
  "{\"sourceRoot\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\middlewares\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"filename\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\middlewares\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\middlewares\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\code\\dds\\social-share-backend-nikund",
      "filename": "E:\\code\\dds\\social-share-backend-nikund\\middlewares\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\code\\dds\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\code\\dds\\social-share-backend-nikund\\middlewares\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\code\\dds\\social-share-backend-nikund\\middlewares\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\middlewares\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _helmet = _interopRequireDefault(require(\"helmet\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar setGlobelMiddleware = function setGlobelMiddleware(app) {\n  app.use(_bodyParser[\"default\"].urlencoded({\n    limit: \"50mb\",\n    extended: true\n  }));\n  app.use(_bodyParser[\"default\"].json({\n    limit: \"50mb\"\n  }));\n  app.use(_bodyParser[\"default\"].text({\n    type: \"application/x-ndjson\"\n  }));\n  app.use((0, _helmet[\"default\"])());\n  app.use(_helmet[\"default\"].xssFilter());\n  app.disable(\"x-powered-by\");\n  var sixtyDaysInSeconds = 5184000;\n  app.use(_helmet[\"default\"].hsts({\n    maxAge: sixtyDaysInSeconds\n  }));\n};\n\nvar _default = setGlobelMiddleware;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInNldEdsb2JlbE1pZGRsZXdhcmUiLCJhcHAiLCJ1c2UiLCJib2R5UGFyc2VyIiwidXJsZW5jb2RlZCIsImxpbWl0IiwiZXh0ZW5kZWQiLCJqc29uIiwidGV4dCIsInR5cGUiLCJoZWxtZXQiLCJ4c3NGaWx0ZXIiLCJkaXNhYmxlIiwic2l4dHlEYXlzSW5TZWNvbmRzIiwiaHN0cyIsIm1heEFnZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7O0FBRUEsSUFBTUEsbUJBQW1CLEdBQUcsU0FBdEJBLG1CQUFzQixDQUFBQyxHQUFHLEVBQUc7QUFDOUJBLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRQyx1QkFBV0MsVUFBWCxDQUFzQjtBQUFFQyxJQUFBQSxLQUFLLEVBQUUsTUFBVDtBQUFpQkMsSUFBQUEsUUFBUSxFQUFFO0FBQTNCLEdBQXRCLENBQVI7QUFDQUwsRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVFDLHVCQUFXSSxJQUFYLENBQWdCO0FBQUVGLElBQUFBLEtBQUssRUFBRTtBQUFULEdBQWhCLENBQVI7QUFDQUosRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVFDLHVCQUFXSyxJQUFYLENBQWdCO0FBQUVDLElBQUFBLElBQUksRUFBRTtBQUFSLEdBQWhCLENBQVI7QUFDQVIsRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEseUJBQVI7QUFDQUQsRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVFRLG1CQUFPQyxTQUFQLEVBQVI7QUFDQVYsRUFBQUEsR0FBRyxDQUFDVyxPQUFKLENBQVksY0FBWjtBQUVBLE1BQU1DLGtCQUFrQixHQUFHLE9BQTNCO0FBQ0FaLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUNFUSxtQkFBT0ksSUFBUCxDQUFZO0FBQ1ZDLElBQUFBLE1BQU0sRUFBRUY7QUFERSxHQUFaLENBREY7QUFLRCxDQWRIOztlQWdCZWIsbUIiLCJzb3VyY2VSb290IjoiRTpcXGNvZGVcXGRkc1xcc29jaWFsLXNoYXJlLWJhY2tlbmQtbmlrdW5kXFxtaWRkbGV3YXJlc1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInXG5pbXBvcnQgaGVsbWV0IGZyb20gJ2hlbG1ldCdcblxuY29uc3Qgc2V0R2xvYmVsTWlkZGxld2FyZSA9IGFwcCA9PntcbiAgICBhcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7IGxpbWl0OiBcIjUwbWJcIiwgZXh0ZW5kZWQ6IHRydWUgfSkpO1xuICAgIGFwcC51c2UoYm9keVBhcnNlci5qc29uKHsgbGltaXQ6IFwiNTBtYlwiIH0pKTtcbiAgICBhcHAudXNlKGJvZHlQYXJzZXIudGV4dCh7IHR5cGU6IFwiYXBwbGljYXRpb24veC1uZGpzb25cIiB9KSk7XG4gICAgYXBwLnVzZShoZWxtZXQoKSk7XG4gICAgYXBwLnVzZShoZWxtZXQueHNzRmlsdGVyKCkpXG4gICAgYXBwLmRpc2FibGUoXCJ4LXBvd2VyZWQtYnlcIik7XG5cbiAgICBjb25zdCBzaXh0eURheXNJblNlY29uZHMgPSA1MTg0MDAwO1xuICAgIGFwcC51c2UoXG4gICAgICBoZWxtZXQuaHN0cyh7XG4gICAgICAgIG1heEFnZTogc2l4dHlEYXlzSW5TZWNvbmRzXG4gICAgICB9KVxuICAgICk7XG4gIH07XG5cbmV4cG9ydCBkZWZhdWx0IHNldEdsb2JlbE1pZGRsZXdhcmU7Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "setGlobelMiddleware",
        "app",
        "use",
        "bodyParser",
        "urlencoded",
        "limit",
        "extended",
        "json",
        "text",
        "type",
        "helmet",
        "xssFilter",
        "disable",
        "sixtyDaysInSeconds",
        "hsts",
        "maxAge"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,GAAG,EAAG;AAC9BA,EAAAA,GAAG,CAACC,GAAJ,CAAQC,uBAAWC,UAAX,CAAsB;AAAEC,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,QAAQ,EAAE;AAA3B,GAAtB,CAAR;AACAL,EAAAA,GAAG,CAACC,GAAJ,CAAQC,uBAAWI,IAAX,CAAgB;AAAEF,IAAAA,KAAK,EAAE;AAAT,GAAhB,CAAR;AACAJ,EAAAA,GAAG,CAACC,GAAJ,CAAQC,uBAAWK,IAAX,CAAgB;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAhB,CAAR;AACAR,EAAAA,GAAG,CAACC,GAAJ,CAAQ,yBAAR;AACAD,EAAAA,GAAG,CAACC,GAAJ,CAAQQ,mBAAOC,SAAP,EAAR;AACAV,EAAAA,GAAG,CAACW,OAAJ,CAAY,cAAZ;AAEA,MAAMC,kBAAkB,GAAG,OAA3B;AACAZ,EAAAA,GAAG,CAACC,GAAJ,CACEQ,mBAAOI,IAAP,CAAY;AACVC,IAAAA,MAAM,EAAEF;AADE,GAAZ,CADF;AAKD,CAdH;;eAgBeb,mB",
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\middlewares\\",
      "sourcesContent": [
        "import bodyParser from 'body-parser'\nimport helmet from 'helmet'\n\nconst setGlobelMiddleware = app =>{\n    app.use(bodyParser.urlencoded({ limit: \"50mb\", extended: true }));\n    app.use(bodyParser.json({ limit: \"50mb\" }));\n    app.use(bodyParser.text({ type: \"application/x-ndjson\" }));\n    app.use(helmet());\n    app.use(helmet.xssFilter())\n    app.disable(\"x-powered-by\");\n\n    const sixtyDaysInSeconds = 5184000;\n    app.use(\n      helmet.hsts({\n        maxAge: sixtyDaysInSeconds\n      })\n    );\n  };\n\nexport default setGlobelMiddleware;"
      ]
    },
    "sourceType": "script",
    "mtime": 1594986604347
  },
  "{\"sourceRoot\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\aurthorization\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"filename\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\aurthorization\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\aurthorization\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\code\\dds\\social-share-backend-nikund",
      "filename": "E:\\code\\dds\\social-share-backend-nikund\\aurthorization\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\code\\dds\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\code\\dds\\social-share-backend-nikund\\aurthorization\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\code\\dds\\social-share-backend-nikund\\aurthorization\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\aurthorization\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _auth = require(\"./auth.restRouter\");\n\nObject.keys(_auth).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _auth[key];\n    }\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSIsInNvdXJjZVJvb3QiOiJFOlxcY29kZVxcZGRzXFxzb2NpYWwtc2hhcmUtYmFja2VuZC1uaWt1bmRcXGF1cnRob3JpemF0aW9uXFwiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9hdXRoLnJlc3RSb3V0ZXJcIjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [],
      "mappings": ";;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA",
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\aurthorization\\",
      "sourcesContent": [
        "export * from \"./auth.restRouter\";"
      ]
    },
    "sourceType": "script",
    "mtime": 1594986603414
  },
  "{\"sourceRoot\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\aurthorization\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"filename\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\aurthorization\\\\auth.restRouter.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\aurthorization\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\code\\dds\\social-share-backend-nikund",
      "filename": "E:\\code\\dds\\social-share-backend-nikund\\aurthorization\\auth.restRouter.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\code\\dds\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\code\\dds\\social-share-backend-nikund\\aurthorization\\auth.restRouter.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\code\\dds\\social-share-backend-nikund\\aurthorization\\auth.restRouter.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\aurthorization\\",
        "sourceFileName": "auth.restRouter.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.authRouter = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _auth = require(\"./auth.controller\");\n\nvar _auth2 = require(\"./auth.middleware\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar authRouter = _express[\"default\"].Router();\n\nexports.authRouter = authRouter;\nauthRouter.post('/signin', _auth2.requireSignIn, _auth.signin);\nauthRouter.post(\"/signup\", _auth.signup);\nauthRouter.post('/forgotpassword', _auth.forgotPassword);\nauthRouter.post(\"/resetpassword\", _auth.resetPassword);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGgucmVzdFJvdXRlci5qcyJdLCJuYW1lcyI6WyJhdXRoUm91dGVyIiwiZXhwcmVzcyIsIlJvdXRlciIsInBvc3QiLCJyZXF1aXJlU2lnbkluIiwic2lnbmluIiwic2lnbnVwIiwiZm9yZ290UGFzc3dvcmQiLCJyZXNldFBhc3N3b3JkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBTUE7Ozs7QUFDTyxJQUFNQSxVQUFVLEdBQUdDLG9CQUFRQyxNQUFSLEVBQW5COzs7QUFFUEYsVUFBVSxDQUFDRyxJQUFYLENBQWdCLFNBQWhCLEVBQTBCQyxvQkFBMUIsRUFBd0NDLFlBQXhDO0FBQ0FMLFVBQVUsQ0FBQ0csSUFBWCxDQUFnQixTQUFoQixFQUEyQkcsWUFBM0I7QUFDQU4sVUFBVSxDQUFDRyxJQUFYLENBQWdCLGlCQUFoQixFQUFrQ0ksb0JBQWxDO0FBQ0FQLFVBQVUsQ0FBQ0csSUFBWCxDQUFnQixnQkFBaEIsRUFBaUNLLG1CQUFqQyIsInNvdXJjZVJvb3QiOiJFOlxcY29kZVxcZGRzXFxzb2NpYWwtc2hhcmUtYmFja2VuZC1uaWt1bmRcXGF1cnRob3JpemF0aW9uXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiO1xuaW1wb3J0IHtcbiAgICBzaWdudXAsXG4gICAgc2lnbmluLFxuICAgIGZvcmdvdFBhc3N3b3JkLFxuICAgIHJlc2V0UGFzc3dvcmRcbn0gZnJvbSAnLi9hdXRoLmNvbnRyb2xsZXInXG5pbXBvcnQge3JlcXVpcmVTaWduSW59IGZyb20gJy4vYXV0aC5taWRkbGV3YXJlJ1xuZXhwb3J0IGNvbnN0IGF1dGhSb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG5hdXRoUm91dGVyLnBvc3QoJy9zaWduaW4nLHJlcXVpcmVTaWduSW4sc2lnbmluKTtcbmF1dGhSb3V0ZXIucG9zdChcIi9zaWdudXBcIiwgc2lnbnVwKTtcbmF1dGhSb3V0ZXIucG9zdCgnL2ZvcmdvdHBhc3N3b3JkJyxmb3Jnb3RQYXNzd29yZCk7XG5hdXRoUm91dGVyLnBvc3QoXCIvcmVzZXRwYXNzd29yZFwiLHJlc2V0UGFzc3dvcmQpO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "auth.restRouter.js"
      ],
      "names": [
        "authRouter",
        "express",
        "Router",
        "post",
        "requireSignIn",
        "signin",
        "signup",
        "forgotPassword",
        "resetPassword"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAMA;;;;AACO,IAAMA,UAAU,GAAGC,oBAAQC,MAAR,EAAnB;;;AAEPF,UAAU,CAACG,IAAX,CAAgB,SAAhB,EAA0BC,oBAA1B,EAAwCC,YAAxC;AACAL,UAAU,CAACG,IAAX,CAAgB,SAAhB,EAA2BG,YAA3B;AACAN,UAAU,CAACG,IAAX,CAAgB,iBAAhB,EAAkCI,oBAAlC;AACAP,UAAU,CAACG,IAAX,CAAgB,gBAAhB,EAAiCK,mBAAjC",
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\aurthorization\\",
      "sourcesContent": [
        "import express from \"express\";\nimport {\n    signup,\n    signin,\n    forgotPassword,\n    resetPassword\n} from './auth.controller'\nimport {requireSignIn} from './auth.middleware'\nexport const authRouter = express.Router();\n\nauthRouter.post('/signin',requireSignIn,signin);\nauthRouter.post(\"/signup\", signup);\nauthRouter.post('/forgotpassword',forgotPassword);\nauthRouter.post(\"/resetpassword\",resetPassword);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1594986603104
  },
  "{\"sourceRoot\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\aurthorization\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"filename\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\aurthorization\\\\auth.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\aurthorization\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\code\\dds\\social-share-backend-nikund",
      "filename": "E:\\code\\dds\\social-share-backend-nikund\\aurthorization\\auth.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\code\\dds\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\code\\dds\\social-share-backend-nikund\\aurthorization\\auth.controller.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\code\\dds\\social-share-backend-nikund\\aurthorization\\auth.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\aurthorization\\",
        "sourceFileName": "auth.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resetPassword = exports.forgotPassword = exports.signin = exports.signup = void 0;\n\nvar _users = require(\"../api/users\");\n\nvar _bcryptNodejs = _interopRequireDefault(require(\"bcrypt-nodejs\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nvar _nodemailer = _interopRequireDefault(require(\"nodemailer\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// mail object\nvar smtpTransport = _nodemailer[\"default\"].createTransport({\n  host: \"smtp.gmail.com\",\n  port: 587,\n  auth: {\n    user: \"shubhamkanani.dds@gmail.com\",\n    pass: 'Sh9825784600'\n  }\n}); // Registration api\n\n\nvar signup = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var _req$body, email, name, uname, password, userName, emailRegexp, mobileNoRegexp, emailId, isEmailExist, mobileNo, ismobileNoExist;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _req$body = req.body, email = _req$body.email, name = _req$body.name, uname = _req$body.uname, password = _req$body.password;\n            userName = uname;\n            emailRegexp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n            mobileNoRegexp = /\\(?\\d{3}\\)?-? *\\d{3}-? *-?\\d{6}/;\n\n            if (!emailRegexp.test(email)) {\n              _context.next = 19;\n              break;\n            }\n\n            emailId = email.toLowerCase();\n            _context.next = 9;\n            return _users.Users.findOne({\n              emailId: emailId\n            });\n\n          case 9:\n            isEmailExist = _context.sent;\n            console.log(isEmailExist);\n\n            if (!isEmailExist) {\n              _context.next = 13;\n              break;\n            }\n\n            return _context.abrupt(\"return\", res.status(422).send({\n              success: false,\n              message: \"Email is alrady exist\"\n            }));\n\n          case 13:\n            console.log(_bcryptNodejs[\"default\"].hashSync(password));\n            _context.next = 16;\n            return _users.Users.create({\n              emailId: emailId,\n              name: name,\n              userName: userName,\n              password: _bcryptNodejs[\"default\"].hashSync(password)\n            });\n\n          case 16:\n            return _context.abrupt(\"return\", res.status(201).send({\n              success: true,\n              message: \"User created successfully.\"\n            }));\n\n          case 19:\n            if (!mobileNoRegexp.test(email)) {\n              _context.next = 31;\n              break;\n            }\n\n            mobileNo = email;\n            _context.next = 23;\n            return _users.Users.findOne({\n              mobileNo: mobileNo\n            });\n\n          case 23:\n            ismobileNoExist = _context.sent;\n\n            if (!ismobileNoExist) {\n              _context.next = 26;\n              break;\n            }\n\n            return _context.abrupt(\"return\", res.status(422).send({\n              success: false,\n              message: \"Mobile number is alrady exist\"\n            }));\n\n          case 26:\n            _context.next = 28;\n            return _users.Users.create({\n              mobileNo: mobileNo,\n              name: name,\n              userName: userName,\n              password: _bcryptNodejs[\"default\"].hashSync(password)\n            });\n\n          case 28:\n            return _context.abrupt(\"return\", res.status(201).send({\n              success: true,\n              message: \"User created successfully.\"\n            }));\n\n          case 31:\n            return _context.abrupt(\"return\", res.status(401).send({\n              success: false,\n              message: \"User not created.\"\n            }));\n\n          case 32:\n            _context.next = 37;\n            break;\n\n          case 34:\n            _context.prev = 34;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(422).send({\n              success: false,\n              message: _context.t0.message\n            });\n\n          case 37:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 34]]);\n  }));\n\n  return function signup(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}(); //token genration\n\n\nexports.signup = signup;\nvar expirationInterval = process.env.NODE_ENV === \"development\" ? 30 * 24 * 60 * 60 : (parseInt(process.env.JWTSECRET) || 1) * 24 * 60 * 60;\n\nvar tokenForUser = function tokenForUser(user) {\n  try {\n    console.log(user.emailId);\n    var timestamp = new Date().getTime();\n    return _jsonwebtoken[\"default\"].sign({\n      sub: user.emailId,\n      iat: timestamp,\n      // entityDetails: loginDetails.relatedFaEntities[0],\n      exp: Math.floor(Date.now() / 1000) + expirationInterval\n    }, _config[\"default\"].secrets.JWT_SECRET);\n  } catch (err) {\n    throw err;\n  }\n}; //signin api\n\n\nvar signin = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var email, emailRegexp, mobileNoRegexp, userExistence, _userExistence;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            email = req.body.email;\n            _context2.prev = 1;\n            emailRegexp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n            mobileNoRegexp = /\\(?\\d{3}\\)?-? *\\d{3}-? *-?\\d{6}/;\n\n            if (!emailRegexp.test(email)) {\n              _context2.next = 11;\n              break;\n            }\n\n            _context2.next = 7;\n            return _users.Users.findOne({\n              emailId: email.toLowerCase()\n            });\n\n          case 7:\n            userExistence = _context2.sent;\n\n            if (userExistence) {\n              res.status(200).send({\n                success: true,\n                token: tokenForUser(userExistence),\n                data: userExistence\n              });\n            }\n\n            _context2.next = 16;\n            break;\n\n          case 11:\n            if (!mobileNoRegexp.test(email)) {\n              _context2.next = 16;\n              break;\n            }\n\n            _context2.next = 14;\n            return _users.Users.findOne({\n              mobileNo: email\n            });\n\n          case 14:\n            _userExistence = _context2.sent;\n\n            if (_userExistence) {\n              res.status(200).send({\n                success: true,\n                token: tokenForUser(_userExistence),\n                data: _userExistence\n              });\n            }\n\n          case 16:\n            _context2.next = 21;\n            break;\n\n          case 18:\n            _context2.prev = 18;\n            _context2.t0 = _context2[\"catch\"](1);\n            res.status(422).send({\n              success: false,\n              error: \"Unable to Login using email - \".concat(email)\n            });\n\n          case 21:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 18]]);\n  }));\n\n  return function signin(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}(); //forget password Link genration\n\n\nexports.signin = signin;\n\nvar forgotPassword = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var email, emailId, emailRegexp, isEmailExist, mail, token, data;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            email = req.body.email;\n            emailId = email.toLowerCase();\n            emailRegexp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n            if (emailRegexp.test(emailId)) {\n              _context3.next = 6;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", res.status(422).send({\n              success: false,\n              message: \"Invalid Email\"\n            }));\n\n          case 6:\n            _context3.next = 8;\n            return _users.Users.findOne({\n              emailId: emailId\n            }).then(function (data) {\n              return data ? true : false;\n            });\n\n          case 8:\n            isEmailExist = _context3.sent;\n\n            if (isEmailExist) {\n              _context3.next = 11;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", res.status(422).send({\n              success: false,\n              message: \"email in not registered\"\n            }));\n\n          case 11:\n            mail = {\n              emailId: email\n            };\n            token = tokenForUser(mail);\n            data = {\n              to: emailId,\n              from: process.env.MAILER_EMAIL_ID,\n              subject: \"Click Below Link To Reset Password \",\n              text: \"Confirm your email address to get started.\\n\\n\" + \"Please click on the following link, or paste this into your browser to the reset password process:\\n\\n\" + \"http://localhost:4200/reset?token=\" + token + \"\\n\\n\" + \"If you did not need this, please ignore this email and your password will remain unchanged.\\n\"\n            };\n            _context3.next = 16;\n            return smtpTransport.sendMail(data, function (err) {\n              return err ? res.status(422).send({\n                success: false,\n                message: err\n              }) : res.status(200).send({\n                success: true,\n                message: \"please check your email to reset your password!\"\n              });\n            });\n\n          case 16:\n            _context3.next = 21;\n            break;\n\n          case 18:\n            _context3.prev = 18;\n            _context3.t0 = _context3[\"catch\"](0);\n            res.status(422).send({\n              success: false,\n              message: _context3.t0.message\n            });\n\n          case 21:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 18]]);\n  }));\n\n  return function forgotPassword(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexports.forgotPassword = forgotPassword;\n\nvar resetPassword = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var token, decoded;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            token = req.query.token;\n            decoded = _jsonwebtoken[\"default\"].decode(token);\n            console.log(decoded);\n            _context4.next = 6;\n            return _users.Users.findOneAndUpdate({\n              emailId: decoded.sub\n            }, {\n              password: _bcryptNodejs[\"default\"].hashSync(req.body.password)\n            });\n\n          case 6:\n            return _context4.abrupt(\"return\", res.status(200).send({\n              success: true,\n              message: \"your password changed successfully!\"\n            }));\n\n          case 9:\n            _context4.prev = 9;\n            _context4.t0 = _context4[\"catch\"](0);\n            res.status(422).send({\n              success: false,\n              message: _context4.t0.message\n            });\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 9]]);\n  }));\n\n  return function resetPassword(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nexports.resetPassword = resetPassword;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "auth.controller.js"
      ],
      "names": [
        "smtpTransport",
        "nodemailer",
        "createTransport",
        "host",
        "port",
        "auth",
        "user",
        "pass",
        "signup",
        "req",
        "res",
        "body",
        "email",
        "name",
        "uname",
        "password",
        "userName",
        "emailRegexp",
        "mobileNoRegexp",
        "test",
        "emailId",
        "toLowerCase",
        "Users",
        "findOne",
        "isEmailExist",
        "console",
        "log",
        "status",
        "send",
        "success",
        "message",
        "bcrypt",
        "hashSync",
        "create",
        "mobileNo",
        "ismobileNoExist",
        "expirationInterval",
        "process",
        "env",
        "NODE_ENV",
        "parseInt",
        "JWTSECRET",
        "tokenForUser",
        "timestamp",
        "Date",
        "getTime",
        "jwt",
        "sign",
        "sub",
        "iat",
        "exp",
        "Math",
        "floor",
        "now",
        "configKey",
        "secrets",
        "JWT_SECRET",
        "err",
        "signin",
        "userExistence",
        "token",
        "data",
        "error",
        "forgotPassword",
        "then",
        "mail",
        "to",
        "from",
        "MAILER_EMAIL_ID",
        "subject",
        "text",
        "sendMail",
        "resetPassword",
        "query",
        "decoded",
        "decode",
        "findOneAndUpdate"
      ],
      "mappings": "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",
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\aurthorization\\",
      "sourcesContent": [
        "import {Users} from '../api/users'\nimport bcrypt from 'bcrypt-nodejs'\nimport jwt from 'jsonwebtoken'\nimport configKey from '../config'\nimport nodemailer from 'nodemailer'\n\n// mail object\nconst smtpTransport = nodemailer.createTransport({\n    host: \"smtp.gmail.com\",\n    port: 587,\n    auth: {\n      user: \"shubhamkanani.dds@gmail.com\",\n      pass: 'Sh9825784600'\n    }\n  });\n// Registration api\n\nexport const signup = async (req,res) =>{\n    try{\n        const {email,name,uname,password} = req.body;\n        const userName = uname;\n        const emailRegexp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n        const mobileNoRegexp = /\\(?\\d{3}\\)?-? *\\d{3}-? *-?\\d{6}/;\n        if(emailRegexp.test(email)){\n            const emailId = email.toLowerCase();\n            const isEmailExist = await Users.findOne({emailId: emailId});\n            console.log(isEmailExist);\n            if(isEmailExist){\n                return res\n                    .status(422)\n                    .send({ success: false, message: \"Email is alrady exist\" });\n            }\n            console.log(bcrypt.hashSync(password))\n            await Users.create({\n                emailId,\n                name,\n                userName,\n                password:bcrypt.hashSync(password),\n            })\n            return res.status(201).send({\n                success: true,\n                message: \"User created successfully.\"\n              });\n        }\n        else if(mobileNoRegexp.test(email)){\n            const mobileNo = email;\n            const ismobileNoExist = await Users.findOne({mobileNo:mobileNo})\n            if(ismobileNoExist){\n                return res\n                    .status(422)\n                    .send({ success: false, message: \"Mobile number is alrady exist\" });\n            }\n            await Users.create({\n                mobileNo,\n                name,\n                userName,\n                password:bcrypt.hashSync(password),\n            })\n            return res.status(201).send({\n                success: true,\n                message: \"User created successfully.\"\n              });\n        }\n        else{\n            return res.status(401).send({\n                success: false,\n                message: \"User not created.\"\n              });\n        }\n    }\n    catch(err){\n        res.status(422).send({ success: false, message: err.message });\n    }\n}\n\n//token genration\nconst expirationInterval =\n    (process.env.NODE_ENV === \"development\")? 30 * 24 * 60 * 60: (parseInt(process.env.JWTSECRET) || 1) * 24 * 60 * 60;\n\nconst tokenForUser = (user) => {\n    try {\n      console.log(user.emailId)\n      const timestamp = new Date().getTime();\n      return jwt.sign(\n        {\n          sub: user.emailId,\n          iat: timestamp,\n          // entityDetails: loginDetails.relatedFaEntities[0],\n          exp: Math.floor(Date.now() / 1000) + expirationInterval\n        },\n        configKey.secrets.JWT_SECRET\n      );\n    }\n    catch (err) {\n      throw err;\n    }\n  };\n\n//signin api\n\nexport const signin = async (req,res) => {\n    const {email} = req.body;\n    try{\n        const emailRegexp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n        const mobileNoRegexp = /\\(?\\d{3}\\)?-? *\\d{3}-? *-?\\d{6}/;\n            if(emailRegexp.test(email)){\n               const userExistence = await Users.findOne({emailId:email.toLowerCase()})\n               if(userExistence){\n                res.status(200).send({\n                    success: true,\n                    token: tokenForUser(userExistence),\n                    data:userExistence\n                  });\n            }\n            }\n            else if(mobileNoRegexp.test(email)){\n               const userExistence = await Users.findOne({mobileNo:email})\n               if(userExistence){\n                res.status(200).send({\n                    success: true,\n                    token: tokenForUser(userExistence),\n                    data:userExistence\n                  });\n            }\n            }\n    }\n    catch(err){\n        res.status(422).send({\n            success: false,\n            error: `Unable to Login using email - ${email}`\n          });\n    }\n}\n\n//forget password Link genration\n\nexport const forgotPassword = async (req,res) =>{\n  try{\n    let {email} = req.body\n    const emailId = email.toLowerCase();\n    const emailRegexp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if (!emailRegexp.test(emailId)) {\n        return res.status(422).send({ success: false, message: \"Invalid Email\" });\n      }\n    const isEmailExist = await Users.findOne({emailId:emailId}).then(data => {\n        return data ? true : false;\n      });\n      if (!isEmailExist) {\n        return res\n          .status(422)\n          .send({ success: false, message: \"email in not registered\" });\n      }\n      const mail = {\n        emailId:email\n      }\n      const token = tokenForUser(mail);\n      const data = {\n        to: emailId,\n        from: process.env.MAILER_EMAIL_ID,\n        subject: \"Click Below Link To Reset Password \",\n        text:\n          \"Confirm your email address to get started.\\n\\n\" +\n          \"Please click on the following link, or paste this into your browser to the reset password process:\\n\\n\" +\n          \"http://localhost:4200/reset?token=\" +\n          token +\n          \"\\n\\n\" +\n          \"If you did not need this, please ignore this email and your password will remain unchanged.\\n\"\n      };\n      await smtpTransport.sendMail(data, err => {\n        return err ? res.status(422).send({\n              success: false,\n              message: err\n            }) : res.status(200).send({\n              success: true,\n              message: \"please check your email to reset your password!\"\n            });\n      });\n  }\n  catch(err){\n    res.status(422).send({ success: false, message: err.message });\n  }\n}\nexport const resetPassword = async(req,res) =>{\n  try{\n    const token = req.query.token;\n    const decoded =jwt.decode(token)\n    console.log(decoded);\n    await Users.findOneAndUpdate(\n      { emailId: decoded.sub },\n      { password: bcrypt.hashSync(req.body.password) }\n    );\n    return res.status(200).send({\n      success: true,\n      message: \"your password changed successfully!\"\n    });\n  }\n  catch(err){\n    res.status(422).send({ success: false, message: err.message });\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1594986602610
  },
  "{\"sourceRoot\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\users\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"filename\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\users\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\users\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\code\\dds\\social-share-backend-nikund",
      "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\users\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\code\\dds\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\code\\dds\\social-share-backend-nikund\\api\\users\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\users\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\users\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _user = require(\"./user.restRouter\");\n\nObject.keys(_user).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _user[key];\n    }\n  });\n});\n\nvar _user2 = require(\"./user.modal\");\n\nObject.keys(_user2).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _user2[key];\n    }\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFDQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEiLCJzb3VyY2VSb290IjoiRTpcXGNvZGVcXGRkc1xcc29jaWFsLXNoYXJlLWJhY2tlbmQtbmlrdW5kXFxhcGlcXHVzZXJzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICcuL3VzZXIucmVzdFJvdXRlcic7XG5leHBvcnQgKiBmcm9tICcuL3VzZXIubW9kYWwnIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [],
      "mappings": ";;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA",
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\users\\",
      "sourcesContent": [
        "export * from './user.restRouter';\nexport * from './user.modal'"
      ]
    },
    "sourceType": "script",
    "mtime": 1594986601263
  },
  "{\"sourceRoot\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\users\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"filename\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\users\\\\user.restRouter.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\users\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\code\\dds\\social-share-backend-nikund",
      "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\users\\user.restRouter.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\code\\dds\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\code\\dds\\social-share-backend-nikund\\api\\users\\user.restRouter.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\users\\user.restRouter.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\users\\",
        "sourceFileName": "user.restRouter.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.userRouter = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _user = require(\"./user.controller\");\n\nvar _multer = _interopRequireDefault(require(\"multer\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _config = _interopRequireDefault(require(\"../../config\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _user2 = require(\"./user.modal\");\n\nvar _querystring = require(\"querystring\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar userRouter = _express[\"default\"].Router();\n\nexports.userRouter = userRouter;\n\nvar pstorage = _multer[\"default\"].diskStorage({\n  destination: function () {\n    var _destination = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, file, cb) {\n      var profileUploadDir;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              profileUploadDir = _path[\"default\"].join(__dirname, '..', '..', 'public', 'profile');\n\n              if (_fs[\"default\"].existsSync(profileUploadDir)) {\n                cb(null, profileUploadDir);\n              } else {\n                _fs[\"default\"].mkdirSync(profileUploadDir);\n\n                cb(null, profileUploadDir);\n              }\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function destination(_x, _x2, _x3) {\n      return _destination.apply(this, arguments);\n    }\n\n    return destination;\n  }(),\n  filename: function () {\n    var _filename = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, file, cb) {\n      var decoded, data, extension;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n            case 2:\n              decoded = _context2.sent;\n              _context2.next = 5;\n              return _user2.Users.findOne({\n                emailId: decoded.sub\n              });\n\n            case 5:\n              data = _context2.sent;\n              extension = file.originalname.substring(file.originalname.lastIndexOf('.') + 1);\n              cb(null, data._id + '.' + extension);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function filename(_x4, _x5, _x6) {\n      return _filename.apply(this, arguments);\n    }\n\n    return filename;\n  }()\n});\n\nvar cstroge = _multer[\"default\"].diskStorage({\n  destination: function () {\n    var _destination2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, file, cb) {\n      var userId, coverUploaddir;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              userId = req.body.userId;\n              coverUploaddir = _path[\"default\"].join(__dirname, '..', '..', 'public', 'cover');\n\n              if (_fs[\"default\"].existsSync(coverUploaddir)) {\n                cb(null, coverUploaddir);\n              } else {\n                _fs[\"default\"].mkdirSync(coverUploaddir);\n\n                cb(null, coverUploaddir);\n              }\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function destination(_x7, _x8, _x9) {\n      return _destination2.apply(this, arguments);\n    }\n\n    return destination;\n  }(),\n  filename: function () {\n    var _filename2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, file, cb) {\n      var decoded, data, extension;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n            case 2:\n              decoded = _context4.sent;\n              _context4.next = 5;\n              return _user2.Users.findOne({\n                emailId: decoded.sub\n              });\n\n            case 5:\n              data = _context4.sent;\n              extension = file.originalname.substring(file.originalname.lastIndexOf('.') + 1);\n              cb(null, data._id + '.' + extension);\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function filename(_x10, _x11, _x12) {\n      return _filename2.apply(this, arguments);\n    }\n\n    return filename;\n  }()\n});\n\nvar uploadCoverImg = (0, _multer[\"default\"])({\n  storage: cstroge,\n  fileFilter: function () {\n    var _fileFilter = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, file, cb) {\n      var decoded, data, extension, coverUploaddir;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n            case 3:\n              decoded = _context5.sent;\n              _context5.next = 6;\n              return _user2.Users.findOne({\n                emailId: decoded.sub\n              });\n\n            case 6:\n              data = _context5.sent;\n              extension = data.coverImgURl.substring(data.coverImgURl.lastIndexOf(\".\") + 1);\n              coverUploaddir = _path[\"default\"].join(__dirname, '..', '..', 'public', 'cover');\n              console.log(extension);\n\n              if (_fs[\"default\"].existsSync(coverUploaddir + '/' + data._id + '.' + extension)) {\n                _fs[\"default\"].unlink(coverUploaddir + '/' + data._id + '.' + extension, function (err) {\n                  if (err) throw err; // if no error, file has been deleted successfully\n\n                  console.log('File deleted!');\n                });\n              }\n\n              cb(null, true);\n              _context5.next = 17;\n              break;\n\n            case 14:\n              _context5.prev = 14;\n              _context5.t0 = _context5[\"catch\"](0);\n              cb(null, false, new Error(_context5.t0.message));\n\n            case 17:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 14]]);\n    }));\n\n    function fileFilter(_x13, _x14, _x15) {\n      return _fileFilter.apply(this, arguments);\n    }\n\n    return fileFilter;\n  }()\n});\nvar uploadProfileImg = (0, _multer[\"default\"])({\n  storage: pstorage,\n  fileFilter: function () {\n    var _fileFilter2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, file, cb) {\n      var decoded, data, extension, profileUploadDir;\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n            case 3:\n              decoded = _context6.sent;\n              _context6.next = 6;\n              return _user2.Users.findOne({\n                emailId: decoded.sub\n              });\n\n            case 6:\n              data = _context6.sent;\n              extension = data.coverImgURl.substring(data.coverImgURl.lastIndexOf(\".\") + 1);\n              profileUploadDir = _path[\"default\"].join(__dirname, '..', '..', 'public', 'profile');\n              console.log(extension);\n\n              if (_fs[\"default\"].existsSync(profileUploadDir + '/' + data._id + '.' + extension)) {\n                _fs[\"default\"].unlink(profileUploadDir + '/' + data._id + '.' + extension, function (err) {\n                  if (err) throw err; // if no error, file has been deleted successfully\n\n                  console.log('File deleted!');\n                });\n              }\n\n              cb(null, true);\n              _context6.next = 17;\n              break;\n\n            case 14:\n              _context6.prev = 14;\n              _context6.t0 = _context6[\"catch\"](0);\n              cb(null, false, new Error(_context6.t0.message));\n\n            case 17:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[0, 14]]);\n    }));\n\n    function fileFilter(_x16, _x17, _x18) {\n      return _fileFilter2.apply(this, arguments);\n    }\n\n    return fileFilter;\n  }()\n});\nuserRouter.post('/setprofileimg', uploadProfileImg.single('image'), _user.setProfileImg);\nuserRouter.post('/setcoverimg', uploadCoverImg.single('image'), _user.setCoverImg);\nuserRouter.get('/profile', _user.getProfile);\nuserRouter.post('/serach', _user.serachUser);\nuserRouter.post('/update', _user.updateUser);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "user.restRouter.js"
      ],
      "names": [
        "userRouter",
        "express",
        "Router",
        "pstorage",
        "multer",
        "diskStorage",
        "destination",
        "req",
        "file",
        "cb",
        "profileUploadDir",
        "path",
        "join",
        "__dirname",
        "fs",
        "existsSync",
        "mkdirSync",
        "filename",
        "jwt",
        "verify",
        "headers",
        "token",
        "configKey",
        "secrets",
        "JWT_SECRET",
        "decoded",
        "Users",
        "findOne",
        "emailId",
        "sub",
        "data",
        "extension",
        "originalname",
        "substring",
        "lastIndexOf",
        "_id",
        "cstroge",
        "userId",
        "body",
        "coverUploaddir",
        "uploadCoverImg",
        "storage",
        "fileFilter",
        "coverImgURl",
        "console",
        "log",
        "unlink",
        "err",
        "Error",
        "message",
        "uploadProfileImg",
        "post",
        "single",
        "setProfileImg",
        "setCoverImg",
        "get",
        "getProfile",
        "serachUser",
        "updateUser"
      ],
      "mappings": "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",
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\users\\",
      "sourcesContent": [
        "import express from \"express\";\nimport {\n    getProfile,\n    serachUser,\n    updateUser,\n    setProfileImg,\n    setCoverImg,\n    \n} from './user.controller';\nimport multer from 'multer';\nimport path from 'path';\nimport fs from 'fs';\nimport configKey from '../../config'\nimport jwt from 'jsonwebtoken';\nimport { Users } from \"./user.modal\";\nimport { decode } from \"querystring\";\nexport const userRouter = express.Router();\n\nvar pstorage = multer.diskStorage({\n    destination: async function(req, file, cb){\n        const profileUploadDir = path.join(__dirname,'..','..','public','profile');\n        if (fs.existsSync(profileUploadDir)){\n            cb(null, profileUploadDir)\n        }\n        else{\n            fs.mkdirSync(profileUploadDir)\n            cb(null, profileUploadDir)\n        }\n    },\n    filename:async function(req,file,cb){\n        const decoded = await jwt.verify(req.headers.token, configKey.secrets.JWT_SECRET);\n        const data = await Users.findOne({emailId:decoded.sub})\n        const extension = file.originalname.substring(file.originalname.lastIndexOf('.') + 1);\n        cb(null, data._id+'.'+extension)\n    }\n})\n\nvar cstroge = multer.diskStorage({\n    destination: async function(req, file, cb){\n        const {userId} = req.body;\n        const coverUploaddir = path.join(__dirname,'..','..','public','cover');\n        if (fs.existsSync(coverUploaddir)){\n            cb(null, coverUploaddir)\n        }\n        else{\n            fs.mkdirSync(coverUploaddir)\n            cb(null, coverUploaddir)\n        }\n    },\n    filename:async function(req,file,cb){\n        const decoded = await jwt.verify(req.headers.token, configKey.secrets.JWT_SECRET);\n        const data = await Users.findOne({emailId:decoded.sub})\n        const extension = file.originalname.substring(file.originalname.lastIndexOf('.') + 1);\n        cb(null, data._id+'.'+extension)\n    }\n})\nconst uploadCoverImg = multer({storage:cstroge,\n    fileFilter:async function (req, file, cb){\n        try{\n            const decoded = await jwt.verify(req.headers.token, configKey.secrets.JWT_SECRET);\n              \n        const data = await Users.findOne({emailId:decoded.sub})\n            const extension = data.coverImgURl.substring(data.coverImgURl.lastIndexOf(\".\") + 1);\n            const coverUploaddir = path.join(__dirname,'..','..','public','cover');\n            console.log(extension);\n            \n            if(fs.existsSync(coverUploaddir+'/'+data._id+'.'+extension)){\n                fs.unlink(coverUploaddir+'/'+data._id+'.'+extension, function (err) {\n                    if (err) throw err;\n                    // if no error, file has been deleted successfully\n                    console.log('File deleted!');\n                });\n            }\n            cb(null,true);\n        }\n        catch(err){\n            cb(null,false,new Error(err.message));\n        }\n\n}\n})\nconst uploadProfileImg = multer({storage:pstorage,\n    fileFilter:async function (req, file, cb){\n        try{\n            const decoded = await jwt.verify(req.headers.token, configKey.secrets.JWT_SECRET);\n        const data = await Users.findOne({emailId:decoded.sub})\n            const extension = data.coverImgURl.substring(data.coverImgURl.lastIndexOf(\".\") + 1);\n            const profileUploadDir = path.join(__dirname,'..','..','public','profile');\n            console.log(extension);\n            \n            if(fs.existsSync(profileUploadDir+'/'+data._id+'.'+extension)){\n                fs.unlink(profileUploadDir+'/'+data._id+'.'+extension, function (err) {\n                    if (err) throw err;\n                    // if no error, file has been deleted successfully\n                    console.log('File deleted!');\n                });\n            }\n            cb(null,true);\n        }\n        catch(err){\n            cb(null,false,new Error(err.message));\n        }\n\n}\n})\n\nuserRouter.post('/setprofileimg', uploadProfileImg.single('image'),setProfileImg);\nuserRouter.post('/setcoverimg',uploadCoverImg.single('image'),setCoverImg);\nuserRouter.get('/profile',getProfile);\nuserRouter.post('/serach',serachUser);\nuserRouter.post('/update',updateUser);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1596627852915
  },
  "{\"sourceRoot\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\users\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"filename\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\users\\\\user.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\users\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\code\\dds\\social-share-backend-nikund",
      "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\users\\user.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\code\\dds\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\code\\dds\\social-share-backend-nikund\\api\\users\\user.controller.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\users\\user.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\users\\",
        "sourceFileName": "user.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setCoverImg = exports.setProfileImg = exports.updateUser = exports.serachUser = exports.getProfile = void 0;\n\nvar _user = require(\"./user.modal\");\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _config = _interopRequireDefault(require(\"../../config\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// get user profile by id\nvar getProfile = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var userId, profileData;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            userId = req.query.id;\n            _context.next = 4;\n            return _user.Users.findOne(userId);\n\n          case 4:\n            profileData = _context.sent;\n            console.log(profileData);\n\n            if (profileData.length <= 0) {\n              res.status(401).send({\n                success: false,\n                message: 'somthing goes to wrong in find data'\n              });\n            } else {\n              res.status(201).send({\n                success: true,\n                data: profileData,\n                message: 'data find successfully'\n              });\n            }\n\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context.t0.message\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 9]]);\n  }));\n\n  return function getProfile(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}(); //search User\n\n\nexports.getProfile = getProfile;\n\nvar serachUser = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$body, serchData, userId, searchDataBackend, allUser;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _req$body = req.body, serchData = _req$body.serchData, userId = _req$body.userId;\n            searchDataBackend = [];\n            _context2.next = 5;\n            return _user.Users.aggregate([{\n              $match: {}\n            }, {\n              $project: {\n                _id: 1,\n                userName: 1,\n                profileImgURL: 1,\n                city: 1\n              }\n            }]);\n\n          case 5:\n            allUser = _context2.sent;\n            _context2.next = 8;\n            return Promise.all(allUser.map(function (item) {\n              var ID = item._id.toString();\n\n              if (item.userName.match(serchData) && !ID.match(userId)) {\n                searchDataBackend.push(item);\n              }\n            }));\n\n          case 8:\n            //console.log(allUser);\n            res.status(201).send({\n              success: true,\n              data: searchDataBackend\n            });\n            _context2.next = 14;\n            break;\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context2.t0.message\n            });\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 11]]);\n  }));\n\n  return function serachUser(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}(); //edit profile page\n\n\nexports.serachUser = serachUser;\n\nvar updateUser = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var _req$body2, userId, designation, country, city, hobbies, success;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _req$body2 = req.body, userId = _req$body2.userId, designation = _req$body2.designation, country = _req$body2.country, city = _req$body2.city, hobbies = _req$body2.hobbies;\n            _context3.next = 4;\n            return _user.Users.findByIdAndUpdate({\n              _id: userId\n            }, {\n              designation: designation,\n              country: country,\n              city: city,\n              hobbies: hobbies\n            });\n\n          case 4:\n            success = _context3.sent;\n\n            if (!success) {\n              res.status(401).send({\n                success: false,\n                message: 'data update process failed due to user not found error'\n              });\n            }\n\n            res.status(201).send({\n              success: true,\n              message: 'data update successsully'\n            });\n            _context3.next = 12;\n            break;\n\n          case 9:\n            _context3.prev = 9;\n            _context3.t0 = _context3[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context3.t0.message\n            });\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 9]]);\n  }));\n\n  return function updateUser(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}(); //upload profile Image\n\n\nexports.updateUser = updateUser;\n\nvar setProfileImg = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var decoded;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n\n            if (!req.file) {\n              _context4.next = 11;\n              break;\n            }\n\n            console.log(req.file);\n            _context4.next = 5;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 5:\n            decoded = _context4.sent;\n            _context4.next = 8;\n            return _user.Users.findOneAndUpdate({\n              emailId: decoded.sub\n            }, {\n              profileImgURL: \"http://localhost:8000/profile/\" + req.file.filename\n            });\n\n          case 8:\n            return _context4.abrupt(\"return\", res.status(201).send({\n              success: true,\n              message: 'image upload successfully'\n            }));\n\n          case 11:\n            res.status(401).send({\n              success: false,\n              message: \"Image file either not supported or not found\"\n            });\n\n          case 12:\n            _context4.next = 17;\n            break;\n\n          case 14:\n            _context4.prev = 14;\n            _context4.t0 = _context4[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context4.t0.message\n            });\n\n          case 17:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 14]]);\n  }));\n\n  return function setProfileImg(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}(); //upload Cover Image\n\n\nexports.setProfileImg = setProfileImg;\n\nvar setCoverImg = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var decoded;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n\n            if (!req.file) {\n              _context5.next = 11;\n              break;\n            }\n\n            console.log(req.file);\n            _context5.next = 5;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 5:\n            decoded = _context5.sent;\n            _context5.next = 8;\n            return _user.Users.findOneAndUpdate({\n              emailId: decoded.sub\n            }, {\n              coverImgURl: \"http://localhost:8000/profile/\" + req.file.filename\n            });\n\n          case 8:\n            return _context5.abrupt(\"return\", res.status(201).send({\n              success: true,\n              message: 'image upload successfully'\n            }));\n\n          case 11:\n            res.status(401).send({\n              success: false,\n              message: \"Image file either not supported or not found\"\n            });\n\n          case 12:\n            _context5.next = 17;\n            break;\n\n          case 14:\n            _context5.prev = 14;\n            _context5.t0 = _context5[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context5.t0.message\n            });\n\n          case 17:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 14]]);\n  }));\n\n  return function setCoverImg(_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nexports.setCoverImg = setCoverImg;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "user.controller.js"
      ],
      "names": [
        "getProfile",
        "req",
        "res",
        "userId",
        "query",
        "id",
        "Users",
        "findOne",
        "profileData",
        "console",
        "log",
        "length",
        "status",
        "send",
        "success",
        "message",
        "data",
        "serachUser",
        "body",
        "serchData",
        "searchDataBackend",
        "aggregate",
        "$match",
        "$project",
        "_id",
        "userName",
        "profileImgURL",
        "city",
        "allUser",
        "Promise",
        "all",
        "map",
        "item",
        "ID",
        "toString",
        "match",
        "push",
        "updateUser",
        "designation",
        "country",
        "hobbies",
        "findByIdAndUpdate",
        "setProfileImg",
        "file",
        "jwt",
        "verify",
        "headers",
        "token",
        "configKey",
        "secrets",
        "JWT_SECRET",
        "decoded",
        "findOneAndUpdate",
        "emailId",
        "sub",
        "filename",
        "setCoverImg",
        "coverImgURl"
      ],
      "mappings": "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",
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\users\\",
      "sourcesContent": [
        "import {Users} from './user.modal'\nimport mongoose from 'mongoose'\nimport configKey from '../../config'\nimport jwt from 'jsonwebtoken';\n// get user profile by id\nexport const getProfile = async(req,res) =>{\n    try{\n        const userId = req.query.id;\n        const profileData = await Users.findOne(userId)\n        console.log(profileData);\n        if(profileData.length<=0){\n            res.status(401).send({\n                success:false,\n                message:'somthing goes to wrong in find data'\n            })\n        }\n        else{\n            res.status(201).send({\n                success:true,\n                data:profileData,\n                message:'data find successfully'\n            })\n        }\n    }\n    catch(err){\n        res.status(401).send({\n            success:false,\n            message:err.message\n        })\n    }\n}\n//search User\nexport const serachUser = async(req,res) =>{\n    try{\n        const {serchData,userId} = req.body;\n        const searchDataBackend = []\n        const allUser = await Users.aggregate([{\n            $match:{}\n        },\n        {\n            $project:{\n                _id:1,\n                userName:1,\n                profileImgURL:1,\n                city:1\n            }\n        }]);\n        await Promise.all(allUser.map((item)=>{\n            const ID = item._id.toString();\n            if(item.userName.match(serchData) && !ID.match(userId)){\n                searchDataBackend.push(item);\n            }\n        }))\n        //console.log(allUser);\n        res.status(201).send({\n            success:true,\n            data:searchDataBackend\n        })\n    }\n    catch(err){\n        res.status(401).send({\n            success:false,\n            message:err.message\n        })\n    }\n}\n//edit profile page\nexport const updateUser = async(req,res) =>{\n    try{\n        const {userId,designation,country,city,hobbies} = req.body;\n        const success = await Users.findByIdAndUpdate({_id:userId},{\n            designation,country,city,hobbies\n        })\n        if(!success){\n            res.status(401).send({\n                success:false,\n                message:'data update process failed due to user not found error'\n            })\n        }\n        res.status(201).send({\n            success:true,\n            message:'data update successsully'\n        })\n    }\n    catch(err){\n        res.status(401).send({\n            success:false,\n            message:err.message\n        })\n    }\n}\n\n//upload profile Image\nexport const setProfileImg = async(req,res) =>{\n    try{\n        if(req.file){\n            console.log(req.file);\n            const decoded = await jwt.verify(req.headers.token, configKey.secrets.JWT_SECRET);\n            await Users.findOneAndUpdate({emailId:decoded.sub},{\n                profileImgURL:\"http://localhost:8000/profile/\"+req.file.filename\n            })\n            return res.status(201).send({\n                success:true,\n                message:'image upload successfully'\n            })\n        }\n        else{\n            res.status(401).send({\n                success:false,\n                message:\"Image file either not supported or not found\"\n            })\n        }\n    }\n    catch(err){\n        res.status(401).send({\n            success:false,\n            message:err.message\n        })\n    }\n}\n\n//upload Cover Image\nexport const setCoverImg= async(req,res) =>{\n    try{\n        if(req.file){\n            console.log(req.file);\n            const decoded = await jwt.verify(req.headers.token, configKey.secrets.JWT_SECRET);\n            await Users.findOneAndUpdate({emailId:decoded.sub},{\n                coverImgURl:\"http://localhost:8000/profile/\"+req.file.filename\n            })\n            return res.status(201).send({\n                success:true,\n                message:'image upload successfully'\n            })\n        }\n        else{\n            res.status(401).send({\n                success:false,\n                message:\"Image file either not supported or not found\"\n            })\n        }\n    }\n    catch(err){\n        res.status(401).send({\n            success:false,\n            message:err.message\n        })\n    }\n}\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597033921460
  },
  "{\"sourceRoot\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\users\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"filename\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\users\\\\user.modal.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\users\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\code\\dds\\social-share-backend-nikund",
      "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\users\\user.modal.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\code\\dds\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\code\\dds\\social-share-backend-nikund\\api\\users\\user.modal.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\users\\user.modal.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\users\\",
        "sourceFileName": "user.modal.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Users = void 0;\n\nvar _mongoose = _interopRequireWildcard(require(\"mongoose\"));\n\nvar _mongooseTimestamp = _interopRequireDefault(require(\"mongoose-timestamp\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar userSchema = (0, _mongoose.Schema)({\n  name: String,\n  emailId: String,\n  password: String,\n  mobileNo: Number,\n  userName: String,\n  designation: String,\n  country: String,\n  city: String,\n  hobbies: Array,\n  profileImgURL: String,\n  coverImgURl: String,\n  content: String\n}, {\n  timestamps: {\n    createdAt: 'created_at'\n  }\n});\n\nvar Users = _mongoose[\"default\"].model('userInfo', userSchema);\n\nexports.Users = Users;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIubW9kYWwuanMiXSwibmFtZXMiOlsidXNlclNjaGVtYSIsIm5hbWUiLCJTdHJpbmciLCJlbWFpbElkIiwicGFzc3dvcmQiLCJtb2JpbGVObyIsIk51bWJlciIsInVzZXJOYW1lIiwiZGVzaWduYXRpb24iLCJjb3VudHJ5IiwiY2l0eSIsImhvYmJpZXMiLCJBcnJheSIsInByb2ZpbGVJbWdVUkwiLCJjb3ZlckltZ1VSbCIsImNvbnRlbnQiLCJ0aW1lc3RhbXBzIiwiY3JlYXRlZEF0IiwiVXNlcnMiLCJtb25nb29zZSIsIm1vZGVsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7QUFFQSxJQUFNQSxVQUFVLEdBQUcsc0JBQU87QUFDdEJDLEVBQUFBLElBQUksRUFBQ0MsTUFEaUI7QUFFdEJDLEVBQUFBLE9BQU8sRUFBQ0QsTUFGYztBQUd0QkUsRUFBQUEsUUFBUSxFQUFDRixNQUhhO0FBSXRCRyxFQUFBQSxRQUFRLEVBQUNDLE1BSmE7QUFLdEJDLEVBQUFBLFFBQVEsRUFBQ0wsTUFMYTtBQU10Qk0sRUFBQUEsV0FBVyxFQUFDTixNQU5VO0FBT3RCTyxFQUFBQSxPQUFPLEVBQUNQLE1BUGM7QUFRdEJRLEVBQUFBLElBQUksRUFBQ1IsTUFSaUI7QUFTdEJTLEVBQUFBLE9BQU8sRUFBQ0MsS0FUYztBQVV0QkMsRUFBQUEsYUFBYSxFQUFDWCxNQVZRO0FBV3RCWSxFQUFBQSxXQUFXLEVBQUNaLE1BWFU7QUFZdEJhLEVBQUFBLE9BQU8sRUFBQ2I7QUFaYyxDQUFQLEVBZWhCO0FBQUVjLEVBQUFBLFVBQVUsRUFBRTtBQUFDQyxJQUFBQSxTQUFTLEVBQUM7QUFBWDtBQUFkLENBZmdCLENBQW5COztBQWlCTyxJQUFNQyxLQUFLLEdBQUdDLHFCQUFTQyxLQUFULENBQWUsVUFBZixFQUEwQnBCLFVBQTFCLENBQWQiLCJzb3VyY2VSb290IjoiRTpcXGNvZGVcXGRkc1xcc29jaWFsLXNoYXJlLWJhY2tlbmQtbmlrdW5kXFxhcGlcXHVzZXJzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UsIHtTY2hlbWF9IGZyb20gJ21vbmdvb3NlJztcbmltcG9ydCB0aW1lc3RhbXBzIGZyb20gXCJtb25nb29zZS10aW1lc3RhbXBcIjtcblxuY29uc3QgdXNlclNjaGVtYSA9IFNjaGVtYSh7XG4gICAgbmFtZTpTdHJpbmcsXG4gICAgZW1haWxJZDpTdHJpbmcsXG4gICAgcGFzc3dvcmQ6U3RyaW5nLFxuICAgIG1vYmlsZU5vOk51bWJlcixcbiAgICB1c2VyTmFtZTpTdHJpbmcsXG4gICAgZGVzaWduYXRpb246U3RyaW5nLFxuICAgIGNvdW50cnk6U3RyaW5nLFxuICAgIGNpdHk6U3RyaW5nLFxuICAgIGhvYmJpZXM6QXJyYXksXG4gICAgcHJvZmlsZUltZ1VSTDpTdHJpbmcsXG4gICAgY292ZXJJbWdVUmw6U3RyaW5nLFxuICAgIGNvbnRlbnQ6U3RyaW5nLFxuXG5cbn0sIHsgdGltZXN0YW1wczoge2NyZWF0ZWRBdDonY3JlYXRlZF9hdCd9IH0pXG5cbmV4cG9ydCBjb25zdCBVc2VycyA9IG1vbmdvb3NlLm1vZGVsKCd1c2VySW5mbycsdXNlclNjaGVtYSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "user.modal.js"
      ],
      "names": [
        "userSchema",
        "name",
        "String",
        "emailId",
        "password",
        "mobileNo",
        "Number",
        "userName",
        "designation",
        "country",
        "city",
        "hobbies",
        "Array",
        "profileImgURL",
        "coverImgURl",
        "content",
        "timestamps",
        "createdAt",
        "Users",
        "mongoose",
        "model"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;;;;;;;AAEA,IAAMA,UAAU,GAAG,sBAAO;AACtBC,EAAAA,IAAI,EAACC,MADiB;AAEtBC,EAAAA,OAAO,EAACD,MAFc;AAGtBE,EAAAA,QAAQ,EAACF,MAHa;AAItBG,EAAAA,QAAQ,EAACC,MAJa;AAKtBC,EAAAA,QAAQ,EAACL,MALa;AAMtBM,EAAAA,WAAW,EAACN,MANU;AAOtBO,EAAAA,OAAO,EAACP,MAPc;AAQtBQ,EAAAA,IAAI,EAACR,MARiB;AAStBS,EAAAA,OAAO,EAACC,KATc;AAUtBC,EAAAA,aAAa,EAACX,MAVQ;AAWtBY,EAAAA,WAAW,EAACZ,MAXU;AAYtBa,EAAAA,OAAO,EAACb;AAZc,CAAP,EAehB;AAAEc,EAAAA,UAAU,EAAE;AAACC,IAAAA,SAAS,EAAC;AAAX;AAAd,CAfgB,CAAnB;;AAiBO,IAAMC,KAAK,GAAGC,qBAASC,KAAT,CAAe,UAAf,EAA0BpB,UAA1B,CAAd",
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\users\\",
      "sourcesContent": [
        "import mongoose, {Schema} from 'mongoose';\nimport timestamps from \"mongoose-timestamp\";\n\nconst userSchema = Schema({\n    name:String,\n    emailId:String,\n    password:String,\n    mobileNo:Number,\n    userName:String,\n    designation:String,\n    country:String,\n    city:String,\n    hobbies:Array,\n    profileImgURL:String,\n    coverImgURl:String,\n    content:String,\n\n\n}, { timestamps: {createdAt:'created_at'} })\n\nexport const Users = mongoose.model('userInfo',userSchema);"
      ]
    },
    "sourceType": "script",
    "mtime": 1596627816978
  },
  "{\"sourceRoot\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\aurthorization\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"filename\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\aurthorization\\\\auth.middleware.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\aurthorization\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\code\\dds\\social-share-backend-nikund",
      "filename": "E:\\code\\dds\\social-share-backend-nikund\\aurthorization\\auth.middleware.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\code\\dds\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\code\\dds\\social-share-backend-nikund\\aurthorization\\auth.middleware.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\code\\dds\\social-share-backend-nikund\\aurthorization\\auth.middleware.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\aurthorization\\",
        "sourceFileName": "auth.middleware.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.requireSignIn = exports.requireAuth = void 0;\n\nvar passportService = require(\"./passport\");\n\nvar passport = require(\"passport\"); // Create the interceptor and ensure that the cookie is turned off\n\n\nvar requireAuth = passport.authenticate(\"jwt\", {\n  session: false\n});\nexports.requireAuth = requireAuth;\nvar requireSignIn = passport.authenticate(\"local\", {\n  session: false\n});\nexports.requireSignIn = requireSignIn;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGgubWlkZGxld2FyZS5qcyJdLCJuYW1lcyI6WyJwYXNzcG9ydFNlcnZpY2UiLCJyZXF1aXJlIiwicGFzc3BvcnQiLCJyZXF1aXJlQXV0aCIsImF1dGhlbnRpY2F0ZSIsInNlc3Npb24iLCJyZXF1aXJlU2lnbkluIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsSUFBTUEsZUFBZSxHQUFHQyxPQUFPLENBQUMsWUFBRCxDQUEvQjs7QUFDQSxJQUFNQyxRQUFRLEdBQUdELE9BQU8sQ0FBQyxVQUFELENBQXhCLEMsQ0FFQTs7O0FBQ08sSUFBTUUsV0FBVyxHQUFHRCxRQUFRLENBQUNFLFlBQVQsQ0FBc0IsS0FBdEIsRUFBNkI7QUFBRUMsRUFBQUEsT0FBTyxFQUFFO0FBQVgsQ0FBN0IsQ0FBcEI7O0FBQ0EsSUFBTUMsYUFBYSxHQUFHSixRQUFRLENBQUNFLFlBQVQsQ0FBc0IsT0FBdEIsRUFBK0I7QUFBRUMsRUFBQUEsT0FBTyxFQUFFO0FBQVgsQ0FBL0IsQ0FBdEIiLCJzb3VyY2VSb290IjoiRTpcXGNvZGVcXGRkc1xcc29jaWFsLXNoYXJlLWJhY2tlbmQtbmlrdW5kXFxhdXJ0aG9yaXphdGlvblxcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcGFzc3BvcnRTZXJ2aWNlID0gcmVxdWlyZShcIi4vcGFzc3BvcnRcIik7XG5jb25zdCBwYXNzcG9ydCA9IHJlcXVpcmUoXCJwYXNzcG9ydFwiKTtcblxuLy8gQ3JlYXRlIHRoZSBpbnRlcmNlcHRvciBhbmQgZW5zdXJlIHRoYXQgdGhlIGNvb2tpZSBpcyB0dXJuZWQgb2ZmXG5leHBvcnQgY29uc3QgcmVxdWlyZUF1dGggPSBwYXNzcG9ydC5hdXRoZW50aWNhdGUoXCJqd3RcIiwgeyBzZXNzaW9uOiBmYWxzZSB9KTtcbmV4cG9ydCBjb25zdCByZXF1aXJlU2lnbkluID0gcGFzc3BvcnQuYXV0aGVudGljYXRlKFwibG9jYWxcIiwgeyBzZXNzaW9uOiBmYWxzZSB9KTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "auth.middleware.js"
      ],
      "names": [
        "passportService",
        "require",
        "passport",
        "requireAuth",
        "authenticate",
        "session",
        "requireSignIn"
      ],
      "mappings": ";;;;;;;AAAA,IAAMA,eAAe,GAAGC,OAAO,CAAC,YAAD,CAA/B;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB,C,CAEA;;;AACO,IAAME,WAAW,GAAGD,QAAQ,CAACE,YAAT,CAAsB,KAAtB,EAA6B;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAA7B,CAApB;;AACA,IAAMC,aAAa,GAAGJ,QAAQ,CAACE,YAAT,CAAsB,OAAtB,EAA+B;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAA/B,CAAtB",
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\aurthorization\\",
      "sourcesContent": [
        "const passportService = require(\"./passport\");\nconst passport = require(\"passport\");\n\n// Create the interceptor and ensure that the cookie is turned off\nexport const requireAuth = passport.authenticate(\"jwt\", { session: false });\nexport const requireSignIn = passport.authenticate(\"local\", { session: false });"
      ]
    },
    "sourceType": "script",
    "mtime": 1594986602827
  },
  "{\"sourceRoot\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\aurthorization\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"filename\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\aurthorization\\\\passport.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\aurthorization\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\code\\dds\\social-share-backend-nikund",
      "filename": "E:\\code\\dds\\social-share-backend-nikund\\aurthorization\\passport.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\code\\dds\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\code\\dds\\social-share-backend-nikund\\aurthorization\\passport.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\code\\dds\\social-share-backend-nikund\\aurthorization\\passport.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\aurthorization\\",
        "sourceFileName": "passport.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _passportJwt = require(\"passport-jwt\");\n\nvar _users = require(\"../api/users\");\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nvar _bcryptNodejs = _interopRequireDefault(require(\"bcrypt-nodejs\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar passport = require(\"passport\");\n\nvar LocalStrategy = require(\"passport-local\");\n\nvar JwtStrategy = require(\"passport-jwt\").Strategy;\n\nvar localOptions = {\n  usernameField: \"email\"\n};\nvar localLogin = new LocalStrategy(localOptions, /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(email, password, done) {\n    var emailRegexp, mobileNoRegexp, userExistence, validPassword, _userExistence, _validPassword;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            emailRegexp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n            mobileNoRegexp = /\\(?\\d{3}\\)?-? *\\d{3}-? *-?\\d{6}/;\n\n            if (!emailRegexp.test(email)) {\n              _context.next = 17;\n              break;\n            }\n\n            _context.next = 6;\n            return _users.Users.findOne({\n              emailId: email.toLowerCase()\n            });\n\n          case 6:\n            userExistence = _context.sent;\n\n            if (userExistence) {\n              _context.next = 9;\n              break;\n            }\n\n            return _context.abrupt(\"return\", done(\"Either Password or EmailId Doesn't match\", false));\n\n          case 9:\n            _context.next = 11;\n            return _bcryptNodejs[\"default\"].compareSync(password, userExistence.password);\n\n          case 11:\n            validPassword = _context.sent;\n\n            if (validPassword) {\n              _context.next = 14;\n              break;\n            }\n\n            return _context.abrupt(\"return\", done(\"Password is Incorrect Please try Again later\", false));\n\n          case 14:\n            return _context.abrupt(\"return\", done(null, userExistence));\n\n          case 17:\n            if (!mobileNoRegexp.test(email)) {\n              _context.next = 30;\n              break;\n            }\n\n            _context.next = 20;\n            return _users.Users.findOne({\n              mobileNo: email\n            });\n\n          case 20:\n            _userExistence = _context.sent;\n\n            if (_userExistence) {\n              _context.next = 23;\n              break;\n            }\n\n            return _context.abrupt(\"return\", done(\"Either Password or EmailId Doesn't match\", false));\n\n          case 23:\n            _context.next = 25;\n            return _bcryptNodejs[\"default\"].compareSync(password, _userExistence.password);\n\n          case 25:\n            _validPassword = _context.sent;\n            console.log(_validPassword);\n\n            if (_validPassword) {\n              _context.next = 29;\n              break;\n            }\n\n            return _context.abrupt(\"return\", done(\"Password is Incorrect Please try Again later\", false));\n\n          case 29:\n            return _context.abrupt(\"return\", done(null, _userExistence));\n\n          case 30:\n            _context.next = 36;\n            break;\n\n          case 32:\n            _context.prev = 32;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n            return _context.abrupt(\"return\", done(\"System was unable to process the details\", false));\n\n          case 36:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 32]]);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}());\npassport.use(localLogin);\nvar jwtOptions = {\n  jwtFromRequest: _passportJwt.ExtractJwt.fromHeader(\"authorization\"),\n  secretOrKey: _config[\"default\"].secrets.JWT_SECRET\n};\nvar jwtLogin = new JwtStrategy(jwtOptions, function (jwt_payload, done) {\n  console.log(\"CHECKING LOGIN USING JWT\");\n\n  _users.Users.findOne({\n    emailId: jwt_payload.sub\n  }, function (err, user) {\n    if (err) {\n      return done(err.message, false);\n    }\n\n    if (user) {\n      return done(null, user);\n    } else {\n      return done(null, false);\n    }\n  });\n});\npassport.use(jwtLogin);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhc3Nwb3J0LmpzIl0sIm5hbWVzIjpbInBhc3Nwb3J0IiwicmVxdWlyZSIsIkxvY2FsU3RyYXRlZ3kiLCJKd3RTdHJhdGVneSIsIlN0cmF0ZWd5IiwibG9jYWxPcHRpb25zIiwidXNlcm5hbWVGaWVsZCIsImxvY2FsTG9naW4iLCJlbWFpbCIsInBhc3N3b3JkIiwiZG9uZSIsImVtYWlsUmVnZXhwIiwibW9iaWxlTm9SZWdleHAiLCJ0ZXN0IiwiVXNlcnMiLCJmaW5kT25lIiwiZW1haWxJZCIsInRvTG93ZXJDYXNlIiwidXNlckV4aXN0ZW5jZSIsImJjcnlwdCIsImNvbXBhcmVTeW5jIiwidmFsaWRQYXNzd29yZCIsIm1vYmlsZU5vIiwiY29uc29sZSIsImxvZyIsInVzZSIsImp3dE9wdGlvbnMiLCJqd3RGcm9tUmVxdWVzdCIsIkV4dHJhY3RKd3QiLCJmcm9tSGVhZGVyIiwic2VjcmV0T3JLZXkiLCJjb25maWdLZXkiLCJzZWNyZXRzIiwiSldUX1NFQ1JFVCIsImp3dExvZ2luIiwiand0X3BheWxvYWQiLCJzdWIiLCJlcnIiLCJ1c2VyIiwibWVzc2FnZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7QUFHQSxJQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXhCOztBQUNBLElBQU1DLGFBQWEsR0FBR0QsT0FBTyxDQUFDLGdCQUFELENBQTdCOztBQUNBLElBQU1FLFdBQVcsR0FBR0YsT0FBTyxDQUFDLGNBQUQsQ0FBUCxDQUF3QkcsUUFBNUM7O0FBRUEsSUFBTUMsWUFBWSxHQUFHO0FBQ2pCQyxFQUFBQSxhQUFhLEVBQUU7QUFERSxDQUFyQjtBQUlBLElBQU1DLFVBQVUsR0FBRyxJQUFJTCxhQUFKLENBQ2ZHLFlBRGU7QUFBQSxxRUFFZixpQkFBT0csS0FBUCxFQUFjQyxRQUFkLEVBQXdCQyxJQUF4QjtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFY0MsWUFBQUEsV0FGZCxHQUU0QiwrQ0FG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RkQsTUFFTztBQUNILGFBQU81QixJQUFJLENBQUMsSUFBRCxFQUFPLEtBQVAsQ0FBWDtBQUNIO0FBQ1IsR0FWRDtBQVdILENBYmdCLENBQWpCO0FBY0FWLFFBQVEsQ0FBQ3lCLEdBQVQsQ0FBYVMsUUFBYiIsInNvdXJjZVJvb3QiOiJFOlxcY29kZVxcZGRzXFxzb2NpYWwtc2hhcmUtYmFja2VuZC1uaWt1bmRcXGF1cnRob3JpemF0aW9uXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFeHRyYWN0Snd0IH0gZnJvbSAncGFzc3BvcnQtand0J1xuaW1wb3J0IHtVc2Vyc30gZnJvbSAnLi4vYXBpL3VzZXJzJ1xuaW1wb3J0IGNvbmZpZ0tleSBmcm9tICcuLi9jb25maWcnXG5pbXBvcnQgYmNyeXB0IGZyb20gJ2JjcnlwdC1ub2RlanMnXG5cblxuY29uc3QgcGFzc3BvcnQgPSByZXF1aXJlKFwicGFzc3BvcnRcIik7XG5jb25zdCBMb2NhbFN0cmF0ZWd5ID0gcmVxdWlyZShcInBhc3Nwb3J0LWxvY2FsXCIpO1xuY29uc3QgSnd0U3RyYXRlZ3kgPSByZXF1aXJlKFwicGFzc3BvcnQtand0XCIpLlN0cmF0ZWd5O1xuXG5jb25zdCBsb2NhbE9wdGlvbnMgPSB7XG4gICAgdXNlcm5hbWVGaWVsZDogXCJlbWFpbFwiXG4gIH07XG5cbmNvbnN0IGxvY2FsTG9naW4gPSBuZXcgTG9jYWxTdHJhdGVneShcbiAgICBsb2NhbE9wdGlvbnMsXG4gICAgYXN5bmMgKGVtYWlsLCBwYXNzd29yZCwgZG9uZSk9PntcbiAgICAgICAgdHJ5e1xuICAgICAgICAgICAgY29uc3QgZW1haWxSZWdleHAgPSAvXlxcdysoW1xcLi1dP1xcdyspKkBcXHcrKFtcXC4tXT9cXHcrKSooXFwuXFx3ezIsM30pKyQvO1xuICAgICAgICAgICAgY29uc3QgbW9iaWxlTm9SZWdleHAgPSAvXFwoP1xcZHszfVxcKT8tPyAqXFxkezN9LT8gKi0/XFxkezZ9LztcbiAgICAgICAgICAgIGlmKGVtYWlsUmVnZXhwLnRlc3QoZW1haWwpKXtcbiAgICAgICAgICAgICAgICBjb25zdCB1c2VyRXhpc3RlbmNlID0gYXdhaXQgVXNlcnMuZmluZE9uZSh7ZW1haWxJZDplbWFpbC50b0xvd2VyQ2FzZSgpfSlcbiAgICAgICAgICAgICAgICBpZighdXNlckV4aXN0ZW5jZSl7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBkb25lKFwiRWl0aGVyIFBhc3N3b3JkIG9yIEVtYWlsSWQgRG9lc24ndCBtYXRjaFwiLGZhbHNlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgdmFsaWRQYXNzd29yZCA9IGF3YWl0IGJjcnlwdC5jb21wYXJlU3luYyhwYXNzd29yZCwgdXNlckV4aXN0ZW5jZS5wYXNzd29yZCk7XG4gICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyh2YWxpZFBhc3N3b3JkKVxuICAgICAgICAgICAgICAgIGlmKCF2YWxpZFBhc3N3b3JkKXtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRvbmUoXCJQYXNzd29yZCBpcyBJbmNvcnJlY3QgUGxlYXNlIHRyeSBBZ2FpbiBsYXRlclwiLGZhbHNlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRvbmUgKG51bGwsdXNlckV4aXN0ZW5jZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmKG1vYmlsZU5vUmVnZXhwLnRlc3QoZW1haWwpKXtcbiAgICAgICAgICAgICAgICBjb25zdCB1c2VyRXhpc3RlbmNlID0gYXdhaXQgVXNlcnMuZmluZE9uZSh7bW9iaWxlTm86ZW1haWx9KVxuICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2codXNlckV4aXN0ZW5jZSlcbiAgICAgICAgICAgICAgICBpZighdXNlckV4aXN0ZW5jZSl7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBkb25lKFwiRWl0aGVyIFBhc3N3b3JkIG9yIEVtYWlsSWQgRG9lc24ndCBtYXRjaFwiLGZhbHNlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgdmFsaWRQYXNzd29yZCA9IGF3YWl0IGJjcnlwdC5jb21wYXJlU3luYyhwYXNzd29yZCwgdXNlckV4aXN0ZW5jZS5wYXNzd29yZCk7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2codmFsaWRQYXNzd29yZClcbiAgICAgICAgICAgICAgICBpZighdmFsaWRQYXNzd29yZCl7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBkb25lKFwiUGFzc3dvcmQgaXMgSW5jb3JyZWN0IFBsZWFzZSB0cnkgQWdhaW4gbGF0ZXJcIixmYWxzZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBkb25lIChudWxsLHVzZXJFeGlzdGVuY2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoKGVycil7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICAgICAgcmV0dXJuIGRvbmUoXCJTeXN0ZW0gd2FzIHVuYWJsZSB0byBwcm9jZXNzIHRoZSBkZXRhaWxzXCIsIGZhbHNlKTtcbiAgICAgICAgfVxuICAgIH1cbilcblxucGFzc3BvcnQudXNlKGxvY2FsTG9naW4pO1xuXG5jb25zdCBqd3RPcHRpb25zID0ge1xuICAgIGp3dEZyb21SZXF1ZXN0OiBFeHRyYWN0Snd0LmZyb21IZWFkZXIoXCJhdXRob3JpemF0aW9uXCIpLFxuICAgIHNlY3JldE9yS2V5OiBjb25maWdLZXkuc2VjcmV0cy5KV1RfU0VDUkVUXG59XG5cbmNvbnN0IGp3dExvZ2luID0gbmV3IEp3dFN0cmF0ZWd5KGp3dE9wdGlvbnMsIChqd3RfcGF5bG9hZCwgZG9uZSk9PntcbiAgICBjb25zb2xlLmxvZyhcIkNIRUNLSU5HIExPR0lOIFVTSU5HIEpXVFwiKTtcbiAgICBVc2Vycy5maW5kT25lKHtlbWFpbElkOmp3dF9wYXlsb2FkLnN1Yn0sXG4gICAgICAgIChlcnIsIHVzZXIpPT57XG4gICAgICAgICAgICBpZihlcnIpe1xuICAgICAgICAgICAgICAgIHJldHVybiBkb25lKGVyci5tZXNzYWdlLCBmYWxzZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodXNlcikge1xuICAgICAgICAgICAgICAgIHJldHVybiBkb25lKG51bGwsIHVzZXIpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZG9uZShudWxsLCBmYWxzZSk7XG4gICAgICAgICAgICB9XG4gICAgfSlcbn0pXG5wYXNzcG9ydC51c2Uoand0TG9naW4pO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "passport.js"
      ],
      "names": [
        "passport",
        "require",
        "LocalStrategy",
        "JwtStrategy",
        "Strategy",
        "localOptions",
        "usernameField",
        "localLogin",
        "email",
        "password",
        "done",
        "emailRegexp",
        "mobileNoRegexp",
        "test",
        "Users",
        "findOne",
        "emailId",
        "toLowerCase",
        "userExistence",
        "bcrypt",
        "compareSync",
        "validPassword",
        "mobileNo",
        "console",
        "log",
        "use",
        "jwtOptions",
        "jwtFromRequest",
        "ExtractJwt",
        "fromHeader",
        "secretOrKey",
        "configKey",
        "secrets",
        "JWT_SECRET",
        "jwtLogin",
        "jwt_payload",
        "sub",
        "err",
        "user",
        "message"
      ],
      "mappings": "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",
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\aurthorization\\",
      "sourcesContent": [
        "import { ExtractJwt } from 'passport-jwt'\nimport {Users} from '../api/users'\nimport configKey from '../config'\nimport bcrypt from 'bcrypt-nodejs'\n\n\nconst passport = require(\"passport\");\nconst LocalStrategy = require(\"passport-local\");\nconst JwtStrategy = require(\"passport-jwt\").Strategy;\n\nconst localOptions = {\n    usernameField: \"email\"\n  };\n\nconst localLogin = new LocalStrategy(\n    localOptions,\n    async (email, password, done)=>{\n        try{\n            const emailRegexp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n            const mobileNoRegexp = /\\(?\\d{3}\\)?-? *\\d{3}-? *-?\\d{6}/;\n            if(emailRegexp.test(email)){\n                const userExistence = await Users.findOne({emailId:email.toLowerCase()})\n                if(!userExistence){\n                    return done(\"Either Password or EmailId Doesn't match\",false);\n                }\n                const validPassword = await bcrypt.compareSync(password, userExistence.password);\n                //console.log(validPassword)\n                if(!validPassword){\n                    return done(\"Password is Incorrect Please try Again later\",false);\n                }\n                return done (null,userExistence);\n            }\n            else if(mobileNoRegexp.test(email)){\n                const userExistence = await Users.findOne({mobileNo:email})\n                //console.log(userExistence)\n                if(!userExistence){\n                    return done(\"Either Password or EmailId Doesn't match\",false);\n                }\n                const validPassword = await bcrypt.compareSync(password, userExistence.password);\n                console.log(validPassword)\n                if(!validPassword){\n                    return done(\"Password is Incorrect Please try Again later\",false);\n                }\n                return done (null,userExistence);\n            }\n        }\n        catch(err){\n            console.log(err);\n            return done(\"System was unable to process the details\", false);\n        }\n    }\n)\n\npassport.use(localLogin);\n\nconst jwtOptions = {\n    jwtFromRequest: ExtractJwt.fromHeader(\"authorization\"),\n    secretOrKey: configKey.secrets.JWT_SECRET\n}\n\nconst jwtLogin = new JwtStrategy(jwtOptions, (jwt_payload, done)=>{\n    console.log(\"CHECKING LOGIN USING JWT\");\n    Users.findOne({emailId:jwt_payload.sub},\n        (err, user)=>{\n            if(err){\n                return done(err.message, false);\n            }\n            if (user) {\n                return done(null, user);\n            } else {\n                return done(null, false);\n            }\n    })\n})\npassport.use(jwtLogin);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1594986603716
  },
  "{\"sourceRoot\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"filename\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\restRouter.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\code\\dds\\social-share-backend-nikund",
      "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\restRouter.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\code\\dds\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\code\\dds\\social-share-backend-nikund\\api\\restRouter.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\restRouter.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\",
        "sourceFileName": "restRouter.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.restRouter = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _users = require(\"./users\");\n\nvar _Friends = require(\"./Friends\");\n\nvar _photos = require(\"./photos\");\n\nvar _notification = require(\"./notification/notification.restRoute\");\n\nvar _about = require(\"./about\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar restRouter = _express[\"default\"].Router();\n\nexports.restRouter = restRouter;\nrestRouter.use('/about', _about.aboutRouter);\nrestRouter.use('/photos', _photos.photosRouter);\nrestRouter.use('/user', _users.userRouter);\nrestRouter.use('/friend', _Friends.friendRouter);\nrestRouter.use('/notification', _notification.notificationRouter); // restRouter.use('/matirial',materialRouter);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc3RSb3V0ZXIuanMiXSwibmFtZXMiOlsicmVzdFJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJ1c2UiLCJhYm91dFJvdXRlciIsInBob3Rvc1JvdXRlciIsInVzZXJSb3V0ZXIiLCJmcmllbmRSb3V0ZXIiLCJub3RpZmljYXRpb25Sb3V0ZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVPLElBQU1BLFVBQVUsR0FBR0Msb0JBQVFDLE1BQVIsRUFBbkI7OztBQUVQRixVQUFVLENBQUNHLEdBQVgsQ0FBZSxRQUFmLEVBQXdCQyxrQkFBeEI7QUFDQUosVUFBVSxDQUFDRyxHQUFYLENBQWUsU0FBZixFQUF5QkUsb0JBQXpCO0FBQ0FMLFVBQVUsQ0FBQ0csR0FBWCxDQUFlLE9BQWYsRUFBdUJHLGlCQUF2QjtBQUNBTixVQUFVLENBQUNHLEdBQVgsQ0FBZSxTQUFmLEVBQXlCSSxxQkFBekI7QUFDQVAsVUFBVSxDQUFDRyxHQUFYLENBQWUsZUFBZixFQUErQkssZ0NBQS9CLEUsQ0FDQSIsInNvdXJjZVJvb3QiOiJFOlxcY29kZVxcZGRzXFxzb2NpYWwtc2hhcmUtYmFja2VuZC1uaWt1bmRcXGFwaVxcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcydcbmltcG9ydCB7dXNlclJvdXRlcn0gZnJvbSAnLi91c2VycydcbmltcG9ydCB7ZnJpZW5kUm91dGVyfSBmcm9tICcuL0ZyaWVuZHMnXG5pbXBvcnQge3Bob3Rvc1JvdXRlcn0gZnJvbSAnLi9waG90b3MnXG5pbXBvcnQgeyBub3RpZmljYXRpb25Sb3V0ZXIgfSBmcm9tICcuL25vdGlmaWNhdGlvbi9ub3RpZmljYXRpb24ucmVzdFJvdXRlJztcbmltcG9ydCB7YWJvdXRSb3V0ZXJ9IGZyb20gJy4vYWJvdXQnXG5cbmV4cG9ydCBjb25zdCByZXN0Um91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxucmVzdFJvdXRlci51c2UoJy9hYm91dCcsYWJvdXRSb3V0ZXIpXG5yZXN0Um91dGVyLnVzZSgnL3Bob3RvcycscGhvdG9zUm91dGVyKVxucmVzdFJvdXRlci51c2UoJy91c2VyJyx1c2VyUm91dGVyKVxucmVzdFJvdXRlci51c2UoJy9mcmllbmQnLGZyaWVuZFJvdXRlcilcbnJlc3RSb3V0ZXIudXNlKCcvbm90aWZpY2F0aW9uJyxub3RpZmljYXRpb25Sb3V0ZXIpXG4vLyByZXN0Um91dGVyLnVzZSgnL21hdGlyaWFsJyxtYXRlcmlhbFJvdXRlcik7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "restRouter.js"
      ],
      "names": [
        "restRouter",
        "express",
        "Router",
        "use",
        "aboutRouter",
        "photosRouter",
        "userRouter",
        "friendRouter",
        "notificationRouter"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEO,IAAMA,UAAU,GAAGC,oBAAQC,MAAR,EAAnB;;;AAEPF,UAAU,CAACG,GAAX,CAAe,QAAf,EAAwBC,kBAAxB;AACAJ,UAAU,CAACG,GAAX,CAAe,SAAf,EAAyBE,oBAAzB;AACAL,UAAU,CAACG,GAAX,CAAe,OAAf,EAAuBG,iBAAvB;AACAN,UAAU,CAACG,GAAX,CAAe,SAAf,EAAyBI,qBAAzB;AACAP,UAAU,CAACG,GAAX,CAAe,eAAf,EAA+BK,gCAA/B,E,CACA",
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\",
      "sourcesContent": [
        "import express from 'express'\nimport {userRouter} from './users'\nimport {friendRouter} from './Friends'\nimport {photosRouter} from './photos'\nimport { notificationRouter } from './notification/notification.restRoute';\nimport {aboutRouter} from './about'\n\nexport const restRouter = express.Router();\n\nrestRouter.use('/about',aboutRouter)\nrestRouter.use('/photos',photosRouter)\nrestRouter.use('/user',userRouter)\nrestRouter.use('/friend',friendRouter)\nrestRouter.use('/notification',notificationRouter)\n// restRouter.use('/matirial',materialRouter);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1596606750421
  },
  "{\"sourceRoot\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\Friends\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"filename\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\Friends\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\Friends\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\code\\dds\\social-share-backend-nikund",
      "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\Friends\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\code\\dds\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\code\\dds\\social-share-backend-nikund\\api\\Friends\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\Friends\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\Friends\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _friend = require(\"./friend.modal\");\n\nObject.keys(_friend).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _friend[key];\n    }\n  });\n});\n\nvar _friend2 = require(\"./friend.restRoute\");\n\nObject.keys(_friend2).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _friend2[key];\n    }\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFDQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEiLCJzb3VyY2VSb290IjoiRTpcXGNvZGVcXGRkc1xcc29jaWFsLXNoYXJlLWJhY2tlbmQtbmlrdW5kXFxhcGlcXEZyaWVuZHNcXCIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vZnJpZW5kLm1vZGFsJztcbmV4cG9ydCAqIGZyb20gJy4vZnJpZW5kLnJlc3RSb3V0ZSciXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [],
      "mappings": ";;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA",
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\Friends\\",
      "sourcesContent": [
        "export * from './friend.modal';\nexport * from './friend.restRoute'"
      ]
    },
    "sourceType": "script",
    "mtime": 1594986599516
  },
  "{\"sourceRoot\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\Friends\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"filename\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\Friends\\\\friend.modal.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\Friends\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\code\\dds\\social-share-backend-nikund",
      "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\Friends\\friend.modal.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\code\\dds\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\code\\dds\\social-share-backend-nikund\\api\\Friends\\friend.modal.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\Friends\\friend.modal.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\Friends\\",
        "sourceFileName": "friend.modal.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FriendList = void 0;\n\nvar _mongoose = _interopRequireWildcard(require(\"mongoose\"));\n\nvar _mongooseTimestamp = _interopRequireDefault(require(\"mongoose-timestamp\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar friendSchema = (0, _mongoose.Schema)({\n  userId: String,\n  friendList: Array,\n  getRequest: Array,\n  sentRequest: Array\n}, {\n  timestamps: {\n    createdAt: 'created_at'\n  }\n});\n\nvar FriendList = _mongoose[\"default\"].model('FriendDocument', friendSchema);\n\nexports.FriendList = FriendList;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZyaWVuZC5tb2RhbC5qcyJdLCJuYW1lcyI6WyJmcmllbmRTY2hlbWEiLCJ1c2VySWQiLCJTdHJpbmciLCJmcmllbmRMaXN0IiwiQXJyYXkiLCJnZXRSZXF1ZXN0Iiwic2VudFJlcXVlc3QiLCJ0aW1lc3RhbXBzIiwiY3JlYXRlZEF0IiwiRnJpZW5kTGlzdCIsIm1vbmdvb3NlIiwibW9kZWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7OztBQUVBLElBQU1BLFlBQVksR0FBRyxzQkFBTztBQUN4QkMsRUFBQUEsTUFBTSxFQUFDQyxNQURpQjtBQUV4QkMsRUFBQUEsVUFBVSxFQUFDQyxLQUZhO0FBR3hCQyxFQUFBQSxVQUFVLEVBQUNELEtBSGE7QUFJeEJFLEVBQUFBLFdBQVcsRUFBQ0Y7QUFKWSxDQUFQLEVBS2xCO0FBQUVHLEVBQUFBLFVBQVUsRUFBRTtBQUFDQyxJQUFBQSxTQUFTLEVBQUM7QUFBWDtBQUFkLENBTGtCLENBQXJCOztBQU9PLElBQU1DLFVBQVUsR0FBR0MscUJBQVNDLEtBQVQsQ0FBZSxnQkFBZixFQUFnQ1gsWUFBaEMsQ0FBbkIiLCJzb3VyY2VSb290IjoiRTpcXGNvZGVcXGRkc1xcc29jaWFsLXNoYXJlLWJhY2tlbmQtbmlrdW5kXFxhcGlcXEZyaWVuZHNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSwge1NjaGVtYX0gZnJvbSAnbW9uZ29vc2UnO1xuaW1wb3J0IHRpbWVzdGFtcHMgZnJvbSBcIm1vbmdvb3NlLXRpbWVzdGFtcFwiO1xuXG5jb25zdCBmcmllbmRTY2hlbWEgPSBTY2hlbWEoe1xuICAgIHVzZXJJZDpTdHJpbmcsXG4gICAgZnJpZW5kTGlzdDpBcnJheSxcbiAgICBnZXRSZXF1ZXN0OkFycmF5LFxuICAgIHNlbnRSZXF1ZXN0OkFycmF5XG59LCB7IHRpbWVzdGFtcHM6IHtjcmVhdGVkQXQ6J2NyZWF0ZWRfYXQnfSB9KVxuXG5leHBvcnQgY29uc3QgRnJpZW5kTGlzdCA9IG1vbmdvb3NlLm1vZGVsKCdGcmllbmREb2N1bWVudCcsZnJpZW5kU2NoZW1hKTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "friend.modal.js"
      ],
      "names": [
        "friendSchema",
        "userId",
        "String",
        "friendList",
        "Array",
        "getRequest",
        "sentRequest",
        "timestamps",
        "createdAt",
        "FriendList",
        "mongoose",
        "model"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;;;;;;;AAEA,IAAMA,YAAY,GAAG,sBAAO;AACxBC,EAAAA,MAAM,EAACC,MADiB;AAExBC,EAAAA,UAAU,EAACC,KAFa;AAGxBC,EAAAA,UAAU,EAACD,KAHa;AAIxBE,EAAAA,WAAW,EAACF;AAJY,CAAP,EAKlB;AAAEG,EAAAA,UAAU,EAAE;AAACC,IAAAA,SAAS,EAAC;AAAX;AAAd,CALkB,CAArB;;AAOO,IAAMC,UAAU,GAAGC,qBAASC,KAAT,CAAe,gBAAf,EAAgCX,YAAhC,CAAnB",
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\Friends\\",
      "sourcesContent": [
        "import mongoose, {Schema} from 'mongoose';\nimport timestamps from \"mongoose-timestamp\";\n\nconst friendSchema = Schema({\n    userId:String,\n    friendList:Array,\n    getRequest:Array,\n    sentRequest:Array\n}, { timestamps: {createdAt:'created_at'} })\n\nexport const FriendList = mongoose.model('FriendDocument',friendSchema);"
      ]
    },
    "sourceType": "script",
    "mtime": 1594986598903
  },
  "{\"sourceRoot\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\Friends\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"filename\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\Friends\\\\friend.restRoute.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\Friends\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\code\\dds\\social-share-backend-nikund",
      "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\Friends\\friend.restRoute.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\code\\dds\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\code\\dds\\social-share-backend-nikund\\api\\Friends\\friend.restRoute.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\Friends\\friend.restRoute.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\Friends\\",
        "sourceFileName": "friend.restRoute.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.friendRouter = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _friend = require(\"./friend.controller\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar friendRouter = _express[\"default\"].Router();\n\nexports.friendRouter = friendRouter;\nfriendRouter.get(\"/\", _friend.allUser);\nfriendRouter.post(\"/send\", _friend.sentFriendRequest);\nfriendRouter.post('/accept', _friend.friendRequestAccept);\nfriendRouter.get('/show', _friend.getFriendList);\nfriendRouter.get('/requests', _friend.showFriendRequetList);\nfriendRouter.get('/requestsData', _friend.showRequestedFriEndData);\nfriendRouter.post(\"/reject\", _friend.rejectFriendRequest);\nfriendRouter.get('/suggest', _friend.suggestedFriend);\nfriendRouter.post('/removeRequest', _friend.removeSendRequest);\nfriendRouter.get(\"/sentRequests\", _friend.AllSentRequest);\nfriendRouter.get(\"/userList\", _friend.notYourFriend);\nfriendRouter.get(\"/search\", _friend.searchEngine);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZyaWVuZC5yZXN0Um91dGUuanMiXSwibmFtZXMiOlsiZnJpZW5kUm91dGVyIiwiZXhwcmVzcyIsIlJvdXRlciIsImdldCIsImFsbFVzZXIiLCJwb3N0Iiwic2VudEZyaWVuZFJlcXVlc3QiLCJmcmllbmRSZXF1ZXN0QWNjZXB0IiwiZ2V0RnJpZW5kTGlzdCIsInNob3dGcmllbmRSZXF1ZXRMaXN0Iiwic2hvd1JlcXVlc3RlZEZyaUVuZERhdGEiLCJyZWplY3RGcmllbmRSZXF1ZXN0Iiwic3VnZ2VzdGVkRnJpZW5kIiwicmVtb3ZlU2VuZFJlcXVlc3QiLCJBbGxTZW50UmVxdWVzdCIsIm5vdFlvdXJGcmllbmQiLCJzZWFyY2hFbmdpbmUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7OztBQWdCTyxJQUFNQSxZQUFZLEdBQUdDLG9CQUFRQyxNQUFSLEVBQXJCOzs7QUFFUEYsWUFBWSxDQUFDRyxHQUFiLENBQWlCLEdBQWpCLEVBQXFCQyxlQUFyQjtBQUNBSixZQUFZLENBQUNLLElBQWIsQ0FBa0IsT0FBbEIsRUFBMEJDLHlCQUExQjtBQUNBTixZQUFZLENBQUNLLElBQWIsQ0FBa0IsU0FBbEIsRUFBNEJFLDJCQUE1QjtBQUNBUCxZQUFZLENBQUNHLEdBQWIsQ0FBaUIsT0FBakIsRUFBeUJLLHFCQUF6QjtBQUNBUixZQUFZLENBQUNHLEdBQWIsQ0FBaUIsV0FBakIsRUFBNkJNLDRCQUE3QjtBQUNBVCxZQUFZLENBQUNHLEdBQWIsQ0FBaUIsZUFBakIsRUFBaUNPLCtCQUFqQztBQUNBVixZQUFZLENBQUNLLElBQWIsQ0FBa0IsU0FBbEIsRUFBNEJNLDJCQUE1QjtBQUNBWCxZQUFZLENBQUNHLEdBQWIsQ0FBaUIsVUFBakIsRUFBNEJTLHVCQUE1QjtBQUNBWixZQUFZLENBQUNLLElBQWIsQ0FBa0IsZ0JBQWxCLEVBQW1DUSx5QkFBbkM7QUFDQWIsWUFBWSxDQUFDRyxHQUFiLENBQWlCLGVBQWpCLEVBQWlDVyxzQkFBakM7QUFDQWQsWUFBWSxDQUFDRyxHQUFiLENBQWlCLFdBQWpCLEVBQTZCWSxxQkFBN0I7QUFDQWYsWUFBWSxDQUFDRyxHQUFiLENBQWlCLFNBQWpCLEVBQTJCYSxvQkFBM0IiLCJzb3VyY2VSb290IjoiRTpcXGNvZGVcXGRkc1xcc29jaWFsLXNoYXJlLWJhY2tlbmQtbmlrdW5kXFxhcGlcXEZyaWVuZHNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnXG5pbXBvcnQge1xuICAgIHNlbnRGcmllbmRSZXF1ZXN0LFxuICAgIGZyaWVuZFJlcXVlc3RBY2NlcHQsXG4gICAgZ2V0RnJpZW5kTGlzdCxcbiAgICBzaG93RnJpZW5kUmVxdWV0TGlzdCxcbiAgICByZWplY3RGcmllbmRSZXF1ZXN0LFxuICAgIHN1Z2dlc3RlZEZyaWVuZCxcbiAgICBhbGxVc2VyLFxuICAgIHJlbW92ZVNlbmRSZXF1ZXN0LFxuICAgIEFsbFNlbnRSZXF1ZXN0LFxuICAgIHNob3dSZXF1ZXN0ZWRGcmlFbmREYXRhLFxuICAgIG5vdFlvdXJGcmllbmQsXG4gICAgc2VhcmNoRW5naW5lXG4gXG5cbn0gZnJvbSAnLi9mcmllbmQuY29udHJvbGxlcidcbmV4cG9ydCBjb25zdCBmcmllbmRSb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG5mcmllbmRSb3V0ZXIuZ2V0KFwiL1wiLGFsbFVzZXIpXG5mcmllbmRSb3V0ZXIucG9zdChcIi9zZW5kXCIsc2VudEZyaWVuZFJlcXVlc3QpXG5mcmllbmRSb3V0ZXIucG9zdCgnL2FjY2VwdCcsZnJpZW5kUmVxdWVzdEFjY2VwdClcbmZyaWVuZFJvdXRlci5nZXQoJy9zaG93JyxnZXRGcmllbmRMaXN0KVxuZnJpZW5kUm91dGVyLmdldCgnL3JlcXVlc3RzJyxzaG93RnJpZW5kUmVxdWV0TGlzdClcbmZyaWVuZFJvdXRlci5nZXQoJy9yZXF1ZXN0c0RhdGEnLHNob3dSZXF1ZXN0ZWRGcmlFbmREYXRhKVxuZnJpZW5kUm91dGVyLnBvc3QoXCIvcmVqZWN0XCIscmVqZWN0RnJpZW5kUmVxdWVzdClcbmZyaWVuZFJvdXRlci5nZXQoJy9zdWdnZXN0JyxzdWdnZXN0ZWRGcmllbmQpXG5mcmllbmRSb3V0ZXIucG9zdCgnL3JlbW92ZVJlcXVlc3QnLHJlbW92ZVNlbmRSZXF1ZXN0KVxuZnJpZW5kUm91dGVyLmdldChcIi9zZW50UmVxdWVzdHNcIixBbGxTZW50UmVxdWVzdClcbmZyaWVuZFJvdXRlci5nZXQoXCIvdXNlckxpc3RcIixub3RZb3VyRnJpZW5kKVxuZnJpZW5kUm91dGVyLmdldChcIi9zZWFyY2hcIixzZWFyY2hFbmdpbmUpIl19",
    "map": {
      "version": 3,
      "sources": [
        "friend.restRoute.js"
      ],
      "names": [
        "friendRouter",
        "express",
        "Router",
        "get",
        "allUser",
        "post",
        "sentFriendRequest",
        "friendRequestAccept",
        "getFriendList",
        "showFriendRequetList",
        "showRequestedFriEndData",
        "rejectFriendRequest",
        "suggestedFriend",
        "removeSendRequest",
        "AllSentRequest",
        "notYourFriend",
        "searchEngine"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAgBO,IAAMA,YAAY,GAAGC,oBAAQC,MAAR,EAArB;;;AAEPF,YAAY,CAACG,GAAb,CAAiB,GAAjB,EAAqBC,eAArB;AACAJ,YAAY,CAACK,IAAb,CAAkB,OAAlB,EAA0BC,yBAA1B;AACAN,YAAY,CAACK,IAAb,CAAkB,SAAlB,EAA4BE,2BAA5B;AACAP,YAAY,CAACG,GAAb,CAAiB,OAAjB,EAAyBK,qBAAzB;AACAR,YAAY,CAACG,GAAb,CAAiB,WAAjB,EAA6BM,4BAA7B;AACAT,YAAY,CAACG,GAAb,CAAiB,eAAjB,EAAiCO,+BAAjC;AACAV,YAAY,CAACK,IAAb,CAAkB,SAAlB,EAA4BM,2BAA5B;AACAX,YAAY,CAACG,GAAb,CAAiB,UAAjB,EAA4BS,uBAA5B;AACAZ,YAAY,CAACK,IAAb,CAAkB,gBAAlB,EAAmCQ,yBAAnC;AACAb,YAAY,CAACG,GAAb,CAAiB,eAAjB,EAAiCW,sBAAjC;AACAd,YAAY,CAACG,GAAb,CAAiB,WAAjB,EAA6BY,qBAA7B;AACAf,YAAY,CAACG,GAAb,CAAiB,SAAjB,EAA2Ba,oBAA3B",
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\Friends\\",
      "sourcesContent": [
        "import express from 'express'\nimport {\n    sentFriendRequest,\n    friendRequestAccept,\n    getFriendList,\n    showFriendRequetList,\n    rejectFriendRequest,\n    suggestedFriend,\n    allUser,\n    removeSendRequest,\n    AllSentRequest,\n    showRequestedFriEndData,\n    notYourFriend,\n    searchEngine\n \n\n} from './friend.controller'\nexport const friendRouter = express.Router();\n\nfriendRouter.get(\"/\",allUser)\nfriendRouter.post(\"/send\",sentFriendRequest)\nfriendRouter.post('/accept',friendRequestAccept)\nfriendRouter.get('/show',getFriendList)\nfriendRouter.get('/requests',showFriendRequetList)\nfriendRouter.get('/requestsData',showRequestedFriEndData)\nfriendRouter.post(\"/reject\",rejectFriendRequest)\nfriendRouter.get('/suggest',suggestedFriend)\nfriendRouter.post('/removeRequest',removeSendRequest)\nfriendRouter.get(\"/sentRequests\",AllSentRequest)\nfriendRouter.get(\"/userList\",notYourFriend)\nfriendRouter.get(\"/search\",searchEngine)"
      ]
    },
    "sourceType": "script",
    "mtime": 1597926377386
  },
  "{\"sourceRoot\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\Friends\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"filename\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\Friends\\\\friend.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\Friends\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\code\\dds\\social-share-backend-nikund",
      "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\Friends\\friend.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\code\\dds\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\code\\dds\\social-share-backend-nikund\\api\\Friends\\friend.controller.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\Friends\\friend.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\Friends\\",
        "sourceFileName": "friend.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.searchEngine = exports.notYourFriend = exports.AllSentRequest = exports.suggestedFriend = exports.rejectFriendRequest = exports.showRequestedFriEndData = exports.showFriendRequetList = exports.friendRequestAccept = exports.removeSendRequest = exports.sentFriendRequest = exports.getFriendList = exports.allUser = void 0;\n\nvar _friend = require(\"./friend.modal\");\n\nvar _user = require(\"../users/user.modal\");\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _config = _interopRequireDefault(require(\"../../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//push and query\nvar pullQuery = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(matchId, branchMatchId, branchName) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _friend.FriendList.updateOne({\n              userId: matchId\n            }, {\n              $pull: _defineProperty({}, branchName, {\n                friendId: branchMatchId\n              })\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function pullQuery(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar pushQuery = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(matchId, branchMatchId, branchName) {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _friend.FriendList.updateOne({\n              userId: matchId\n            }, {\n              $push: _defineProperty({}, branchName, {\n                $each: [{\n                  friendId: branchMatchId,\n                  date: new Date()\n                }]\n              })\n            });\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function pushQuery(_x4, _x5, _x6) {\n    return _ref2.apply(this, arguments);\n  };\n}(); //featch all user data\n\n\nvar allUser = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var decoded, user, userId, data;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 3:\n            decoded = _context3.sent;\n            _context3.next = 6;\n            return _user.Users.findOne({\n              emailId: decoded.sub\n            });\n\n          case 6:\n            user = _context3.sent;\n            userId = user._id;\n            console.log(userId);\n            _context3.next = 11;\n            return _user.Users.find({\n              _id: {\n                $not: {\n                  $eq: userId\n                }\n              }\n            }, {\n              _id: 1,\n              name: 1,\n              profileImgURl: 1\n            });\n\n          case 11:\n            data = _context3.sent;\n\n            if (!data) {\n              console.log(\"data not found\");\n            }\n\n            res.status(201).send({\n              success: true,\n              message: \"List fetched successfully\",\n              AllUser: [data]\n            });\n            _context3.next = 19;\n            break;\n\n          case 16:\n            _context3.prev = 16;\n            _context3.t0 = _context3[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context3.t0.message\n            });\n\n          case 19:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 16]]);\n  }));\n\n  return function allUser(_x7, _x8) {\n    return _ref3.apply(this, arguments);\n  };\n}(); //get friend list\n\n\nexports.allUser = allUser;\n\nvar getFriendList = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var userId, data, array, list, i, userData;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            userId = req.query.userId; //fetch the data of friendList\n\n            _context4.next = 4;\n            return _friend.FriendList.findOne({\n              userId: userId\n            });\n\n          case 4:\n            data = _context4.sent;\n            //check data fetched successfull or not\n            console.log(data);\n\n            if (data) {\n              _context4.next = 8;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", res.status(401).send({\n              success: false,\n              message: \"No friends to show\"\n            }));\n\n          case 8:\n            array = [];\n            list = data.friendList;\n            i = 0;\n\n          case 11:\n            if (!(i < list.length)) {\n              _context4.next = 19;\n              break;\n            }\n\n            _context4.next = 14;\n            return _user.Users.findOne({\n              _id: list[i].friendId\n            }, {\n              _id: 1,\n              name: 1,\n              profileImgURl: 1\n            });\n\n          case 14:\n            userData = _context4.sent;\n            array.push(userData);\n\n          case 16:\n            i++;\n            _context4.next = 11;\n            break;\n\n          case 19:\n            console.log(array); //send fetched data list\n\n            res.status(201).send({\n              success: true,\n              message: \"List fetched successfully\",\n              userInfo: array\n            });\n            _context4.next = 26;\n            break;\n\n          case 23:\n            _context4.prev = 23;\n            _context4.t0 = _context4[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context4.t0.message\n            });\n\n          case 26:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 23]]);\n  }));\n\n  return function getFriendList(_x9, _x10) {\n    return _ref4.apply(this, arguments);\n  };\n}(); //when user send friend request\n\n\nexports.getFriendList = getFriendList;\n\nvar sentFriendRequest = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var _req$body, userId, requestId, userFind, requestUserFind, findRequest;\n\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _req$body = req.body, userId = _req$body.userId, requestId = _req$body.requestId;\n            _context5.next = 4;\n            return _friend.FriendList.find({\n              userId: userId\n            });\n\n          case 4:\n            userFind = _context5.sent;\n            _context5.next = 7;\n            return _friend.FriendList.find({\n              userId: requestId\n            });\n\n          case 7:\n            requestUserFind = _context5.sent;\n\n            if (!(userFind <= 0)) {\n              _context5.next = 11;\n              break;\n            }\n\n            _context5.next = 11;\n            return _friend.FriendList.create({\n              userId: userId,\n              friendList: [],\n              getRequest: [],\n              sentRequest: []\n            });\n\n          case 11:\n            if (!(requestUserFind <= 0)) {\n              _context5.next = 14;\n              break;\n            }\n\n            _context5.next = 14;\n            return _friend.FriendList.create({\n              userId: requestId,\n              friendList: [],\n              getRequest: [],\n              sentRequest: []\n            });\n\n          case 14:\n            //find request inside datbase if found than send response false\n            findRequest = false;\n\n            if (!(!userFind.length <= 0)) {\n              _context5.next = 22;\n              break;\n            }\n\n            _context5.next = 18;\n            return userFind[0].getRequest.map(function (item) {\n              if (item.friendId == requestId) {\n                findRequest = true;\n              }\n            });\n\n          case 18:\n            _context5.next = 20;\n            return userFind[0].sentRequest.map(function (item) {\n              if (item.friendId == requestId) {\n                findRequest = true;\n              }\n            });\n\n          case 20:\n            _context5.next = 22;\n            return userFind[0].friendList.map(function (item) {\n              if (item.friendId == requestId) {\n                findRequest = true;\n              }\n            });\n\n          case 22:\n            if (!findRequest) {\n              _context5.next = 24;\n              break;\n            }\n\n            return _context5.abrupt(\"return\", res.status(401).send({\n              success: false,\n              message: \"friend request already sent or recive either you are already friends\"\n            }));\n\n          case 24:\n            //set request in database and send positive response\n            //pushQuery(matchId,BranchMatchId,BranchName);\n            pushQuery(userId, requestId, \"sentRequest\");\n            pushQuery(requestId, userId, \"getRequest\"); // const data = await Users.findById({_id:userId})\n            // console.log(data);\n            // const usernotification = await notificationList.findOne({userId:requestId})\n            //     if(!usernotification){\n            //         await notificationList.create({\n            //             userId:requestId,\n            //             notificaton:[]\n            //         })\n            //     }\n            // await notificationList.findOneAndUpdate({userId:requestId},{\n            //     $push:{notification : {\n            //         type : \"friend request\",\n            //         user: userId,\n            //         userprofile: data.profileImgURL,\n            //         content :data.userName + \" sent you friend Request\" ,\n            //         date : Date()\n            //     }}\n            // })\n\n            res.status(201).send({\n              success: true,\n              message: \"request sent successfully\"\n            });\n            _context5.next = 32;\n            break;\n\n          case 29:\n            _context5.prev = 29;\n            _context5.t0 = _context5[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context5.t0.message\n            });\n\n          case 32:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 29]]);\n  }));\n\n  return function sentFriendRequest(_x11, _x12) {\n    return _ref5.apply(this, arguments);\n  };\n}(); // delete sendrequest\n\n\nexports.sentFriendRequest = sentFriendRequest;\n\nvar removeSendRequest = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var _req$body2, userId, requestId;\n\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            _req$body2 = req.body, userId = _req$body2.userId, requestId = _req$body2.requestId;\n            pullQuery(userId, requestId, \"sentRequest\");\n            pullQuery(requestId, userId, \"getRequest\");\n            return _context6.abrupt(\"return\", res.status(201).send({\n              success: true,\n              message: \"remove request\"\n            }));\n\n          case 7:\n            _context6.prev = 7;\n            _context6.t0 = _context6[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context6.t0.message\n            });\n\n          case 10:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[0, 7]]);\n  }));\n\n  return function removeSendRequest(_x13, _x14) {\n    return _ref6.apply(this, arguments);\n  };\n}(); //when approve friend request\n\n\nexports.removeSendRequest = removeSendRequest;\n\nvar friendRequestAccept = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n    var _req$body3, userId, requestId, userFind, requestedUser, requestExist;\n\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.prev = 0;\n            _req$body3 = req.body, userId = _req$body3.userId, requestId = _req$body3.requestId;\n            _context7.next = 4;\n            return _friend.FriendList.find({\n              userId: userId\n            });\n\n          case 4:\n            userFind = _context7.sent;\n            _context7.next = 7;\n            return _user.Users.findById({\n              _id: requestId\n            });\n\n          case 7:\n            requestedUser = _context7.sent;\n            //console.log('user', requestedUser)\n            //find request exist or not if not then send negative response\n            requestExist = false;\n            userFind[0].getRequest.map(function (item) {\n              if (item.friendId == requestId) {\n                requestExist = true;\n              }\n            });\n\n            if (requestExist) {\n              _context7.next = 12;\n              break;\n            }\n\n            return _context7.abrupt(\"return\", res.status(401).send({\n              success: false,\n              message: \"Request are not exist\"\n            }));\n\n          case 12:\n            pushQuery(userId, requestId, \"friendList\");\n            pullQuery(userId, requestId, \"getRequest\");\n            pushQuery(requestId, userId, \"friendList\");\n            pullQuery(requestId, userId, \"sentRequest\"); // const data = await Users.findById({_id:userId})\n            // console.log(data);\n            // const usernotification = await notificationList.findOne({userId:requestId})\n            //     if(!usernotification){\n            //         await notificationList.create({\n            //             userId:requestId,\n            //             notificaton:[]\n            //         })\n            //     }\n            // await notificationList.findOneAndUpdate({userId:requestId},{\n            //     $push:{notification : {\n            //         type : \"accept request\",\n            //         user: userId,\n            //         content :data.userName + \" accept friend Request\" ,\n            //         userprofile: data.profileImgURL,\n            //         date : Date()\n            //     }}\n            // })\n\n            return _context7.abrupt(\"return\", res.status(200).send({\n              success: true,\n              message: \"you and \" + [requestedUser.userName] + \" are friend's now\"\n            }));\n\n          case 19:\n            _context7.prev = 19;\n            _context7.t0 = _context7[\"catch\"](0);\n            res.status(401).send({\n              success: true,\n              message: _context7.t0.message\n            });\n\n          case 22:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[0, 19]]);\n  }));\n\n  return function friendRequestAccept(_x15, _x16) {\n    return _ref7.apply(this, arguments);\n  };\n}(); //when user want friend request List\n\n\nexports.friendRequestAccept = friendRequestAccept;\n\nvar showFriendRequetList = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(req, res) {\n    var userId, userFind;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.prev = 0;\n            userId = req.query.id;\n            console.log(userId);\n            _context8.next = 5;\n            return _friend.FriendList.findOne({\n              userId: userId\n            });\n\n          case 5:\n            userFind = _context8.sent;\n\n            if (userFind) {\n              _context8.next = 9;\n              break;\n            }\n\n            _context8.next = 9;\n            return _friend.FriendList.create({\n              userId: userId,\n              friendList: [],\n              getRequest: [],\n              sentRequest: []\n            });\n\n          case 9:\n            if (userFind.getRequest.length <= 0) {\n              res.status(401).send({\n                success: false,\n                message: \"Not any friend request avilable\"\n              });\n            } else {\n              res.status(200).send({\n                success: true,\n                message: \"List found\",\n                list: userFind.getRequest.reverse()\n              });\n            }\n\n            _context8.next = 15;\n            break;\n\n          case 12:\n            _context8.prev = 12;\n            _context8.t0 = _context8[\"catch\"](0);\n            res.status(401).send({\n              success: true,\n              message: _context8.t0.message\n            });\n\n          case 15:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[0, 12]]);\n  }));\n\n  return function showFriendRequetList(_x17, _x18) {\n    return _ref8.apply(this, arguments);\n  };\n}(); //data of requested user data\n\n\nexports.showFriendRequetList = showFriendRequetList;\n\nvar showRequestedFriEndData = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(req, res) {\n    var userId, dataR, Friend, fList, i, d;\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.prev = 0;\n            userId = req.query.id;\n            console.log(userId);\n            dataR = [];\n            _context9.next = 6;\n            return _friend.FriendList.findOne({\n              userId: userId\n            });\n\n          case 6:\n            Friend = _context9.sent;\n            fList = Friend.getRequest;\n            console.log(fList);\n            i = 0;\n\n          case 10:\n            if (!(i < fList.length)) {\n              _context9.next = 18;\n              break;\n            }\n\n            _context9.next = 13;\n            return _user.Users.findById({\n              _id: fList[i].friendId\n            }, {\n              name: 1,\n              profileImgURl: 1\n            });\n\n          case 13:\n            d = _context9.sent;\n            // console.log(d);\n            dataR.push(d);\n\n          case 15:\n            i++;\n            _context9.next = 10;\n            break;\n\n          case 18:\n            console.log(dataR);\n            res.status(200).send({\n              success: true,\n              message: \"List found\",\n              list: dataR\n            });\n            _context9.next = 25;\n            break;\n\n          case 22:\n            _context9.prev = 22;\n            _context9.t0 = _context9[\"catch\"](0);\n            res.status(401).send({\n              success: true,\n              message: _context9.t0.message\n            });\n\n          case 25:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9, null, [[0, 22]]);\n  }));\n\n  return function showRequestedFriEndData(_x19, _x20) {\n    return _ref9.apply(this, arguments);\n  };\n}(); //when user reject friend request\n\n\nexports.showRequestedFriEndData = showRequestedFriEndData;\n\nvar rejectFriendRequest = /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(req, res) {\n    var _req$body4, userId, requestId;\n\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.prev = 0;\n            _req$body4 = req.body, userId = _req$body4.userId, requestId = _req$body4.requestId;\n            pullQuery(userId, requestId, \"getRequest\"); //remove request from user account\n\n            pullQuery(requestId, userId, \"sentRequest\"); //remove request from requested account\n\n            return _context10.abrupt(\"return\", res.status(201).send({\n              success: true,\n              message: \"reject successfully\"\n            }));\n\n          case 7:\n            _context10.prev = 7;\n            _context10.t0 = _context10[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context10.t0.message\n            });\n\n          case 10:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10, null, [[0, 7]]);\n  }));\n\n  return function rejectFriendRequest(_x21, _x22) {\n    return _ref10.apply(this, arguments);\n  };\n}(); //suggested friends\n// const getSuggestFriend = (friend) =>{\n// }\n\n\nexports.rejectFriendRequest = rejectFriendRequest;\n\nvar suggestedFriend = /*#__PURE__*/function () {\n  var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(req, res) {\n    var userId, friends, Fdata, i, suggest, data, Udata;\n    return regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _context12.prev = 0;\n            userId = req.body.userId;\n            _context12.next = 4;\n            return _friend.FriendList.findOne({\n              userId: userId\n            });\n\n          case 4:\n            friends = _context12.sent;\n            Fdata = [];\n\n            for (i = 0; i < friends.friendList.length; i++) {\n              Fdata.push(friends.friendList[i].friendId);\n            }\n\n            suggest = [];\n            _context12.next = 10;\n            return Promise.all(friends.friendList.map( /*#__PURE__*/function () {\n              var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(item) {\n                var findFriendOfFriend;\n                return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                  while (1) {\n                    switch (_context11.prev = _context11.next) {\n                      case 0:\n                        _context11.next = 2;\n                        return _friend.FriendList.findOne({\n                          userId: item.friendId\n                        });\n\n                      case 2:\n                        findFriendOfFriend = _context11.sent;\n                        _context11.next = 5;\n                        return Promise.all(findFriendOfFriend.friendList.map(function (items) {\n                          if (items.friendId != userId) {\n                            suggest.push(items.friendId);\n                          }\n                        }));\n\n                      case 5:\n                      case \"end\":\n                        return _context11.stop();\n                    }\n                  }\n                }, _callee11);\n              }));\n\n              return function (_x25) {\n                return _ref12.apply(this, arguments);\n              };\n            }()));\n\n          case 10:\n            data = suggest.filter(function (i) {\n              return this.indexOf(i) < 0;\n            }, Fdata);\n            _context12.next = 13;\n            return _user.Users.find({\n              _id: {\n                $in: data\n              }\n            }, {\n              _id: 1,\n              name: 1,\n              profileImgURl: 1\n            });\n\n          case 13:\n            Udata = _context12.sent;\n            return _context12.abrupt(\"return\", res.status(200).send({\n              success: true,\n              data: Udata\n            }));\n\n          case 17:\n            _context12.prev = 17;\n            _context12.t0 = _context12[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context12.t0.message\n            });\n\n          case 20:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12, null, [[0, 17]]);\n  }));\n\n  return function suggestedFriend(_x23, _x24) {\n    return _ref11.apply(this, arguments);\n  };\n}(); //show all sentReuest\n\n\nexports.suggestedFriend = suggestedFriend;\n\nvar AllSentRequest = /*#__PURE__*/function () {\n  var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(req, res) {\n    var decoded, data, userId, userFind;\n    return regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _context13.prev = 0;\n            _context13.next = 3;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 3:\n            decoded = _context13.sent;\n            _context13.next = 6;\n            return _user.Users.findOne({\n              emailId: decoded.sub\n            });\n\n          case 6:\n            data = _context13.sent;\n            userId = data._id;\n            console.log(userId);\n            _context13.next = 11;\n            return _friend.FriendList.findOne({\n              userId: userId\n            });\n\n          case 11:\n            userFind = _context13.sent;\n\n            if (userFind) {\n              _context13.next = 15;\n              break;\n            }\n\n            _context13.next = 15;\n            return _friend.FriendList.create({\n              userId: userId,\n              friendList: [],\n              getRequest: [],\n              sentRequest: []\n            });\n\n          case 15:\n            res.status(200).send({\n              success: true,\n              message: \"List found\",\n              list: userFind.sentRequest\n            });\n            _context13.next = 21;\n            break;\n\n          case 18:\n            _context13.prev = 18;\n            _context13.t0 = _context13[\"catch\"](0);\n            res.status(401).send({\n              success: true,\n              message: _context13.t0.message\n            });\n\n          case 21:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13, null, [[0, 18]]);\n  }));\n\n  return function AllSentRequest(_x26, _x27) {\n    return _ref13.apply(this, arguments);\n  };\n}(); //featch all user data that notYourFriend\n\n\nexports.AllSentRequest = AllSentRequest;\n\nvar notYourFriend = /*#__PURE__*/function () {\n  var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(req, res) {\n    var decoded, user, userId, array, friendData, fList, i, data;\n    return regeneratorRuntime.wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            _context14.prev = 0;\n            _context14.next = 3;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 3:\n            decoded = _context14.sent;\n            _context14.next = 6;\n            return _user.Users.findOne({\n              emailId: decoded.sub\n            });\n\n          case 6:\n            user = _context14.sent;\n            userId = user._id; // console.log(userId);\n\n            array = [userId];\n            _context14.next = 11;\n            return _friend.FriendList.findOne({\n              userId: userId\n            });\n\n          case 11:\n            friendData = _context14.sent;\n            fList = friendData.friendList; // console.log(fList);\n\n            for (i = 0; i < fList.length; i++) {\n              //   console.log(fList[i].friendId);\n              array.push(fList[i].friendId);\n            }\n\n            _context14.next = 16;\n            return _user.Users.find({\n              _id: {\n                $nin: array\n              }\n            }, {\n              _id: 1,\n              name: 1,\n              profileImgURl: 1\n            });\n\n          case 16:\n            data = _context14.sent;\n            res.status(201).send({\n              success: true,\n              message: \"List fetched successfully\",\n              AllUser: [data]\n            });\n            _context14.next = 23;\n            break;\n\n          case 20:\n            _context14.prev = 20;\n            _context14.t0 = _context14[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context14.t0.message\n            });\n\n          case 23:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14, null, [[0, 20]]);\n  }));\n\n  return function notYourFriend(_x28, _x29) {\n    return _ref14.apply(this, arguments);\n  };\n}(); //search engin\n\n\nexports.notYourFriend = notYourFriend;\n\nfunction escapeRegex(text) {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n}\n\nvar searchEngine = /*#__PURE__*/function () {\n  var _ref15 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(req, res) {\n    var search, regex, data;\n    return regeneratorRuntime.wrap(function _callee15$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            _context15.prev = 0;\n            search = req.query.search;\n\n            if (!req.query.search) {\n              _context15.next = 8;\n              break;\n            }\n\n            regex = new RegExp(escapeRegex(search), \"gi\"); // Get all campgrounds from DB\n\n            _context15.next = 6;\n            return _user.Users.find({\n              $or: [{\n                name: regex\n              }, {\n                userName: regex\n              }]\n            }, {\n              id: 1,\n              name: 1,\n              userName: 1,\n              profileImgURl: 1\n            }, function (err, searchUser) {\n              if (err) {\n                console.log(err);\n              } else {\n                if (searchUser.length < 1) {\n                  res.status(401).send({\n                    success: false,\n                    message: \"No user found, please try again.\"\n                  });\n                }\n              }\n            }).limit(20);\n\n          case 6:\n            data = _context15.sent;\n            return _context15.abrupt(\"return\", res.status(201).send({\n              success: true,\n              message: data\n            }));\n\n          case 8:\n            _context15.next = 13;\n            break;\n\n          case 10:\n            _context15.prev = 10;\n            _context15.t0 = _context15[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context15.t0.message\n            });\n\n          case 13:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, _callee15, null, [[0, 10]]);\n  }));\n\n  return function searchEngine(_x30, _x31) {\n    return _ref15.apply(this, arguments);\n  };\n}();\n\nexports.searchEngine = searchEngine;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "friend.controller.js"
      ],
      "names": [
        "pullQuery",
        "matchId",
        "branchMatchId",
        "branchName",
        "FriendList",
        "updateOne",
        "userId",
        "$pull",
        "friendId",
        "pushQuery",
        "$push",
        "$each",
        "date",
        "Date",
        "allUser",
        "req",
        "res",
        "jwt",
        "verify",
        "headers",
        "token",
        "configKey",
        "secrets",
        "JWT_SECRET",
        "decoded",
        "Users",
        "findOne",
        "emailId",
        "sub",
        "user",
        "_id",
        "console",
        "log",
        "find",
        "$not",
        "$eq",
        "name",
        "profileImgURl",
        "data",
        "status",
        "send",
        "success",
        "message",
        "AllUser",
        "getFriendList",
        "query",
        "array",
        "list",
        "friendList",
        "i",
        "length",
        "userData",
        "push",
        "userInfo",
        "sentFriendRequest",
        "body",
        "requestId",
        "userFind",
        "requestUserFind",
        "create",
        "getRequest",
        "sentRequest",
        "findRequest",
        "map",
        "item",
        "removeSendRequest",
        "friendRequestAccept",
        "findById",
        "requestedUser",
        "requestExist",
        "userName",
        "showFriendRequetList",
        "id",
        "reverse",
        "showRequestedFriEndData",
        "dataR",
        "Friend",
        "fList",
        "d",
        "rejectFriendRequest",
        "suggestedFriend",
        "friends",
        "Fdata",
        "suggest",
        "Promise",
        "all",
        "findFriendOfFriend",
        "items",
        "filter",
        "indexOf",
        "$in",
        "Udata",
        "AllSentRequest",
        "notYourFriend",
        "friendData",
        "$nin",
        "escapeRegex",
        "text",
        "replace",
        "searchEngine",
        "search",
        "regex",
        "RegExp",
        "$or",
        "err",
        "searchUser",
        "limit"
      ],
      "mappings": "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",
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\Friends\\",
      "sourcesContent": [
        "import { FriendList } from \"./friend.modal\";\nimport { Users } from \"../users/user.modal\";\n// import {notificationList} from '../notification/notification.modal'\nimport jwt from \"jsonwebtoken\";\nimport configKey from \"../../config\";\n//push and query\nconst pullQuery = async (matchId, branchMatchId, branchName) => {\n  await FriendList.updateOne(\n    { userId: matchId },\n    {\n      $pull: {\n        [branchName]: {\n          friendId: branchMatchId,\n        },\n      },\n    }\n  );\n};\nconst pushQuery = async (matchId, branchMatchId, branchName) => {\n  await FriendList.updateOne(\n    { userId: matchId },\n    {\n      $push: {\n        [branchName]: {\n          $each: [\n            {\n              friendId: branchMatchId,\n              date: new Date(),\n            },\n          ],\n        },\n      },\n    }\n  );\n};\n\n//featch all user data\nexport const allUser = async (req, res) => {\n  try {\n    const decoded = await jwt.verify(\n      req.headers.token,\n      configKey.secrets.JWT_SECRET\n    );\n    const user = await Users.findOne({ emailId: decoded.sub });\n    const userId = user._id;\n    console.log(userId);\n    const data = await Users.find(\n      { _id: { $not: { $eq: userId } } },\n      { _id: 1, name: 1, profileImgURl: 1 }\n    );\n\n    if (!data) {\n      console.log(\"data not found\");\n    }\n    res.status(201).send({\n      success: true,\n      message: \"List fetched successfully\",\n      AllUser: [data],\n    });\n  } catch (err) {\n    res.status(401).send({\n      success: false,\n      message: err.message,\n    });\n  }\n};\n\n//get friend list\nexport const getFriendList = async (req, res) => {\n  try {\n    const userId = req.query.userId;\n    //fetch the data of friendList\n    const data = await FriendList.findOne({ userId: userId });\n    //check data fetched successfull or not\n    console.log(data);\n    if (!data) {\n      return res.status(401).send({\n        success: false,\n        message: \"No friends to show\",\n      });\n    }\n    var array = [];\n    var list = data.friendList;\n    for (var i = 0; i < list.length; i++) {\n      //   console.log(fList[i].friendId);\n      const userData = await Users.findOne(\n        { _id: list[i].friendId },\n        { _id: 1, name: 1, profileImgURl: 1 }\n      );\n      array.push(userData);\n    }\n    console.log(array);\n\n    //send fetched data list\n    res.status(201).send({\n      success: true,\n      message: \"List fetched successfully\",\n      userInfo: array,\n    });\n  } catch (err) {\n    res.status(401).send({\n      success: false,\n      message: err.message,\n    });\n  }\n};\n\n//when user send friend request\n\nexport const sentFriendRequest = async (req, res) => {\n  try {\n    const { userId, requestId } = req.body;\n\n    const userFind = await FriendList.find({ userId: userId });\n\n    const requestUserFind = await FriendList.find({ userId: requestId });\n    //check user  and requestUser document, available or not! , if not then genrate it\n    if (userFind <= 0) {\n      await FriendList.create({\n        userId: userId,\n        friendList: [],\n        getRequest: [],\n        sentRequest: [],\n      });\n    }\n    if (requestUserFind <= 0) {\n      await FriendList.create({\n        userId: requestId,\n        friendList: [],\n        getRequest: [],\n        sentRequest: [],\n      });\n    }\n    //find request inside datbase if found than send response false\n    var findRequest = false;\n    if (!userFind.length <= 0) {\n      await userFind[0].getRequest.map((item) => {\n        if (item.friendId == requestId) {\n          findRequest = true;\n        }\n      });\n      await userFind[0].sentRequest.map((item) => {\n        if (item.friendId == requestId) {\n          findRequest = true;\n        }\n      });\n      await userFind[0].friendList.map((item) => {\n        if (item.friendId == requestId) {\n          findRequest = true;\n        }\n      });\n    }\n    if (findRequest) {\n      return res.status(401).send({\n        success: false,\n        message:\n          \"friend request already sent or recive either you are already friends\",\n      });\n    }\n    //set request in database and send positive response\n    //pushQuery(matchId,BranchMatchId,BranchName);\n    pushQuery(userId, requestId, \"sentRequest\");\n    pushQuery(requestId, userId, \"getRequest\");\n\n    // const data = await Users.findById({_id:userId})\n    // console.log(data);\n    // const usernotification = await notificationList.findOne({userId:requestId})\n    //     if(!usernotification){\n    //         await notificationList.create({\n    //             userId:requestId,\n    //             notificaton:[]\n    //         })\n    //     }\n    // await notificationList.findOneAndUpdate({userId:requestId},{\n    //     $push:{notification : {\n    //         type : \"friend request\",\n    //         user: userId,\n    //         userprofile: data.profileImgURL,\n    //         content :data.userName + \" sent you friend Request\" ,\n    //         date : Date()\n    //     }}\n    // })\n\n    res.status(201).send({\n      success: true,\n      message: \"request sent successfully\",\n    });\n  } catch (err) {\n    res.status(401).send({\n      success: false,\n      message: err.message,\n    });\n  }\n};\n\n// delete sendrequest\nexport const removeSendRequest = async (req, res) => {\n  try {\n    const { userId, requestId } = req.body;\n    pullQuery(userId, requestId, \"sentRequest\");\n    pullQuery(requestId, userId, \"getRequest\");\n    return res.status(201).send({\n      success: true,\n      message: \"remove request\",\n    });\n  } catch (err) {\n    res.status(401).send({\n      success: false,\n      message: err.message,\n    });\n  }\n};\n\n//when approve friend request\n\nexport const friendRequestAccept = async (req, res) => {\n  try {\n    const { userId, requestId } = req.body;\n    const userFind = await FriendList.find({ userId: userId }); //check the user exist or not\n    const requestedUser = await Users.findById({ _id: requestId });\n    //console.log('user', requestedUser)\n    //find request exist or not if not then send negative response\n    var requestExist = false;\n    userFind[0].getRequest.map((item) => {\n      if (item.friendId == requestId) {\n        requestExist = true;\n      }\n    });\n    if (!requestExist) {\n      return res.status(401).send({\n        success: false,\n        message: \"Request are not exist\",\n      });\n    }\n    pushQuery(userId, requestId, \"friendList\");\n    pullQuery(userId, requestId, \"getRequest\");\n    pushQuery(requestId, userId, \"friendList\");\n    pullQuery(requestId, userId, \"sentRequest\");\n\n    // const data = await Users.findById({_id:userId})\n    // console.log(data);\n    // const usernotification = await notificationList.findOne({userId:requestId})\n    //     if(!usernotification){\n    //         await notificationList.create({\n    //             userId:requestId,\n    //             notificaton:[]\n    //         })\n    //     }\n    // await notificationList.findOneAndUpdate({userId:requestId},{\n    //     $push:{notification : {\n    //         type : \"accept request\",\n    //         user: userId,\n    //         content :data.userName + \" accept friend Request\" ,\n    //         userprofile: data.profileImgURL,\n    //         date : Date()\n    //     }}\n    // })\n\n    return res.status(200).send({\n      success: true,\n      message: \"you and \" + [requestedUser.userName] + \" are friend's now\",\n    });\n  } catch (err) {\n    res.status(401).send({\n      success: true,\n      message: err.message,\n    });\n  }\n};\n\n//when user want friend request List\nexport const showFriendRequetList = async (req, res) => {\n  try {\n    const userId = req.query.id;\n    console.log(userId);\n    const userFind = await FriendList.findOne({ userId: userId });\n    //check user is exist yes then fetch data else send nagative response\n    if (!userFind) {\n      await FriendList.create({\n        userId: userId,\n        friendList: [],\n        getRequest: [],\n        sentRequest: [],\n      });\n    }\n    if (userFind.getRequest.length <= 0) {\n      res.status(401).send({\n        success: false,\n        message: \"Not any friend request avilable\",\n      });\n    } else {\n      res.status(200).send({\n        success: true,\n        message: \"List found\",\n        list: userFind.getRequest.reverse(),\n      });\n    }\n  } catch (err) {\n    res.status(401).send({\n      success: true,\n      message: err.message,\n    });\n  }\n};\n//data of requested user data\nexport const showRequestedFriEndData = async (req, res) => {\n  try {\n    const userId = req.query.id;\n    console.log(userId);\n    var dataR = [];\n    const Friend = await FriendList.findOne({ userId: userId });\n    var fList = Friend.getRequest;\n    console.log(fList);\n    for (var i = 0; i < fList.length; i++) {\n      var d = await Users.findById(\n        { _id: fList[i].friendId },\n        { name: 1, profileImgURl: 1 }\n      );\n      // console.log(d);\n      dataR.push(d);\n    }\n    console.log(dataR);\n    res.status(200).send({ success: true, message: \"List found\", list: dataR });\n  } catch (err) {\n    res.status(401).send({\n      success: true,\n      message: err.message,\n    });\n  }\n};\n\n//when user reject friend request\nexport const rejectFriendRequest = async (req, res) => {\n  try {\n    const { userId, requestId } = req.body;\n    pullQuery(userId, requestId, \"getRequest\"); //remove request from user account\n    pullQuery(requestId, userId, \"sentRequest\"); //remove request from requested account\n    return res.status(201).send({\n      success: true,\n      message: \"reject successfully\",\n    });\n  } catch (err) {\n    res.status(401).send({\n      success: false,\n      message: err.message,\n    });\n  }\n};\n\n//suggested friends\n// const getSuggestFriend = (friend) =>{\n\n// }\nexport const suggestedFriend = async (req, res) => {\n  try {\n    const { userId } = req.body;\n    const friends = await FriendList.findOne({ userId: userId });\n    const Fdata = [];\n    for (var i = 0; i < friends.friendList.length; i++) {\n      Fdata.push(friends.friendList[i].friendId);\n    }\n    const suggest = [];\n    await Promise.all(\n      friends.friendList.map(async (item) => {\n        const findFriendOfFriend = await FriendList.findOne({\n          userId: item.friendId,\n        });\n        await Promise.all(\n          findFriendOfFriend.friendList.map((items) => {\n            if (items.friendId != userId) {\n              suggest.push(items.friendId);\n            }\n          })\n        );\n      })\n    );\n\n    var data = suggest.filter(function (i) {\n      return this.indexOf(i) < 0;\n    }, Fdata);\n\n    const Udata = await Users.find(\n      { _id: { $in: data } },\n      { _id: 1, name: 1, profileImgURl: 1 }\n    );\n\n    return res.status(200).send({\n      success: true,\n      data: Udata,\n    });\n  } catch (err) {\n    res.status(401).send({\n      success: false,\n      message: err.message,\n    });\n  }\n};\n\n//show all sentReuest\nexport const AllSentRequest = async (req, res) => {\n  try {\n    const decoded = await jwt.verify(\n      req.headers.token,\n      configKey.secrets.JWT_SECRET\n    );\n    const data = await Users.findOne({ emailId: decoded.sub });\n    const userId = data._id;\n    console.log(userId);\n    const userFind = await FriendList.findOne({ userId: userId });\n\n    if (!userFind) {\n      await FriendList.create({\n        userId: userId,\n        friendList: [],\n        getRequest: [],\n        sentRequest: [],\n      });\n    }\n    res.status(200).send({\n      success: true,\n      message: \"List found\",\n      list: userFind.sentRequest,\n    });\n  } catch (err) {\n    res.status(401).send({\n      success: true,\n      message: err.message,\n    });\n  }\n};\n\n//featch all user data that notYourFriend\nexport const notYourFriend = async (req, res) => {\n  try {\n    const decoded = await jwt.verify(\n      req.headers.token,\n      configKey.secrets.JWT_SECRET\n    );\n    const user = await Users.findOne({ emailId: decoded.sub });\n    const userId = user._id;\n    // console.log(userId);\n    var array = [userId];\n    const friendData = await FriendList.findOne({ userId: userId });\n    var fList = friendData.friendList;\n    // console.log(fList);\n    for (var i = 0; i < fList.length; i++) {\n      //   console.log(fList[i].friendId);\n      array.push(fList[i].friendId);\n    }\n    const data = await Users.find(\n      { _id: { $nin: array } },\n      { _id: 1, name: 1, profileImgURl: 1 }\n    );\n\n    res.status(201).send({\n      success: true,\n      message: \"List fetched successfully\",\n      AllUser: [data],\n    });\n  } catch (err) {\n    res.status(401).send({\n      success: false,\n      message: err.message,\n    });\n  }\n};\n\n//search engin\nfunction escapeRegex(text) {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n}\n\nexport const searchEngine = async (req, res) => {\n  try {\n    const { search } = req.query;\n    if (req.query.search) {\n      const regex = new RegExp(escapeRegex(search), \"gi\");\n      // Get all campgrounds from DB\n      const data = await Users.find(\n        { $or: [{ name: regex }, { userName: regex }] },\n        { id: 1, name: 1, userName: 1, profileImgURl: 1 },\n        function (err, searchUser) {\n          if (err) {\n            console.log(err);\n          } else {\n            if (searchUser.length < 1) {\n              res.status(401).send({\n                success: false,\n                message: \"No user found, please try again.\",\n              });\n            }\n          }\n        }\n      ).limit(20);\n      // console.log(data);\n\n      return res.status(201).send({\n        success: true,\n        message: data,\n      });\n    }\n  } catch (err) {\n    res.status(401).send({\n      success: false,\n      message: err.message,\n    });\n  }\n};\n\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1598006676994
  },
  "{\"sourceRoot\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\photos\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"filename\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\photos\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\photos\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\code\\dds\\social-share-backend-nikund",
      "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\photos\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\code\\dds\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\code\\dds\\social-share-backend-nikund\\api\\photos\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\photos\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\photos\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _photos = require(\"./photos.modal\");\n\nObject.keys(_photos).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _photos[key];\n    }\n  });\n});\n\nvar _photos2 = require(\"./photos.restRoute\");\n\nObject.keys(_photos2).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _photos2[key];\n    }\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFDQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEiLCJzb3VyY2VSb290IjoiRTpcXGNvZGVcXGRkc1xcc29jaWFsLXNoYXJlLWJhY2tlbmQtbmlrdW5kXFxhcGlcXHBob3Rvc1xcIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi9waG90b3MubW9kYWwnO1xyXG5leHBvcnQgKiBmcm9tICcuL3Bob3Rvcy5yZXN0Um91dGUnOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [],
      "mappings": ";;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA",
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\photos\\",
      "sourcesContent": [
        "export * from './photos.modal';\r\nexport * from './photos.restRoute';"
      ]
    },
    "sourceType": "script",
    "mtime": 1594265364429
  },
  "{\"sourceRoot\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\photos\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"filename\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\photos\\\\photos.modal.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\photos\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\code\\dds\\social-share-backend-nikund",
      "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\photos\\photos.modal.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\code\\dds\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\code\\dds\\social-share-backend-nikund\\api\\photos\\photos.modal.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\photos\\photos.modal.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\photos\\",
        "sourceFileName": "photos.modal.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.photosList = void 0;\n\nvar _mongoose = _interopRequireWildcard(require(\"mongoose\"));\n\nvar _mongooseTimestamp = _interopRequireDefault(require(\"mongoose-timestamp\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar photosSchema = (0, _mongoose.Schema)({\n  userId: String,\n  location: String,\n  description: String,\n  imageUrl: Array,\n  askingPrice: Number,\n  currentBid: Array,\n  like: Array,\n  comment: Array,\n  share: Array,\n  category: String,\n  highBid: Number\n}, {\n  timestamps: {\n    createdAt: 'created_at'\n  }\n});\n\nvar photosList = _mongoose[\"default\"].model('photosDocument', photosSchema);\n\nexports.photosList = photosList;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBob3Rvcy5tb2RhbC5qcyJdLCJuYW1lcyI6WyJwaG90b3NTY2hlbWEiLCJ1c2VySWQiLCJTdHJpbmciLCJsb2NhdGlvbiIsImRlc2NyaXB0aW9uIiwiaW1hZ2VVcmwiLCJBcnJheSIsImFza2luZ1ByaWNlIiwiTnVtYmVyIiwiY3VycmVudEJpZCIsImxpa2UiLCJjb21tZW50Iiwic2hhcmUiLCJjYXRlZ29yeSIsImhpZ2hCaWQiLCJ0aW1lc3RhbXBzIiwiY3JlYXRlZEF0IiwicGhvdG9zTGlzdCIsIm1vbmdvb3NlIiwibW9kZWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7OztBQUVBLElBQU1BLFlBQVksR0FBRyxzQkFBTztBQUN4QkMsRUFBQUEsTUFBTSxFQUFDQyxNQURpQjtBQUV4QkMsRUFBQUEsUUFBUSxFQUFDRCxNQUZlO0FBR3hCRSxFQUFBQSxXQUFXLEVBQUNGLE1BSFk7QUFJeEJHLEVBQUFBLFFBQVEsRUFBQ0MsS0FKZTtBQUt4QkMsRUFBQUEsV0FBVyxFQUFDQyxNQUxZO0FBTXhCQyxFQUFBQSxVQUFVLEVBQUNILEtBTmE7QUFPeEJJLEVBQUFBLElBQUksRUFBQ0osS0FQbUI7QUFReEJLLEVBQUFBLE9BQU8sRUFBQ0wsS0FSZ0I7QUFTeEJNLEVBQUFBLEtBQUssRUFBQ04sS0FUa0I7QUFVeEJPLEVBQUFBLFFBQVEsRUFBQ1gsTUFWZTtBQVd4QlksRUFBQUEsT0FBTyxFQUFDTjtBQVhnQixDQUFQLEVBWWxCO0FBQUVPLEVBQUFBLFVBQVUsRUFBRTtBQUFDQyxJQUFBQSxTQUFTLEVBQUM7QUFBWDtBQUFkLENBWmtCLENBQXJCOztBQWNPLElBQU1DLFVBQVUsR0FBR0MscUJBQVNDLEtBQVQsQ0FBZSxnQkFBZixFQUFnQ25CLFlBQWhDLENBQW5CIiwic291cmNlUm9vdCI6IkU6XFxjb2RlXFxkZHNcXHNvY2lhbC1zaGFyZS1iYWNrZW5kLW5pa3VuZFxcYXBpXFxwaG90b3NcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSwge1NjaGVtYX0gZnJvbSAnbW9uZ29vc2UnO1xyXG5pbXBvcnQgdGltZXN0YW1wcyBmcm9tIFwibW9uZ29vc2UtdGltZXN0YW1wXCI7XHJcblxyXG5jb25zdCBwaG90b3NTY2hlbWEgPSBTY2hlbWEoe1xyXG4gICAgdXNlcklkOlN0cmluZyxcclxuICAgIGxvY2F0aW9uOlN0cmluZyxcclxuICAgIGRlc2NyaXB0aW9uOlN0cmluZyxcclxuICAgIGltYWdlVXJsOkFycmF5LFxyXG4gICAgYXNraW5nUHJpY2U6TnVtYmVyLFxyXG4gICAgY3VycmVudEJpZDpBcnJheSxcclxuICAgIGxpa2U6QXJyYXksXHJcbiAgICBjb21tZW50OkFycmF5LFxyXG4gICAgc2hhcmU6QXJyYXksXHJcbiAgICBjYXRlZ29yeTpTdHJpbmcsXHJcbiAgICBoaWdoQmlkOk51bWJlcixcclxufSwgeyB0aW1lc3RhbXBzOiB7Y3JlYXRlZEF0OidjcmVhdGVkX2F0J30gfSlcclxuXHJcbmV4cG9ydCBjb25zdCBwaG90b3NMaXN0ID0gbW9uZ29vc2UubW9kZWwoJ3Bob3Rvc0RvY3VtZW50JyxwaG90b3NTY2hlbWEpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "photos.modal.js"
      ],
      "names": [
        "photosSchema",
        "userId",
        "String",
        "location",
        "description",
        "imageUrl",
        "Array",
        "askingPrice",
        "Number",
        "currentBid",
        "like",
        "comment",
        "share",
        "category",
        "highBid",
        "timestamps",
        "createdAt",
        "photosList",
        "mongoose",
        "model"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;;;;;;;AAEA,IAAMA,YAAY,GAAG,sBAAO;AACxBC,EAAAA,MAAM,EAACC,MADiB;AAExBC,EAAAA,QAAQ,EAACD,MAFe;AAGxBE,EAAAA,WAAW,EAACF,MAHY;AAIxBG,EAAAA,QAAQ,EAACC,KAJe;AAKxBC,EAAAA,WAAW,EAACC,MALY;AAMxBC,EAAAA,UAAU,EAACH,KANa;AAOxBI,EAAAA,IAAI,EAACJ,KAPmB;AAQxBK,EAAAA,OAAO,EAACL,KARgB;AASxBM,EAAAA,KAAK,EAACN,KATkB;AAUxBO,EAAAA,QAAQ,EAACX,MAVe;AAWxBY,EAAAA,OAAO,EAACN;AAXgB,CAAP,EAYlB;AAAEO,EAAAA,UAAU,EAAE;AAACC,IAAAA,SAAS,EAAC;AAAX;AAAd,CAZkB,CAArB;;AAcO,IAAMC,UAAU,GAAGC,qBAASC,KAAT,CAAe,gBAAf,EAAgCnB,YAAhC,CAAnB",
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\photos\\",
      "sourcesContent": [
        "import mongoose, {Schema} from 'mongoose';\r\nimport timestamps from \"mongoose-timestamp\";\r\n\r\nconst photosSchema = Schema({\r\n    userId:String,\r\n    location:String,\r\n    description:String,\r\n    imageUrl:Array,\r\n    askingPrice:Number,\r\n    currentBid:Array,\r\n    like:Array,\r\n    comment:Array,\r\n    share:Array,\r\n    category:String,\r\n    highBid:Number,\r\n}, { timestamps: {createdAt:'created_at'} })\r\n\r\nexport const photosList = mongoose.model('photosDocument',photosSchema);"
      ]
    },
    "sourceType": "script",
    "mtime": 1595303301974
  },
  "{\"sourceRoot\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\photos\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"filename\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\photos\\\\photos.restRoute.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\photos\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\code\\dds\\social-share-backend-nikund",
      "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\photos\\photos.restRoute.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\code\\dds\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\code\\dds\\social-share-backend-nikund\\api\\photos\\photos.restRoute.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\photos\\photos.restRoute.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\photos\\",
        "sourceFileName": "photos.restRoute.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.photosRouter = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _photos = require(\"./photos.controller\");\n\nvar _multer = _interopRequireDefault(require(\"multer\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _config = _interopRequireDefault(require(\"../../config\"));\n\nvar _users = require(\"../users\");\n\nvar _photos2 = require(\"./photos.modal\");\n\nvar _mimeNode = _interopRequireDefault(require(\"nodemailer/lib/mime-node\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar photosRouter = _express[\"default\"].Router();\n\nexports.photosRouter = photosRouter;\n\nvar postStorage = _multer[\"default\"].diskStorage({\n  destination: function () {\n    var _destination = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, file, cb) {\n      var postuploadDir;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              postuploadDir = _path[\"default\"].join(__dirname, '..', '..', 'public', 'post');\n\n              if (_fs[\"default\"].existsSync(postuploadDir)) {\n                cb(null, postuploadDir);\n              } else {\n                _fs[\"default\"].mkdirSync(postuploadDir);\n\n                cb(null, postuploadDir);\n              }\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function destination(_x, _x2, _x3) {\n      return _destination.apply(this, arguments);\n    }\n\n    return destination;\n  }(),\n  filename: function () {\n    var _filename = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, file, cb) {\n      var decoded, data;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n            case 2:\n              decoded = _context2.sent;\n              _context2.next = 5;\n              return _users.Users.findOne({\n                emailId: decoded.sub\n              });\n\n            case 5:\n              data = _context2.sent;\n              cb(null, data._id + \"_\" + Date.now() + \"_\" + file.originalname);\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function filename(_x4, _x5, _x6) {\n      return _filename.apply(this, arguments);\n    }\n\n    return filename;\n  }()\n});\n\nvar uploadPostImg = (0, _multer[\"default\"])({\n  storage: postStorage,\n  fileFilter: function fileFilter(req, file, cb) {\n    var fileType = /jpeg|jpg|png|gif|mp4|/;\n    var extension = file.originalname.substring(file.originalname.lastIndexOf('.') + 1);\n    var mimetype = fileType.test(file.mimetype);\n\n    if (mimetype && extension) {\n      return cb(null, true);\n    } else {\n      cb('Error:you can upload only Image file');\n    }\n  }\n});\nphotosRouter.post('/newPosts', uploadPostImg.array('Url', 12), _photos.newPosts);\nphotosRouter.post('/comment', _photos.Addcomment);\nphotosRouter.post(\"/bid\", _photos.newBid);\nphotosRouter.post(\"/like\", _photos.AddLike);\nphotosRouter.post(\"/share\", _photos.sharing);\nphotosRouter.post(\"/delete\", _photos.deletePost);\nphotosRouter.get(\"/show\", _photos.showphotos);\nphotosRouter.get(\"/userPhoto\", _photos.userUploadedPhotos);\nphotosRouter.get(\"/showpost\", _photos.showphotosprofile);\nphotosRouter.get(\"/homePost\", _photos.homePagePost);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBob3Rvcy5yZXN0Um91dGUuanMiXSwibmFtZXMiOlsicGhvdG9zUm91dGVyIiwiZXhwcmVzcyIsIlJvdXRlciIsInBvc3RTdG9yYWdlIiwibXVsdGVyIiwiZGlza1N0b3JhZ2UiLCJkZXN0aW5hdGlvbiIsInJlcSIsImZpbGUiLCJjYiIsInBvc3R1cGxvYWREaXIiLCJwYXRoIiwiam9pbiIsIl9fZGlybmFtZSIsImZzIiwiZXhpc3RzU3luYyIsIm1rZGlyU3luYyIsImZpbGVuYW1lIiwiand0IiwidmVyaWZ5IiwiaGVhZGVycyIsInRva2VuIiwiY29uZmlnS2V5Iiwic2VjcmV0cyIsIkpXVF9TRUNSRVQiLCJkZWNvZGVkIiwiVXNlcnMiLCJmaW5kT25lIiwiZW1haWxJZCIsInN1YiIsImRhdGEiLCJfaWQiLCJEYXRlIiwibm93Iiwib3JpZ2luYWxuYW1lIiwidXBsb2FkUG9zdEltZyIsInN0b3JhZ2UiLCJmaWxlRmlsdGVyIiwiZmlsZVR5cGUiLCJleHRlbnNpb24iLCJzdWJzdHJpbmciLCJsYXN0SW5kZXhPZiIsIm1pbWV0eXBlIiwidGVzdCIsInBvc3QiLCJhcnJheSIsIm5ld1Bvc3RzIiwiQWRkY29tbWVudCIsIm5ld0JpZCIsIkFkZExpa2UiLCJzaGFyaW5nIiwiZGVsZXRlUG9zdCIsImdldCIsInNob3dwaG90b3MiLCJ1c2VyVXBsb2FkZWRQaG90b3MiLCJzaG93cGhvdG9zcHJvZmlsZSIsImhvbWVQYWdlUG9zdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQWNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7OztBQUVPLElBQU1BLFlBQVksR0FBR0Msb0JBQVFDLE1BQVIsRUFBckI7Ozs7QUFFUCxJQUFJQyxXQUFXLEdBQUdDLG1CQUFPQyxXQUFQLENBQW1CO0FBQ2pDQyxFQUFBQSxXQUFXO0FBQUEsK0VBQUUsaUJBQWVDLEdBQWYsRUFBbUJDLElBQW5CLEVBQXdCQyxFQUF4QjtBQUFBO0FB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QixFQUF5QkMsa0JBQXpCO0FBQ0FyRCxZQUFZLENBQUNvRCxHQUFiLENBQWlCLFlBQWpCLEVBQThCRSwwQkFBOUI7QUFDQXRELFlBQVksQ0FBQ29ELEdBQWIsQ0FBaUIsV0FBakIsRUFBNkJHLHlCQUE3QjtBQUNBdkQsWUFBWSxDQUFDb0QsR0FBYixDQUFpQixXQUFqQixFQUE2Qkksb0JBQTdCIiwic291cmNlUm9vdCI6IkU6XFxjb2RlXFxkZHNcXHNvY2lhbC1zaGFyZS1iYWNrZW5kLW5pa3VuZFxcYXBpXFxwaG90b3NcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XHJcbmltcG9ydCB7XHJcbiAgICBzaG93cGhvdG9zLFxyXG4gICAgbmV3UG9zdHMsXHJcbiAgICBBZGRjb21tZW50LFxyXG4gICAgbmV3QmlkLFxyXG4gICAgQWRkTGlrZSxcclxuICAgIHNoYXJpbmcsXHJcbiAgICB1c2VyVXBsb2FkZWRQaG90b3MsXHJcbiAgICBkZWxldGVQb3N0LFxyXG4gICAgc2hvd3Bob3Rvc3Byb2ZpbGUsXHJcbiAgICBob21lUGFnZVBvc3QsXHJcbn1cclxuXHJcbmZyb20gJy4vcGhvdG9zLmNvbnRyb2xsZXInXHJcbmltcG9ydCBtdWx0ZXIgZnJvbSAnbXVsdGVyJztcclxuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XHJcbmltcG9ydCBmcyBmcm9tICdmcyc7XHJcbmltcG9ydCBqd3QgZnJvbSAnanNvbndlYnRva2VuJztcclxuaW1wb3J0IGNvbmZpZ0tleSBmcm9tICcuLi8uLi9jb25maWcnXHJcbmltcG9ydCB7VXNlcnN9IGZyb20gJy4uL3VzZXJzJ1xyXG5pbXBvcnQgeyBwaG90b3NMaXN0IH0gZnJvbSBcIi4vcGhvdG9zLm1vZGFsXCI7XHJcbmltcG9ydCBNaW1lTm9kZSBmcm9tIFwibm9kZW1haWxlci9saWIvbWltZS1ub2RlXCI7XHJcblxyXG5leHBvcnQgY29uc3QgcGhvdG9zUm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcclxuXHJcbnZhciBwb3N0U3RvcmFnZSA9IG11bHRlci5kaXNrU3RvcmFnZSh7XHJcbiAgICBkZXN0aW5hdGlvbjogYXN5bmMgZnVuY3Rpb24ocmVxLGZpbGUsY2Ipe1xyXG4gICAgICAgIFxyXG4gICAgICAgIGNvbnN0IHBvc3R1cGxvYWREaXIgPSBwYXRoLmpvaW4oX19kaXJuYW1lLCcuLicsJy4uJywncHVibGljJywncG9zdCcpO1xyXG4gICAgICAgIGlmKGZzLmV4aXN0c1N5bmMocG9zdHVwbG9hZERpcikpe1xyXG4gICAgICAgICAgICBjYihudWxsLHBvc3R1cGxvYWREaXIpXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgIGZzLm1rZGlyU3luYyhwb3N0dXBsb2FkRGlyKVxyXG4gICAgICAgICAgICBjYihudWxsLHBvc3R1cGxvYWREaXIpXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuXHJcbiAgICBmaWxlbmFtZTphc3luYyBmdW5jdGlvbihyZXEsZmlsZSxjYil7XHJcbiAgICAgICAgY29uc3QgZGVjb2RlZCA9IGF3YWl0IGp3dC52ZXJpZnkocmVxLmhlYWRlcnMudG9rZW4sIGNvbmZpZ0tleS5zZWNyZXRzLkpXVF9TRUNSRVQpO1xyXG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBVc2Vycy5maW5kT25lKHtlbWFpbElkOmRlY29kZWQuc3VifSlcclxuXHJcbiAgICAgICAgY2IobnVsbCxkYXRhLl9pZCtcIl9cIitEYXRlLm5vdygpK1wiX1wiK2ZpbGUub3JpZ2luYWxuYW1lKVxyXG4gICAgfVxyXG5cclxufSlcclxuXHJcbmNvbnN0IHVwbG9hZFBvc3RJbWcgPSBtdWx0ZXIgKHtcclxuICAgIHN0b3JhZ2U6cG9zdFN0b3JhZ2UsXHJcbiAgICBmaWxlRmlsdGVyOmZ1bmN0aW9uKHJlcSxmaWxlLGNiKXtcclxuICAgICAgICBjb25zdCBmaWxlVHlwZSA9IC9qcGVnfGpwZ3xwbmd8Z2lmfG1wNHwvO1xyXG4gICAgICAgIGNvbnN0IGV4dGVuc2lvbiA9IGZpbGUub3JpZ2luYWxuYW1lLnN1YnN0cmluZyhmaWxlLm9yaWdpbmFsbmFtZS5sYXN0SW5kZXhPZignLicpICsgMSk7XHJcbiAgICAgICAgY29uc3QgbWltZXR5cGUgPSBmaWxlVHlwZS50ZXN0KGZpbGUubWltZXR5cGUpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGlmKG1pbWV0eXBlICYmIGV4dGVuc2lvbil7XHJcbiAgICAgICAgICAgIHJldHVybiBjYihudWxsLHRydWUpO1xyXG4gICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICBjYignRXJyb3I6eW91IGNhbiB1cGxvYWQgb25seSBJbWFnZSBmaWxlJyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxufSlcclxuXHJcbnBob3Rvc1JvdXRlci5wb3N0KCcvbmV3UG9zdHMnLHVwbG9hZFBvc3RJbWcuYXJyYXkoJ1VybCcsMTIpLG5ld1Bvc3RzKVxyXG5waG90b3NSb3V0ZXIucG9zdCgnL2NvbW1lbnQnLEFkZGNvbW1lbnQpXHJcbnBob3Rvc1JvdXRlci5wb3N0KFwiL2JpZFwiLG5ld0JpZClcclxucGhvdG9zUm91dGVyLnBvc3QoXCIvbGlrZVwiLEFkZExpa2UpXHJcbnBob3Rvc1JvdXRlci5wb3N0KFwiL3NoYXJlXCIsc2hhcmluZylcclxucGhvdG9zUm91dGVyLnBvc3QoXCIvZGVsZXRlXCIsZGVsZXRlUG9zdClcclxucGhvdG9zUm91dGVyLmdldChcIi9zaG93XCIsc2hvd3Bob3RvcylcclxucGhvdG9zUm91dGVyLmdldChcIi91c2VyUGhvdG9cIix1c2VyVXBsb2FkZWRQaG90b3MpXHJcbnBob3Rvc1JvdXRlci5nZXQoXCIvc2hvd3Bvc3RcIixzaG93cGhvdG9zcHJvZmlsZSlcclxucGhvdG9zUm91dGVyLmdldChcIi9ob21lUG9zdFwiLGhvbWVQYWdlUG9zdCkiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "photos.restRoute.js"
      ],
      "names": [
        "photosRouter",
        "express",
        "Router",
        "postStorage",
        "multer",
        "diskStorage",
        "destination",
        "req",
        "file",
        "cb",
        "postuploadDir",
        "path",
        "join",
        "__dirname",
        "fs",
        "existsSync",
        "mkdirSync",
        "filename",
        "jwt",
        "verify",
        "headers",
        "token",
        "configKey",
        "secrets",
        "JWT_SECRET",
        "decoded",
        "Users",
        "findOne",
        "emailId",
        "sub",
        "data",
        "_id",
        "Date",
        "now",
        "originalname",
        "uploadPostImg",
        "storage",
        "fileFilter",
        "fileType",
        "extension",
        "substring",
        "lastIndexOf",
        "mimetype",
        "test",
        "post",
        "array",
        "newPosts",
        "Addcomment",
        "newBid",
        "AddLike",
        "sharing",
        "deletePost",
        "get",
        "showphotos",
        "userUploadedPhotos",
        "showphotosprofile",
        "homePagePost"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAcA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEO,IAAMA,YAAY,GAAGC,oBAAQC,MAAR,EAArB;;;;AAEP,IAAIC,WAAW,GAAGC,mBAAOC,WAAP,CAAmB;AACjCC,EAAAA,WAAW;AAAA,+EAAE,iBAAeC,GAAf,EAAmBC,IAAnB,EAAwBC,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEHC,cAAAA,aAFG,GAEaC,iBAAKC,IAAL,CAAUC,SAAV,EAAoB,IAApB,EAAyB,IAAzB,EAA8B,QAA9B,EAAuC,MAAvC,CAFb;;AAGT,kBAAGC,eAAGC,UAAH,CAAcL,aAAd,CAAH,EAAgC;AAC5BD,gBAAAA,EAAE,CAAC,IAAD,EAAMC,aAAN,CAAF;AACH,eAFD,MAGI;AACAI,+BAAGE,SAAH,CAAaN,aAAb;;AACAD,gBAAAA,EAAE,CAAC,IAAD,EAAMC,aAAN,CAAF;AACH;;AATQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADsB;AAajCO,EAAAA,QAAQ;AAAA,4EAAC,kBAAeV,GAAf,EAAmBC,IAAnB,EAAwBC,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACiBS,yBAAIC,MAAJ,CAAWZ,GAAG,CAACa,OAAJ,CAAYC,KAAvB,EAA8BC,mBAAUC,OAAV,CAAkBC,UAAhD,CADjB;;AAAA;AACCC,cAAAA,OADD;AAAA;AAAA,qBAEcC,aAAMC,OAAN,CAAc;AAACC,gBAAAA,OAAO,EAACH,OAAO,CAACI;AAAjB,eAAd,CAFd;;AAAA;AAECC,cAAAA,IAFD;AAILrB,cAAAA,EAAE,CAAC,IAAD,EAAMqB,IAAI,CAACC,GAAL,GAAS,GAAT,GAAaC,IAAI,CAACC,GAAL,EAAb,GAAwB,GAAxB,GAA4BzB,IAAI,CAAC0B,YAAvC,CAAF;;AAJK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAbyB,CAAnB,CAAlB;;AAsBA,IAAMC,aAAa,GAAG,wBAAQ;AAC1BC,EAAAA,OAAO,EAACjC,WADkB;AAE1BkC,EAAAA,UAAU,EAAC,oBAAS9B,GAAT,EAAaC,IAAb,EAAkBC,EAAlB,EAAqB;AAC5B,QAAM6B,QAAQ,GAAG,uBAAjB;AACA,QAAMC,SAAS,GAAG/B,IAAI,CAAC0B,YAAL,CAAkBM,SAAlB,CAA4BhC,IAAI,CAAC0B,YAAL,CAAkBO,WAAlB,CAA8B,GAA9B,IAAqC,CAAjE,CAAlB;AACA,QAAMC,QAAQ,GAAGJ,QAAQ,CAACK,IAAT,CAAcnC,IAAI,CAACkC,QAAnB,CAAjB;;AAEA,QAAGA,QAAQ,IAAIH,SAAf,EAAyB;AACrB,aAAO9B,EAAE,CAAC,IAAD,EAAM,IAAN,CAAT;AACH,KAFD,MAEK;AACDA,MAAAA,EAAE,CAAC,sCAAD,CAAF;AACH;AAEJ;AAbyB,CAAR,CAAtB;AAgBAT,YAAY,CAAC4C,IAAb,CAAkB,WAAlB,EAA8BT,aAAa,CAACU,KAAd,CAAoB,KAApB,EAA0B,EAA1B,CAA9B,EAA4DC,gBAA5D;AACA9C,YAAY,CAAC4C,IAAb,CAAkB,UAAlB,EAA6BG,kBAA7B;AACA/C,YAAY,CAAC4C,IAAb,CAAkB,MAAlB,EAAyBI,cAAzB;AACAhD,YAAY,CAAC4C,IAAb,CAAkB,OAAlB,EAA0BK,eAA1B;AACAjD,YAAY,CAAC4C,IAAb,CAAkB,QAAlB,EAA2BM,eAA3B;AACAlD,YAAY,CAAC4C,IAAb,CAAkB,SAAlB,EAA4BO,kBAA5B;AACAnD,YAAY,CAACoD,GAAb,CAAiB,OAAjB,EAAyBC,kBAAzB;AACArD,YAAY,CAACoD,GAAb,CAAiB,YAAjB,EAA8BE,0BAA9B;AACAtD,YAAY,CAACoD,GAAb,CAAiB,WAAjB,EAA6BG,yBAA7B;AACAvD,YAAY,CAACoD,GAAb,CAAiB,WAAjB,EAA6BI,oBAA7B",
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\photos\\",
      "sourcesContent": [
        "import express from \"express\";\r\nimport {\r\n    showphotos,\r\n    newPosts,\r\n    Addcomment,\r\n    newBid,\r\n    AddLike,\r\n    sharing,\r\n    userUploadedPhotos,\r\n    deletePost,\r\n    showphotosprofile,\r\n    homePagePost,\r\n}\r\n\r\nfrom './photos.controller'\r\nimport multer from 'multer';\r\nimport path from 'path';\r\nimport fs from 'fs';\r\nimport jwt from 'jsonwebtoken';\r\nimport configKey from '../../config'\r\nimport {Users} from '../users'\r\nimport { photosList } from \"./photos.modal\";\r\nimport MimeNode from \"nodemailer/lib/mime-node\";\r\n\r\nexport const photosRouter = express.Router();\r\n\r\nvar postStorage = multer.diskStorage({\r\n    destination: async function(req,file,cb){\r\n        \r\n        const postuploadDir = path.join(__dirname,'..','..','public','post');\r\n        if(fs.existsSync(postuploadDir)){\r\n            cb(null,postuploadDir)\r\n        }\r\n        else{\r\n            fs.mkdirSync(postuploadDir)\r\n            cb(null,postuploadDir)\r\n        }\r\n    },\r\n\r\n    filename:async function(req,file,cb){\r\n        const decoded = await jwt.verify(req.headers.token, configKey.secrets.JWT_SECRET);\r\n        const data = await Users.findOne({emailId:decoded.sub})\r\n\r\n        cb(null,data._id+\"_\"+Date.now()+\"_\"+file.originalname)\r\n    }\r\n\r\n})\r\n\r\nconst uploadPostImg = multer ({\r\n    storage:postStorage,\r\n    fileFilter:function(req,file,cb){\r\n        const fileType = /jpeg|jpg|png|gif|mp4|/;\r\n        const extension = file.originalname.substring(file.originalname.lastIndexOf('.') + 1);\r\n        const mimetype = fileType.test(file.mimetype);\r\n        \r\n        if(mimetype && extension){\r\n            return cb(null,true);\r\n        }else{\r\n            cb('Error:you can upload only Image file');\r\n        }\r\n\r\n    }\r\n})\r\n\r\nphotosRouter.post('/newPosts',uploadPostImg.array('Url',12),newPosts)\r\nphotosRouter.post('/comment',Addcomment)\r\nphotosRouter.post(\"/bid\",newBid)\r\nphotosRouter.post(\"/like\",AddLike)\r\nphotosRouter.post(\"/share\",sharing)\r\nphotosRouter.post(\"/delete\",deletePost)\r\nphotosRouter.get(\"/show\",showphotos)\r\nphotosRouter.get(\"/userPhoto\",userUploadedPhotos)\r\nphotosRouter.get(\"/showpost\",showphotosprofile)\r\nphotosRouter.get(\"/homePost\",homePagePost)"
      ]
    },
    "sourceType": "script",
    "mtime": 1597922544997
  },
  "{\"sourceRoot\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\photos\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"filename\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\photos\\\\photos.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\photos\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\code\\dds\\social-share-backend-nikund",
      "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\photos\\photos.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\code\\dds\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\code\\dds\\social-share-backend-nikund\\api\\photos\\photos.controller.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\photos\\photos.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\photos\\",
        "sourceFileName": "photos.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.homePagePost = exports.deletePost = exports.userUploadedPhotos = exports.sharing = exports.AddLike = exports.newBid = exports.Addcomment = exports.newPosts = exports.showphotosprofile = exports.showphotos = void 0;\n\nvar _photos = require(\"./photos.modal\");\n\nvar _user = require(\"../users/user.modal\");\n\nvar _friend = require(\"../Friends/friend.modal\");\n\nvar _notification = require(\"../notification/notification.modal\");\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _config = _interopRequireDefault(require(\"../../config\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// import { photosRouter } from './photos.restRoute';\n// import { isValidObjectId } from 'mongoose';\nfunction fname(_x) {\n  return _fname.apply(this, arguments);\n} //----------------------------------------------------showphotos\n\n\nfunction _fname() {\n  _fname = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(data) {\n    var usernotification;\n    return regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _context12.next = 2;\n            return _notification.notificationList.findOne({\n              userId: data\n            });\n\n          case 2:\n            usernotification = _context12.sent;\n\n            if (usernotification) {\n              _context12.next = 6;\n              break;\n            }\n\n            _context12.next = 6;\n            return _notification.notificationList.create({\n              userId: data,\n              notificaton: []\n            });\n\n          case 6:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12);\n  }));\n  return _fname.apply(this, arguments);\n}\n\nvar showphotos = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var decoded, data, userId, postData;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 3:\n            decoded = _context.sent;\n            _context.next = 6;\n            return _user.Users.findOne({\n              emailId: decoded.sub\n            });\n\n          case 6:\n            data = _context.sent;\n            userId = data._id;\n            _context.next = 10;\n            return _photos.photosList.find({\n              userId: userId\n            });\n\n          case 10:\n            postData = _context.sent;\n\n            if (!postData) {\n              console.log(\"post data not found\");\n            } else {\n              res.send(postData.reverse());\n            }\n\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context.t0.message\n            });\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 14]]);\n  }));\n\n  return function showphotos(_x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.showphotos = showphotos;\n\nvar showphotosprofile = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var userId, postData;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            userId = req.query.id;\n            _context2.next = 4;\n            return _photos.photosList.find({\n              userId: userId\n            });\n\n          case 4:\n            postData = _context2.sent;\n\n            if (!postData) {\n              console.log(\"post data not found\");\n            } else {\n              res.send(postData.reverse());\n            }\n\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context2.t0.message\n            });\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 8]]);\n  }));\n\n  return function showphotosprofile(_x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}(); //-------------------------------------------------- add new post\n\n\nexports.showphotosprofile = showphotosprofile;\n\nvar newPosts = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var _req$body, location, description, askingPrice, category, imgFilesArray, img, decoded, data, userId, highBid, now, friendData, fList, i, usernotification;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            // console.log(req.files)\n            _req$body = req.body, location = _req$body.location, description = _req$body.description, askingPrice = _req$body.askingPrice, category = _req$body.category;\n            imgFilesArray = [];\n            img = req.files;\n            img.forEach(function (element) {\n              // console.log(element.filename)\n              var Ur = \"http://localhost:8000/api/photos/\" + element.filename;\n              imgFilesArray.push(Ur);\n            });\n            console.log(imgFilesArray);\n            _context3.next = 8;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 8:\n            decoded = _context3.sent;\n            _context3.next = 11;\n            return _user.Users.findOne({\n              emailId: decoded.sub\n            });\n\n          case 11:\n            data = _context3.sent;\n            userId = data._id; // const userId =req.body.userId\n\n            highBid = 0;\n            now = new Date();\n            _context3.next = 17;\n            return _photos.photosList.create({\n              userId: userId,\n              location: location,\n              description: description,\n              askingPrice: askingPrice,\n              category: category,\n              highBid: highBid,\n              imageUrl: imgFilesArray\n            });\n\n          case 17:\n            _context3.next = 19;\n            return _friend.FriendList.findOne({\n              userId: userId\n            });\n\n          case 19:\n            friendData = _context3.sent;\n\n            if (!friendData) {\n              _context3.next = 36;\n              break;\n            }\n\n            fList = friendData.friendList; // console.log(fList);\n            // console.log(fList.length);\n\n            i = 0;\n\n          case 23:\n            if (!(i < fList.length)) {\n              _context3.next = 36;\n              break;\n            }\n\n            console.log();\n            _context3.next = 27;\n            return _notification.notificationList.findOne({\n              userId: fList[i].friendId\n            });\n\n          case 27:\n            usernotification = _context3.sent;\n\n            if (usernotification) {\n              _context3.next = 31;\n              break;\n            }\n\n            _context3.next = 31;\n            return _notification.notificationList.create({\n              userId: fList[i].friendId,\n              notificaton: []\n            });\n\n          case 31:\n            _context3.next = 33;\n            return _notification.notificationList.findOneAndUpdate({\n              userId: fList[i].friendId\n            }, {\n              $push: {\n                notification: {\n                  type: \"new post\",\n                  userPostId: userId,\n                  userprofile: data.profileImgURL,\n                  content: data.name + \"has created new post\",\n                  phostImg: imgFilesArray,\n                  date: now\n                }\n              }\n            });\n\n          case 33:\n            i++;\n            _context3.next = 23;\n            break;\n\n          case 36:\n            return _context3.abrupt(\"return\", res.status(201).send({\n              success: true,\n              message: \"post created successfully.\"\n            }));\n\n          case 39:\n            _context3.prev = 39;\n            _context3.t0 = _context3[\"catch\"](0);\n            res.status(422).send({\n              success: false,\n              message: _context3.t0.message\n            });\n\n          case 42:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 39]]);\n  }));\n\n  return function newPosts(_x6, _x7) {\n    return _ref3.apply(this, arguments);\n  };\n}(); //---------------------------------------------------- add comment\n\n\nexports.newPosts = newPosts;\n\nvar Addcomment = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var postId, newcomment, Pdata, decoded, data, userId, now, notNeed;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            postId = req.body.postId;\n            newcomment = req.body.newcomment;\n            _context4.next = 5;\n            return _photos.photosList.findOne({\n              _id: postId\n            });\n\n          case 5:\n            Pdata = _context4.sent;\n            _context4.next = 8;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 8:\n            decoded = _context4.sent;\n            _context4.next = 11;\n            return _user.Users.findOne({\n              emailId: decoded.sub\n            });\n\n          case 11:\n            data = _context4.sent;\n            userId = data._id;\n            console.log(Pdata.userId);\n            now = new Date();\n            _context4.next = 17;\n            return _photos.photosList.findByIdAndUpdate({\n              _id: postId\n            }, {\n              $push: {\n                comment: {\n                  _id: _mongoose[\"default\"].Types.ObjectId(),\n                  userId: userId,\n                  newcomment: newcomment,\n                  date: now\n                }\n              }\n            });\n\n          case 17:\n            fname(Pdata.userId);\n            _context4.next = 20;\n            return _notification.notificationList.findOne({\n              userId: Pdata.userId\n            });\n\n          case 20:\n            notNeed = _context4.sent;\n\n            if (!(userId != Pdata.userId)) {\n              _context4.next = 28;\n              break;\n            }\n\n            console.log(\"next step\");\n            _context4.next = 25;\n            return _notification.notificationList.findOneAndUpdate({\n              userId: Pdata.userId\n            }, {\n              $push: {\n                notification: {\n                  type: \"comment\",\n                  userCommentId: userId,\n                  userprofile: data.profileImgURL,\n                  content: data.name + ' make comment: \"' + newcomment + '\" on your phost',\n                  phostImg: Pdata.imageUrl,\n                  date: now\n                }\n              }\n            });\n\n          case 25:\n            console.log(\"last\");\n            _context4.next = 29;\n            break;\n\n          case 28:\n            console.log(\"self comment\");\n\n          case 29:\n            return _context4.abrupt(\"return\", res.status(201).send({\n              success: true,\n              message: \"comment successfully added\"\n            }));\n\n          case 32:\n            _context4.prev = 32;\n            _context4.t0 = _context4[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context4.t0.message\n            });\n\n          case 35:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 32]]);\n  }));\n\n  return function Addcomment(_x8, _x9) {\n    return _ref4.apply(this, arguments);\n  };\n}(); //------------------------------------------------------- add bid in post\n\n\nexports.Addcomment = Addcomment;\n\nvar newBid = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var notis, postId, _newBid, Pdata, decoded, data, userId, now, hbid, current;\n\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n\n            notis = /*#__PURE__*/function () {\n              var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n                var notNeed;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        fname(Pdata.userId);\n                        _context5.next = 3;\n                        return _notification.notificationList.findOne({\n                          userId: Pdata.userId\n                        });\n\n                      case 3:\n                        notNeed = _context5.sent;\n                        _context5.next = 6;\n                        return _notification.notificationList.findOneAndUpdate({\n                          userId: Pdata.userId\n                        }, {\n                          $push: {\n                            notification: {\n                              type: \"bid\",\n                              userBidId: userId,\n                              userprofile: data.profileImgURL,\n                              content: data.name + 'has bidded \"$' + _newBid + '\" on your post',\n                              phostImg: Pdata.imageUrl,\n                              date: now\n                            }\n                          }\n                        });\n\n                      case 6:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5);\n              }));\n\n              return function notis() {\n                return _ref6.apply(this, arguments);\n              };\n            }();\n\n            postId = req.body.postId;\n            _newBid = req.body.newBid;\n            _context6.next = 6;\n            return _photos.photosList.findOne({\n              _id: postId\n            });\n\n          case 6:\n            Pdata = _context6.sent;\n            _context6.next = 9;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 9:\n            decoded = _context6.sent;\n            _context6.next = 12;\n            return _user.Users.findOne({\n              emailId: decoded.sub\n            });\n\n          case 12:\n            data = _context6.sent;\n            userId = data._id;\n            now = new Date();\n            _context6.next = 17;\n            return _photos.photosList.findOne({\n              _id: postId\n            });\n\n          case 17:\n            hbid = _context6.sent;\n            current = hbid.highBid;\n\n            if (!(userId != Pdata.userId)) {\n              _context6.next = 34;\n              break;\n            }\n\n            if (!(current < _newBid)) {\n              _context6.next = 28;\n              break;\n            }\n\n            _context6.next = 23;\n            return _photos.photosList.findByIdAndUpdate({\n              _id: postId\n            }, {\n              $push: {\n                currentBid: {\n                  userId: userId,\n                  Bid: _newBid,\n                  date: now\n                }\n              }\n            });\n\n          case 23:\n            _context6.next = 25;\n            return _photos.photosList.findByIdAndUpdate({\n              _id: postId\n            }, {\n              highBid: _newBid\n            });\n\n          case 25:\n            notis();\n            _context6.next = 31;\n            break;\n\n          case 28:\n            _context6.next = 30;\n            return _photos.photosList.findByIdAndUpdate({\n              _id: postId\n            }, {\n              $push: {\n                currentBid: {\n                  userId: userId,\n                  Bid: _newBid,\n                  date: now\n                }\n              }\n            });\n\n          case 30:\n            notis();\n\n          case 31:\n            return _context6.abrupt(\"return\", res.status(201).send({\n              success: true,\n              message: \"bid added successfully\"\n            }));\n\n          case 34:\n            res.send(\"you can't big\");\n\n          case 35:\n            _context6.next = 40;\n            break;\n\n          case 37:\n            _context6.prev = 37;\n            _context6.t0 = _context6[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context6.t0.message\n            });\n\n          case 40:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[0, 37]]);\n  }));\n\n  return function newBid(_x10, _x11) {\n    return _ref5.apply(this, arguments);\n  };\n}(); //------------------------------------------------------------- like\n\n\nexports.newBid = newBid;\n\nvar AddLike = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n    var postId, Pdata, decoded, data, userId, now, postData, temp, notNeed;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.prev = 0;\n            postId = req.body.postId;\n            _context7.next = 4;\n            return _photos.photosList.findOne({\n              _id: postId\n            });\n\n          case 4:\n            Pdata = _context7.sent;\n            _context7.next = 7;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 7:\n            decoded = _context7.sent;\n            _context7.next = 10;\n            return _user.Users.findOne({\n              emailId: decoded.sub\n            });\n\n          case 10:\n            data = _context7.sent;\n            userId = data._id;\n            now = new Date();\n            _context7.next = 15;\n            return _photos.photosList.findOne({\n              _id: postId\n            });\n\n          case 15:\n            postData = _context7.sent;\n            temp = 0;\n            postData.like.forEach(function (element) {\n              if (element.userId = userId) {\n                temp = 1;\n              }\n            });\n\n            if (!(temp == 1)) {\n              _context7.next = 25;\n              break;\n            }\n\n            console.log(\"already LIKEED\");\n            _context7.next = 22;\n            return _photos.photosList.findByIdAndUpdate({\n              _id: postId\n            }, {\n              $pull: {\n                like: {\n                  userId: userId\n                }\n              }\n            });\n\n          case 22:\n            if (!(userId != Pdata.userId)) {\n              _context7.next = 25;\n              break;\n            }\n\n            _context7.next = 25;\n            return _notification.notificationList.findOneAndUpdate({\n              userId: Pdata.userId\n            }, {\n              $pull: {\n                notification: {\n                  userLikedId: userId\n                }\n              }\n            });\n\n          case 25:\n            if (!(temp == 0)) {\n              _context7.next = 39;\n              break;\n            }\n\n            console.log(\"like done\");\n            _context7.next = 29;\n            return _photos.photosList.findByIdAndUpdate({\n              _id: postId\n            }, {\n              $push: {\n                like: {\n                  userId: userId,\n                  date: now\n                }\n              }\n            });\n\n          case 29:\n            if (!(userId != Pdata.userId)) {\n              _context7.next = 38;\n              break;\n            }\n\n            fname(Pdata.userId);\n            _context7.next = 33;\n            return _notification.notificationList.findOne({\n              userId: Pdata.userId\n            });\n\n          case 33:\n            notNeed = _context7.sent;\n            _context7.next = 36;\n            return _notification.notificationList.findOneAndUpdate({\n              userId: Pdata.userId\n            }, {\n              $push: {\n                notification: {\n                  type: \"like\",\n                  userLikedId: userId,\n                  userprofile: data.profileImgURL,\n                  content: data.name + \" has liked your photo\",\n                  phostImg: Pdata.imageUrl,\n                  date: now\n                }\n              }\n            });\n\n          case 36:\n            _context7.next = 39;\n            break;\n\n          case 38:\n            console.log(\"self like\");\n\n          case 39:\n            return _context7.abrupt(\"return\", res.status(201).send({\n              success: true,\n              message: \" successfully added\"\n            }));\n\n          case 42:\n            _context7.prev = 42;\n            _context7.t0 = _context7[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context7.t0.message\n            });\n\n          case 45:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[0, 42]]);\n  }));\n\n  return function AddLike(_x12, _x13) {\n    return _ref7.apply(this, arguments);\n  };\n}(); //----------------------------------------------------------share\n\n\nexports.AddLike = AddLike;\n\nvar sharing = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(req, res) {\n    var postId, sharedUserId, Pdata, Rdata, decoded, data, userId, now, friendData, notNeed, notNeeded;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.prev = 0;\n            postId = req.body.postId;\n            sharedUserId = req.body.receiverId;\n            _context8.next = 5;\n            return _photos.photosList.findOne({\n              _id: postId\n            });\n\n          case 5:\n            Pdata = _context8.sent;\n            _context8.next = 8;\n            return _user.Users.findOne({\n              _id: sharedUserId\n            });\n\n          case 8:\n            Rdata = _context8.sent;\n            _context8.next = 11;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 11:\n            decoded = _context8.sent;\n            _context8.next = 14;\n            return _user.Users.findOne({\n              emailId: decoded.sub\n            });\n\n          case 14:\n            data = _context8.sent;\n            userId = data._id;\n            now = new Date();\n            _context8.next = 19;\n            return _friend.FriendList.findOne({\n              userId: userId\n            });\n\n          case 19:\n            friendData = _context8.sent;\n\n            if (!friendData) {\n              console.log(\"friend list not found\");\n            } else {\n              console.log(friendData.friendList);\n            }\n\n            _context8.next = 23;\n            return _photos.photosList.findByIdAndUpdate({\n              _id: postId\n            }, {\n              $push: {\n                share: {\n                  userId: userId,\n                  sharedUser: sharedUserId,\n                  date: now\n                }\n              }\n            });\n\n          case 23:\n            if (!(userId != Pdata.userId)) {\n              _context8.next = 32;\n              break;\n            }\n\n            fname(Pdata.userId);\n            _context8.next = 27;\n            return _notification.notificationList.findOne({\n              userId: Pdata.userId\n            });\n\n          case 27:\n            notNeed = _context8.sent;\n            _context8.next = 30;\n            return _notification.notificationList.findOneAndUpdate({\n              userId: Pdata.userId\n            }, {\n              $push: {\n                notification: {\n                  type: \"share\",\n                  usershareId: userId,\n                  receiver: Rdata._id,\n                  content: data.name + ' make share your post with: \"' + Rdata.name + '\"',\n                  phostImg: Pdata.imageUrl,\n                  date: now\n                }\n              }\n            });\n\n          case 30:\n            _context8.next = 33;\n            break;\n\n          case 32:\n            console.log(\"self share\");\n\n          case 33:\n            fname(Pdata.sharedUserId);\n            _context8.next = 36;\n            return _notification.notificationList.findOne({\n              userId: sharedUserId\n            });\n\n          case 36:\n            notNeeded = _context8.sent;\n            _context8.next = 39;\n            return _notification.notificationList.findOneAndUpdate({\n              userId: Rdata._id\n            }, {\n              $push: {\n                notification: {\n                  type: \"share\",\n                  usershareId: userId,\n                  postId: Pdata._id,\n                  content: data.name + \" recommend to see this post\",\n                  phostImg: Pdata.imageUrl,\n                  date: now\n                }\n              }\n            });\n\n          case 39:\n            return _context8.abrupt(\"return\", res.status(201).send({\n              success: true,\n              message: \"share successfully\"\n            }));\n\n          case 42:\n            _context8.prev = 42;\n            _context8.t0 = _context8[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context8.t0.message\n            });\n\n          case 45:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[0, 42]]);\n  }));\n\n  return function sharing(_x14, _x15) {\n    return _ref8.apply(this, arguments);\n  };\n}(); //------------------------------------------------------------------user uploaded photos\n\n\nexports.sharing = sharing;\n\nvar userUploadedPhotos = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(req, res) {\n    var decoded, data, userId, postData;\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.prev = 0;\n            _context9.next = 3;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 3:\n            decoded = _context9.sent;\n            _context9.next = 6;\n            return _user.Users.findOne({\n              emailId: decoded.sub\n            });\n\n          case 6:\n            data = _context9.sent;\n            userId = data._id;\n            _context9.next = 10;\n            return _photos.photosList.find({\n              userId: userId\n            });\n\n          case 10:\n            postData = _context9.sent;\n\n            if (!postData) {\n              console.log(\"post data not found\");\n            } else {\n              postData.forEach(function (element) {\n                console.log(element.category);\n                console.log(element.imageUrl);\n              });\n            }\n\n            return _context9.abrupt(\"return\", res.status(201).send({\n              success: true,\n              message: \"successfully.\"\n            }));\n\n          case 15:\n            _context9.prev = 15;\n            _context9.t0 = _context9[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context9.t0.message\n            });\n\n          case 18:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9, null, [[0, 15]]);\n  }));\n\n  return function userUploadedPhotos(_x16, _x17) {\n    return _ref9.apply(this, arguments);\n  };\n}(); //------------------------------------------------------------delete post\n\n\nexports.userUploadedPhotos = userUploadedPhotos;\n\nvar deletePost = /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(req, res) {\n    var decoded, user, userId, postId, post;\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.prev = 0;\n            _context10.next = 3;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 3:\n            decoded = _context10.sent;\n            _context10.next = 6;\n            return _user.Users.findOne({\n              emailId: decoded.sub\n            });\n\n          case 6:\n            user = _context10.sent;\n            userId = user._id;\n            postId = req.body.postId;\n            _context10.next = 11;\n            return _photos.photosList.findById({\n              _id: postId\n            });\n\n          case 11:\n            post = _context10.sent;\n\n            if (!post) {\n              _context10.next = 21;\n              break;\n            }\n\n            if (!(post.userId == userId)) {\n              _context10.next = 18;\n              break;\n            }\n\n            _context10.next = 16;\n            return _photos.photosList.deleteOne({\n              _id: postId\n            });\n\n          case 16:\n            _context10.next = 19;\n            break;\n\n          case 18:\n            console.log(\"you can't delete post\");\n\n          case 19:\n            _context10.next = 22;\n            break;\n\n          case 21:\n            console.log(\"post not found\");\n\n          case 22:\n            res.status(201).send({\n              success: true,\n              message: \"post remove successsully\"\n            });\n            _context10.next = 28;\n            break;\n\n          case 25:\n            _context10.prev = 25;\n            _context10.t0 = _context10[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context10.t0.message\n            });\n\n          case 28:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10, null, [[0, 25]]);\n  }));\n\n  return function deletePost(_x18, _x19) {\n    return _ref10.apply(this, arguments);\n  };\n}(); //-------------------------------------------------------home page post\n\n\nexports.deletePost = deletePost;\n\nvar homePagePost = /*#__PURE__*/function () {\n  var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(req, res) {\n    var decoded, user, userId, homePost, Friend, fList, i, post, j, userPost, sortedpost;\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.prev = 0;\n            _context11.next = 3;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 3:\n            decoded = _context11.sent;\n            _context11.next = 6;\n            return _user.Users.findOne({\n              emailId: decoded.sub\n            });\n\n          case 6:\n            user = _context11.sent;\n            userId = user._id;\n            console.log(userId);\n            homePost = [];\n            _context11.next = 12;\n            return _friend.FriendList.findOne({\n              userId: userId\n            });\n\n          case 12:\n            Friend = _context11.sent;\n            fList = Friend.friendList;\n\n            if (Friend == null) {\n              res.status(201).send({\n                success: true,\n                message: \"You are not any friend\"\n              });\n            }\n\n            console.log(fList);\n            i = 0;\n\n          case 17:\n            if (!(i < fList.length)) {\n              _context11.next = 26;\n              break;\n            }\n\n            console.log(fList[i].friendId);\n            _context11.next = 21;\n            return _photos.photosList.find({\n              userId: fList[i].friendId\n            });\n\n          case 21:\n            post = _context11.sent;\n\n            for (j = 0; j < post.length; j++) {\n              homePost.push(post[j]);\n            }\n\n          case 23:\n            i++;\n            _context11.next = 17;\n            break;\n\n          case 26:\n            _context11.next = 28;\n            return _photos.photosList.find({\n              userId: userId\n            });\n\n          case 28:\n            userPost = _context11.sent;\n\n            for (j = 0; j < userPost.length; j++) {\n              homePost.push(userPost[j]);\n            }\n\n            sortedpost = homePost.sort(function (var1, var2) {\n              var a = new Date(var1.createdAt),\n                  b = new Date(var2.createdAt);\n              if (a > b) return -1;\n              if (a < b) return 1;\n              return 0;\n            });\n            console.log(sortedpost);\n            return _context11.abrupt(\"return\", res.status(201).send({\n              success: true,\n              message: \"successfully.\",\n              list: sortedpost\n            }));\n\n          case 35:\n            _context11.prev = 35;\n            _context11.t0 = _context11[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context11.t0.message\n            });\n\n          case 38:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11, null, [[0, 35]]);\n  }));\n\n  return function homePagePost(_x20, _x21) {\n    return _ref11.apply(this, arguments);\n  };\n}();\n\nexports.homePagePost = homePagePost;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "photos.controller.js"
      ],
      "names": [
        "fname",
        "data",
        "notificationList",
        "findOne",
        "userId",
        "usernotification",
        "create",
        "notificaton",
        "showphotos",
        "req",
        "res",
        "jwt",
        "verify",
        "headers",
        "token",
        "configKey",
        "secrets",
        "JWT_SECRET",
        "decoded",
        "Users",
        "emailId",
        "sub",
        "_id",
        "photosList",
        "find",
        "postData",
        "console",
        "log",
        "send",
        "reverse",
        "status",
        "success",
        "message",
        "showphotosprofile",
        "query",
        "id",
        "newPosts",
        "body",
        "location",
        "description",
        "askingPrice",
        "category",
        "imgFilesArray",
        "img",
        "files",
        "forEach",
        "element",
        "Ur",
        "filename",
        "push",
        "highBid",
        "now",
        "Date",
        "imageUrl",
        "FriendList",
        "friendData",
        "fList",
        "friendList",
        "i",
        "length",
        "friendId",
        "findOneAndUpdate",
        "$push",
        "notification",
        "type",
        "userPostId",
        "userprofile",
        "profileImgURL",
        "content",
        "name",
        "phostImg",
        "date",
        "Addcomment",
        "postId",
        "newcomment",
        "Pdata",
        "findByIdAndUpdate",
        "comment",
        "mongoose",
        "Types",
        "ObjectId",
        "notNeed",
        "userCommentId",
        "newBid",
        "notis",
        "userBidId",
        "hbid",
        "current",
        "currentBid",
        "Bid",
        "AddLike",
        "temp",
        "like",
        "$pull",
        "userLikedId",
        "sharing",
        "sharedUserId",
        "receiverId",
        "Rdata",
        "share",
        "sharedUser",
        "usershareId",
        "receiver",
        "notNeeded",
        "userUploadedPhotos",
        "deletePost",
        "user",
        "findById",
        "post",
        "deleteOne",
        "homePagePost",
        "homePost",
        "Friend",
        "j",
        "userPost",
        "sortedpost",
        "sort",
        "var1",
        "var2",
        "a",
        "createdAt",
        "b",
        "list"
      ],
      "mappings": "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",
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\photos\\",
      "sourcesContent": [
        "import { photosList } from \"./photos.modal\";\r\nimport { Users } from \"../users/user.modal\";\r\nimport { FriendList } from \"../Friends/friend.modal\";\r\nimport { notificationList } from \"../notification/notification.modal\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport configKey from \"../../config\";\r\nimport mongoose from \"mongoose\";\r\n// import { photosRouter } from './photos.restRoute';\r\n// import { isValidObjectId } from 'mongoose';\r\n\r\nasync function fname(data) {\r\n  const usernotification = await notificationList.findOne({ userId: data });\r\n  if (!usernotification) {\r\n    await notificationList.create({\r\n      userId: data,\r\n      notificaton: [],\r\n    });\r\n  }\r\n}\r\n//----------------------------------------------------showphotos\r\nexport const showphotos = async (req, res) => {\r\n  try {\r\n    const decoded = await jwt.verify(\r\n      req.headers.token,\r\n      configKey.secrets.JWT_SECRET\r\n    );\r\n    const data = await Users.findOne({ emailId: decoded.sub });\r\n    const userId = data._id;\r\n\r\n    const postData = await photosList.find({ userId: userId });\r\n    if (!postData) {\r\n      console.log(\"post data not found\");\r\n    } else {\r\n      res.send(postData.reverse());\r\n    }\r\n  } catch (err) {\r\n    res.status(401).send({\r\n      success: false,\r\n      message: err.message,\r\n    });\r\n  }\r\n};\r\nexport const showphotosprofile = async (req, res) => {\r\n  try {\r\n    const userId = req.query.id;\r\n\r\n    const postData = await photosList.find({ userId: userId });\r\n    if (!postData) {\r\n      console.log(\"post data not found\");\r\n    } else {\r\n      res.send(postData.reverse());\r\n    }\r\n  } catch (err) {\r\n    res.status(401).send({\r\n      success: false,\r\n      message: err.message,\r\n    });\r\n  }\r\n};\r\n\r\n//-------------------------------------------------- add new post\r\n\r\nexport const newPosts = async (req, res) => {\r\n  try {\r\n    // console.log(req.files)\r\n    const { location, description, askingPrice, category } = req.body;\r\n    var imgFilesArray = [];\r\n    const img = req.files;\r\n    img.forEach((element) => {\r\n      // console.log(element.filename)\r\n      var Ur = \"http://localhost:8000/api/photos/\" + element.filename;\r\n      imgFilesArray.push(Ur);\r\n    });\r\n    console.log(imgFilesArray);\r\n\r\n    const decoded = await jwt.verify(\r\n      req.headers.token,\r\n      configKey.secrets.JWT_SECRET\r\n    );\r\n    const data = await Users.findOne({ emailId: decoded.sub });\r\n    const userId = data._id;\r\n    // const userId =req.body.userId\r\n    var highBid = 0;\r\n    var now = new Date();\r\n\r\n    await photosList.create({\r\n      userId,\r\n      location,\r\n      description,\r\n      askingPrice,\r\n      category,\r\n      highBid,\r\n      imageUrl: imgFilesArray,\r\n    });\r\n\r\n    const friendData = await FriendList.findOne({ userId: userId });\r\n    if (friendData) {\r\n      const fList = friendData.friendList;\r\n      // console.log(fList);\r\n      // console.log(fList.length);\r\n\r\n      for (var i = 0; i < fList.length; i++) {\r\n        console.log();\r\n        const usernotification = await notificationList.findOne({\r\n          userId: fList[i].friendId,\r\n        });\r\n        if (!usernotification) {\r\n          await notificationList.create({\r\n            userId: fList[i].friendId,\r\n            notificaton: [],\r\n          });\r\n        }\r\n        await notificationList.findOneAndUpdate(\r\n          { userId: fList[i].friendId },\r\n          {\r\n            $push: {\r\n              notification: {\r\n                type: \"new post\",\r\n                userPostId: userId,\r\n                userprofile: data.profileImgURL,\r\n                content: data.name + \"has created new post\",\r\n                phostImg: imgFilesArray,\r\n                date: now,\r\n              },\r\n            },\r\n          }\r\n        );\r\n      }\r\n    }\r\n    return res.status(201).send({\r\n      success: true,\r\n      message: \"post created successfully.\",\r\n    });\r\n  } catch (err) {\r\n    res.status(422).send({ success: false, message: err.message });\r\n  }\r\n};\r\n\r\n//---------------------------------------------------- add comment\r\n\r\nexport const Addcomment = async (req, res) => {\r\n  try {\r\n    const postId = req.body.postId;\r\n    const newcomment = req.body.newcomment;\r\n\r\n    const Pdata = await photosList.findOne({ _id: postId });\r\n    const decoded = await jwt.verify(\r\n      req.headers.token,\r\n      configKey.secrets.JWT_SECRET\r\n    );\r\n    const data = await Users.findOne({ emailId: decoded.sub });\r\n    const userId = data._id;\r\n\r\n    console.log(Pdata.userId);\r\n    var now = new Date();\r\n\r\n    await photosList.findByIdAndUpdate(\r\n      { _id: postId },\r\n      {\r\n        $push: {\r\n          comment: {\r\n            _id: mongoose.Types.ObjectId(),\r\n            userId: userId,\r\n            newcomment: newcomment,\r\n            date: now,\r\n          },\r\n        },\r\n      }\r\n    );\r\n\r\n    fname(Pdata.userId);\r\n    const notNeed = await notificationList.findOne({ userId: Pdata.userId });\r\n    if (userId != Pdata.userId) {\r\n      console.log(\"next step\");\r\n      await notificationList.findOneAndUpdate(\r\n        { userId: Pdata.userId },\r\n        {\r\n          $push: {\r\n            notification: {\r\n              type: \"comment\",\r\n              userCommentId: userId,\r\n              userprofile: data.profileImgURL,\r\n              content:\r\n                data.name + ' make comment: \"' + newcomment + '\" on your phost',\r\n              phostImg: Pdata.imageUrl,\r\n              date: now,\r\n            },\r\n          },\r\n        }\r\n      );\r\n      console.log(\"last\");\r\n    } else {\r\n      console.log(\"self comment\");\r\n    }\r\n\r\n    // const total = await photosList.findOne({_id:postId})\r\n    // console.log(total.comment.length)\r\n    // await photosList.findByIdAndUpdate({_id:postId},{\r\n    //     $set : {\"totalComment\":total.comment.length} })\r\n\r\n    return res.status(201).send({\r\n      success: true,\r\n      message: \"comment successfully added\",\r\n    });\r\n  } catch (err) {\r\n    res.status(401).send({\r\n      success: false,\r\n      message: err.message,\r\n    });\r\n  }\r\n};\r\n\r\n//------------------------------------------------------- add bid in post\r\n\r\nexport const newBid = async (req, res) => {\r\n  try {\r\n    const postId = req.body.postId;\r\n    const newBid = req.body.newBid;\r\n\r\n    const Pdata = await photosList.findOne({ _id: postId });\r\n    const decoded = await jwt.verify(\r\n      req.headers.token,\r\n      configKey.secrets.JWT_SECRET\r\n    );\r\n    const data = await Users.findOne({ emailId: decoded.sub });\r\n    const userId = data._id;\r\n    var now = new Date();\r\n\r\n    const hbid = await photosList.findOne({ _id: postId });\r\n    var current = hbid.highBid;\r\n\r\n    async function notis() {\r\n      fname(Pdata.userId);\r\n      const notNeed = await notificationList.findOne({ userId: Pdata.userId });\r\n      await notificationList.findOneAndUpdate(\r\n        { userId: Pdata.userId },\r\n        {\r\n          $push: {\r\n            notification: {\r\n              type: \"bid\",\r\n              userBidId: userId,\r\n              userprofile: data.profileImgURL,\r\n              content: data.name + 'has bidded \"$' + newBid + '\" on your post',\r\n              phostImg: Pdata.imageUrl,\r\n              date: now,\r\n            },\r\n          },\r\n        }\r\n      );\r\n    }\r\n\r\n    if (userId != Pdata.userId) {\r\n      if (current < newBid) {\r\n        await photosList.findByIdAndUpdate(\r\n          { _id: postId },\r\n          {\r\n            $push: { currentBid: { userId: userId, Bid: newBid, date: now } },\r\n          }\r\n        );\r\n        await photosList.findByIdAndUpdate(\r\n          { _id: postId },\r\n          { highBid: newBid }\r\n        );\r\n        notis();\r\n      } else {\r\n        await photosList.findByIdAndUpdate(\r\n          { _id: postId },\r\n          {\r\n            $push: { currentBid: { userId: userId, Bid: newBid, date: now } },\r\n          }\r\n        );\r\n        notis();\r\n      }\r\n      return res.status(201).send({\r\n        success: true,\r\n        message: \"bid added successfully\",\r\n      });\r\n    } else {\r\n      res.send(\"you can't big\");\r\n    }\r\n  } catch (err) {\r\n    res.status(401).send({\r\n      success: false,\r\n      message: err.message,\r\n    });\r\n  }\r\n};\r\n\r\n//------------------------------------------------------------- like\r\n\r\nexport const AddLike = async (req, res) => {\r\n  try {\r\n    const postId = req.body.postId;\r\n    const Pdata = await photosList.findOne({ _id: postId });\r\n\r\n    const decoded = await jwt.verify(\r\n      req.headers.token,\r\n      configKey.secrets.JWT_SECRET\r\n    );\r\n    const data = await Users.findOne({ emailId: decoded.sub });\r\n    const userId = data._id;\r\n\r\n    var now = new Date();\r\n    const postData = await photosList.findOne({ _id: postId });\r\n\r\n    var temp = 0;\r\n    postData.like.forEach((element) => {\r\n      if ((element.userId = userId)) {\r\n        temp = 1;\r\n      }\r\n    });\r\n    if (temp == 1) {\r\n      console.log(\"already LIKEED\");\r\n      await photosList.findByIdAndUpdate(\r\n        { _id: postId },\r\n        {\r\n          $pull: { like: { userId: userId } },\r\n        }\r\n      );\r\n      if (userId != Pdata.userId) {\r\n        await notificationList.findOneAndUpdate(\r\n          { userId: Pdata.userId },\r\n          {\r\n            $pull: { notification: { userLikedId: userId } },\r\n          }\r\n        );\r\n      }\r\n    }\r\n    if (temp == 0) {\r\n      console.log(\"like done\");\r\n      await photosList.findByIdAndUpdate(\r\n        { _id: postId },\r\n        {\r\n          $push: { like: { userId: userId, date: now } },\r\n        }\r\n      );\r\n      if (userId != Pdata.userId) {\r\n        fname(Pdata.userId);\r\n        const notNeed = await notificationList.findOne({\r\n          userId: Pdata.userId,\r\n        });\r\n        await notificationList.findOneAndUpdate(\r\n          { userId: Pdata.userId },\r\n          {\r\n            $push: {\r\n              notification: {\r\n                type: \"like\",\r\n                userLikedId: userId,\r\n                userprofile: data.profileImgURL,\r\n                content: data.name + \" has liked your photo\",\r\n                phostImg: Pdata.imageUrl,\r\n                date: now,\r\n              },\r\n            },\r\n          }\r\n        );\r\n      } else {\r\n        console.log(\"self like\");\r\n      }\r\n    }\r\n    return res.status(201).send({\r\n      success: true,\r\n      message: \" successfully added\",\r\n    });\r\n\r\n    // const total = await photosList.findOne({_id:postId})\r\n    // console.log(total.like.length)\r\n  } catch (err) {\r\n    res.status(401).send({\r\n      success: false,\r\n      message: err.message,\r\n    });\r\n  }\r\n};\r\n\r\n//----------------------------------------------------------share\r\nexport const sharing = async (req, res) => {\r\n  try {\r\n    const postId = req.body.postId;\r\n    const sharedUserId = req.body.receiverId;\r\n\r\n    const Pdata = await photosList.findOne({ _id: postId });\r\n    const Rdata = await Users.findOne({ _id: sharedUserId });\r\n    const decoded = await jwt.verify(\r\n      req.headers.token,\r\n      configKey.secrets.JWT_SECRET\r\n    );\r\n    const data = await Users.findOne({ emailId: decoded.sub });\r\n    const userId = data._id;\r\n    var now = new Date();\r\n\r\n    const friendData = await FriendList.findOne({ userId: userId });\r\n    if (!friendData) {\r\n      console.log(\"friend list not found\");\r\n    } else {\r\n      console.log(friendData.friendList);\r\n    }\r\n\r\n    await photosList.findByIdAndUpdate(\r\n      { _id: postId },\r\n      {\r\n        $push: {\r\n          share: { userId: userId, sharedUser: sharedUserId, date: now },\r\n        },\r\n      }\r\n    );\r\n    if (userId != Pdata.userId) {\r\n      fname(Pdata.userId);\r\n      const notNeed = await notificationList.findOne({ userId: Pdata.userId });\r\n      await notificationList.findOneAndUpdate(\r\n        { userId: Pdata.userId },\r\n        {\r\n          $push: {\r\n            notification: {\r\n              type: \"share\",\r\n              usershareId: userId,\r\n              receiver: Rdata._id,\r\n              content:\r\n                data.name + ' make share your post with: \"' + Rdata.name + '\"',\r\n              phostImg: Pdata.imageUrl,\r\n              date: now,\r\n            },\r\n          },\r\n        }\r\n      );\r\n    } else {\r\n      console.log(\"self share\");\r\n    }\r\n    fname(Pdata.sharedUserId);\r\n    const notNeeded = await notificationList.findOne({ userId: sharedUserId });\r\n    await notificationList.findOneAndUpdate(\r\n      { userId: Rdata._id },\r\n      {\r\n        $push: {\r\n          notification: {\r\n            type: \"share\",\r\n            usershareId: userId,\r\n            postId: Pdata._id,\r\n            content: data.name + \" recommend to see this post\",\r\n            phostImg: Pdata.imageUrl,\r\n            date: now,\r\n          },\r\n        },\r\n      }\r\n    );\r\n    // const total = await photosList.findOne({_id:postId})\r\n    // console.log(total.share.length)\r\n    return res.status(201).send({\r\n      success: true,\r\n      message: \"share successfully\",\r\n    });\r\n  } catch (err) {\r\n    res.status(401).send({\r\n      success: false,\r\n      message: err.message,\r\n    });\r\n  }\r\n};\r\n\r\n//------------------------------------------------------------------user uploaded photos\r\nexport const userUploadedPhotos = async (req, res) => {\r\n  try {\r\n    const decoded = await jwt.verify(\r\n      req.headers.token,\r\n      configKey.secrets.JWT_SECRET\r\n    );\r\n    const data = await Users.findOne({ emailId: decoded.sub });\r\n    const userId = data._id;\r\n\r\n    const postData = await photosList.find({ userId: userId });\r\n    if (!postData) {\r\n      console.log(\"post data not found\");\r\n    } else {\r\n      postData.forEach((element) => {\r\n        console.log(element.category);\r\n        console.log(element.imageUrl);\r\n      });\r\n    }\r\n    return res.status(201).send({\r\n      success: true,\r\n      message: \"successfully.\",\r\n    });\r\n  } catch (err) {\r\n    res.status(401).send({\r\n      success: false,\r\n      message: err.message,\r\n    });\r\n  }\r\n};\r\n\r\n//------------------------------------------------------------delete post\r\nexport const deletePost = async (req, res) => {\r\n  try {\r\n    const decoded = await jwt.verify(\r\n      req.headers.token,\r\n      configKey.secrets.JWT_SECRET\r\n    );\r\n    const user = await Users.findOne({ emailId: decoded.sub });\r\n    const userId = user._id;\r\n    const { postId } = req.body;\r\n    const post = await photosList.findById({ _id: postId });\r\n    if (post) {\r\n      if (post.userId == userId) {\r\n        await photosList.deleteOne({ _id: postId });\r\n      } else {\r\n        console.log(\"you can't delete post\");\r\n      }\r\n    } else {\r\n      console.log(\"post not found\");\r\n    }\r\n\r\n    res.status(201).send({\r\n      success: true,\r\n      message: \"post remove successsully\",\r\n    });\r\n  } catch (err) {\r\n    res.status(401).send({\r\n      success: false,\r\n      message: err.message,\r\n    });\r\n  }\r\n};\r\n\r\n//-------------------------------------------------------home page post\r\n\r\nexport const homePagePost = async (req, res) => {\r\n  try {\r\n    const decoded = await jwt.verify(\r\n      req.headers.token,\r\n      configKey.secrets.JWT_SECRET\r\n    );\r\n    const user = await Users.findOne({ emailId: decoded.sub });\r\n    const userId = user._id;\r\n    console.log(userId);\r\n    var homePost = [];\r\n    const Friend = await FriendList.findOne({ userId: userId });\r\n    var fList = Friend.friendList;\r\n    if (Friend == null) {\r\n      res.status(201).send({\r\n        success: true,\r\n        message: \"You are not any friend\",\r\n      });\r\n    }\r\n\r\n    console.log(fList);\r\n    for (var i = 0; i < fList.length; i++) {\r\n      console.log(fList[i].friendId);\r\n\r\n      var post = await photosList.find({ userId: fList[i].friendId });\r\n      for (var j = 0; j < post.length; j++) {\r\n        homePost.push(post[j]);\r\n      }\r\n    }\r\n    var userPost = await photosList.find({ userId: userId });\r\n    for (var j = 0; j < userPost.length; j++) {\r\n      homePost.push(userPost[j]);\r\n    }\r\n\r\n    var sortedpost = homePost.sort(function (var1, var2) {\r\n      var a = new Date(var1.createdAt),\r\n        b = new Date(var2.createdAt);\r\n      if (a > b) return -1;\r\n      if (a < b) return 1;\r\n\r\n      return 0;\r\n    });\r\n    console.log(sortedpost);\r\n\r\n    return res.status(201).send({\r\n      success: true,\r\n      message: \"successfully.\",\r\n      list: sortedpost,\r\n    });\r\n  } catch (err) {\r\n    res.status(401).send({\r\n      success: false,\r\n      message: err.message,\r\n    });\r\n  }\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597300129418
  },
  "{\"sourceRoot\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\notification\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"filename\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\notification\\\\notification.modal.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\notification\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\code\\dds\\social-share-backend-nikund",
      "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\notification\\notification.modal.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\code\\dds\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\code\\dds\\social-share-backend-nikund\\api\\notification\\notification.modal.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\notification\\notification.modal.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\notification\\",
        "sourceFileName": "notification.modal.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.notificationList = void 0;\n\nvar _mongoose = _interopRequireWildcard(require(\"mongoose\"));\n\nvar _mongooseTimestamp = _interopRequireDefault(require(\"mongoose-timestamp\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar notificationSchema = (0, _mongoose.Schema)({\n  userId: String,\n  notification: Array\n}, {\n  timestamps: {\n    createdAt: 'created_at'\n  }\n});\n\nvar notificationList = _mongoose[\"default\"].model('notificationDocument', notificationSchema);\n\nexports.notificationList = notificationList;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGlmaWNhdGlvbi5tb2RhbC5qcyJdLCJuYW1lcyI6WyJub3RpZmljYXRpb25TY2hlbWEiLCJ1c2VySWQiLCJTdHJpbmciLCJub3RpZmljYXRpb24iLCJBcnJheSIsInRpbWVzdGFtcHMiLCJjcmVhdGVkQXQiLCJub3RpZmljYXRpb25MaXN0IiwibW9uZ29vc2UiLCJtb2RlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7Ozs7Ozs7O0FBRUEsSUFBTUEsa0JBQWtCLEdBQUcsc0JBQU87QUFDOUJDLEVBQUFBLE1BQU0sRUFBQ0MsTUFEdUI7QUFFOUJDLEVBQUFBLFlBQVksRUFBQ0M7QUFGaUIsQ0FBUCxFQUd4QjtBQUFFQyxFQUFBQSxVQUFVLEVBQUU7QUFBQ0MsSUFBQUEsU0FBUyxFQUFDO0FBQVg7QUFBZCxDQUh3QixDQUEzQjs7QUFLTyxJQUFNQyxnQkFBZ0IsR0FBR0MscUJBQVNDLEtBQVQsQ0FBZSxzQkFBZixFQUFzQ1Qsa0JBQXRDLENBQXpCIiwic291cmNlUm9vdCI6IkU6XFxjb2RlXFxkZHNcXHNvY2lhbC1zaGFyZS1iYWNrZW5kLW5pa3VuZFxcYXBpXFxub3RpZmljYXRpb25cXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSwge1NjaGVtYX0gZnJvbSAnbW9uZ29vc2UnO1xyXG5pbXBvcnQgdGltZXN0YW1wcyBmcm9tIFwibW9uZ29vc2UtdGltZXN0YW1wXCI7XHJcblxyXG5jb25zdCBub3RpZmljYXRpb25TY2hlbWEgPSBTY2hlbWEoe1xyXG4gICAgdXNlcklkOlN0cmluZyxcclxuICAgIG5vdGlmaWNhdGlvbjpBcnJheSxcclxufSwgeyB0aW1lc3RhbXBzOiB7Y3JlYXRlZEF0OidjcmVhdGVkX2F0J30gfSlcclxuXHJcbmV4cG9ydCBjb25zdCBub3RpZmljYXRpb25MaXN0ID0gbW9uZ29vc2UubW9kZWwoJ25vdGlmaWNhdGlvbkRvY3VtZW50Jyxub3RpZmljYXRpb25TY2hlbWEpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "notification.modal.js"
      ],
      "names": [
        "notificationSchema",
        "userId",
        "String",
        "notification",
        "Array",
        "timestamps",
        "createdAt",
        "notificationList",
        "mongoose",
        "model"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;;;;;;;AAEA,IAAMA,kBAAkB,GAAG,sBAAO;AAC9BC,EAAAA,MAAM,EAACC,MADuB;AAE9BC,EAAAA,YAAY,EAACC;AAFiB,CAAP,EAGxB;AAAEC,EAAAA,UAAU,EAAE;AAACC,IAAAA,SAAS,EAAC;AAAX;AAAd,CAHwB,CAA3B;;AAKO,IAAMC,gBAAgB,GAAGC,qBAASC,KAAT,CAAe,sBAAf,EAAsCT,kBAAtC,CAAzB",
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\notification\\",
      "sourcesContent": [
        "import mongoose, {Schema} from 'mongoose';\r\nimport timestamps from \"mongoose-timestamp\";\r\n\r\nconst notificationSchema = Schema({\r\n    userId:String,\r\n    notification:Array,\r\n}, { timestamps: {createdAt:'created_at'} })\r\n\r\nexport const notificationList = mongoose.model('notificationDocument',notificationSchema);"
      ]
    },
    "sourceType": "script",
    "mtime": 1594959277253
  },
  "{\"sourceRoot\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\notification\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"filename\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\notification\\\\notification.restRoute.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\notification\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\code\\dds\\social-share-backend-nikund",
      "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\notification\\notification.restRoute.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\code\\dds\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\code\\dds\\social-share-backend-nikund\\api\\notification\\notification.restRoute.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\notification\\notification.restRoute.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\notification\\",
        "sourceFileName": "notification.restRoute.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.notificationRouter = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _notification = require(\"./notification.controller\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar notificationRouter = _express[\"default\"].Router();\n\nexports.notificationRouter = notificationRouter;\nnotificationRouter.get(\"/\", _notification.getnotification);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGlmaWNhdGlvbi5yZXN0Um91dGUuanMiXSwibmFtZXMiOlsibm90aWZpY2F0aW9uUm91dGVyIiwiZXhwcmVzcyIsIlJvdXRlciIsImdldCIsImdldG5vdGlmaWNhdGlvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7O0FBR08sSUFBTUEsa0JBQWtCLEdBQUdDLG9CQUFRQyxNQUFSLEVBQTNCOzs7QUFFUEYsa0JBQWtCLENBQUNHLEdBQW5CLENBQXVCLEdBQXZCLEVBQTJCQyw2QkFBM0IiLCJzb3VyY2VSb290IjoiRTpcXGNvZGVcXGRkc1xcc29jaWFsLXNoYXJlLWJhY2tlbmQtbmlrdW5kXFxhcGlcXG5vdGlmaWNhdGlvblxcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcydcclxuaW1wb3J0IHtcclxuICAgIGdldG5vdGlmaWNhdGlvbixcclxufSBmcm9tICcuL25vdGlmaWNhdGlvbi5jb250cm9sbGVyJ1xyXG5leHBvcnQgY29uc3Qgbm90aWZpY2F0aW9uUm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcclxuXHJcbm5vdGlmaWNhdGlvblJvdXRlci5nZXQoXCIvXCIsZ2V0bm90aWZpY2F0aW9uKTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "notification.restRoute.js"
      ],
      "names": [
        "notificationRouter",
        "express",
        "Router",
        "get",
        "getnotification"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAGO,IAAMA,kBAAkB,GAAGC,oBAAQC,MAAR,EAA3B;;;AAEPF,kBAAkB,CAACG,GAAnB,CAAuB,GAAvB,EAA2BC,6BAA3B",
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\notification\\",
      "sourcesContent": [
        "import express from 'express'\r\nimport {\r\n    getnotification,\r\n} from './notification.controller'\r\nexport const notificationRouter = express.Router();\r\n\r\nnotificationRouter.get(\"/\",getnotification);"
      ]
    },
    "sourceType": "script",
    "mtime": 1594959354613
  },
  "{\"sourceRoot\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\notification\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"filename\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\notification\\\\notification.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\notification\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\code\\dds\\social-share-backend-nikund",
      "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\notification\\notification.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\code\\dds\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\code\\dds\\social-share-backend-nikund\\api\\notification\\notification.controller.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\notification\\notification.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\notification\\",
        "sourceFileName": "notification.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getnotification = void 0;\n\nvar _notification = require(\"./notification.modal\");\n\nvar _user = require(\"../users/user.modal\");\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _config = _interopRequireDefault(require(\"../../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//------------------------------------------------------------------show notification\nvar getnotification = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var decoded, data, userId, userData, notificationData, totalNotification, i;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 3:\n            decoded = _context.sent;\n            _context.next = 6;\n            return _user.Users.findOne({\n              emailId: decoded.sub\n            });\n\n          case 6:\n            data = _context.sent;\n            userId = data._id;\n            _context.next = 10;\n            return _notification.notificationList.findOne({\n              userId: userId\n            });\n\n          case 10:\n            userData = _context.sent;\n            notificationData = userData.notification;\n            totalNotification = notificationData.length;\n\n            for (i = totalNotification - 1; i > totalNotification - 11; i--) {\n              if (notificationData[i]) {\n                res.send(notificationData[i]);\n              }\n            }\n\n            _context.next = 19;\n            break;\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context.t0.message\n            });\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 16]]);\n  }));\n\n  return function getnotification(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.getnotification = getnotification;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGlmaWNhdGlvbi5jb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbImdldG5vdGlmaWNhdGlvbiIsInJlcSIsInJlcyIsImp3dCIsInZlcmlmeSIsImhlYWRlcnMiLCJ0b2tlbiIsImNvbmZpZ0tleSIsInNlY3JldHMiLCJKV1RfU0VDUkVUIiwiZGVjb2RlZCIsIlVzZXJzIiwiZmluZE9uZSIsImVtYWlsSWQiLCJzdWIiLCJkYXRhIiwidXNlcklkIiwiX2lkIiwibm90aWZpY2F0aW9uTGlzdCIsInVzZXJEYXRhIiwibm90aWZpY2F0aW9uRGF0YSIsIm5vdGlmaWNhdGlvbiIsInRvdGFsTm90aWZpY2F0aW9uIiwibGVuZ3RoIiwiaSIsInNlbmQiLCJzdGF0dXMiLCJzdWNjZXNzIiwibWVzc2FnZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7OztBQUNBO0FBRU8sSUFBTUEsZUFBZTtBQUFBLHFFQUFHLGlCQUFPQyxHQUFQLEVBQVdDLEdBQVg7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUVMQyx5QkFBSUMsTUFBSixDQUFXSCxHQUFHLENBQUNJLE9BQUosQ0FBWUMsS0FBdkIsRUFBOEJDLG1CQUFVQyxPQUFWLENBQWtCQyxVQUFoRCxDQUZLOztBQUFBO0FBRXJCQyxZQUFBQSxPQUZxQjtBQUFBO0FBQUEsbUJBR1JDLFlBQU1DLE9BQU4sQ0FBYztBQUFDQyxjQUFBQSxPQUFPLEVBQUNILE9BQU8sQ0FBQ0k7QUFBakIsYUFBZCxDQUhROztBQUFBO0FBR3JCQyxZQUFBQSxJQUhxQjtBQUlyQkMsWUFBQUEsTUFKcUIsR0FJWkQsSUFBSSxDQUFDRSxHQUpPO0FBQUE7QUFBQSxtQkFNSkMsK0JBQWlCTixPQUFqQixDQUF5QjtBQUFDSSxjQUFBQSxNQUFNLEVBQUNBO0FBQVIsYUFBekIsQ0FOSTs7QUFBQTtBQU1yQkcsWUFBQUEsUUFOcUI7QUFPckJDLFlBQUFBLGdCQVBxQixHQU9KRCxRQUFRLENBQUNFLFlBUEw7QUFRdkJDLFlBQUFBLGlCQVJ1QixHQVFIRixnQkFBZ0IsQ0FBQ0csTUFSZDs7QUFTM0IsaUJBQVFDLENBQVIsR0FBWUYsaUJBQWlCLEdBQUMsQ0FBOUIsRUFBaUNFLENBQUMsR0FBQ0YsaUJBQWlCLEdBQUMsRUFBckQsRUFBd0RFLENBQUMsRUFBekQsRUFBNEQ7QUFDeEQsa0JBQUdKLGdCQUFnQixDQUFDSSxDQUFELENBQW5CLEVBQXVCO0FBQ25CdEIsZ0JBQUFBLEdBQUcsQ0FBQ3VCLElBQUosQ0FBU0wsZ0JBQWdCLENBQUNJLENBQUQsQ0FBekI7QUFDSDtBQUNKOztBQWIwQjtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQWV2QnRCLFlBQUFBLEdBQUcsQ0FBQ3dCLE1BQUosQ0FBVyxHQUFYLEVBQWdCRCxJQUFoQixDQUFxQjtBQUNqQkUsY0FBQUEsT0FBTyxFQUFDLEtBRFM7QUFFakJDLGNBQUFBLE9BQU8sRUFBQyxZQUFJQTtBQUZLLGFBQXJCOztBQWZ1QjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFIOztBQUFBLGtCQUFmNUIsZUFBZTtBQUFBO0FBQUE7QUFBQSxHQUFyQiIsInNvdXJjZVJvb3QiOiJFOlxcY29kZVxcZGRzXFxzb2NpYWwtc2hhcmUtYmFja2VuZC1uaWt1bmRcXGFwaVxcbm90aWZpY2F0aW9uXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge25vdGlmaWNhdGlvbkxpc3R9IGZyb20gJy4vbm90aWZpY2F0aW9uLm1vZGFsJ1xyXG5pbXBvcnQge1VzZXJzfSBmcm9tICcuLi91c2Vycy91c2VyLm1vZGFsJ1xyXG5pbXBvcnQgand0IGZyb20gJ2pzb253ZWJ0b2tlbic7XHJcbmltcG9ydCBjb25maWdLZXkgZnJvbSAnLi4vLi4vY29uZmlnJ1xyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLXNob3cgbm90aWZpY2F0aW9uXHJcblxyXG5leHBvcnQgY29uc3QgZ2V0bm90aWZpY2F0aW9uID0gYXN5bmMgKHJlcSxyZXMpID0+e1xyXG4gICAgdHJ5e1xyXG4gICAgY29uc3QgZGVjb2RlZCA9IGF3YWl0IGp3dC52ZXJpZnkocmVxLmhlYWRlcnMudG9rZW4sIGNvbmZpZ0tleS5zZWNyZXRzLkpXVF9TRUNSRVQpO1xyXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IFVzZXJzLmZpbmRPbmUoe2VtYWlsSWQ6ZGVjb2RlZC5zdWJ9KVxyXG4gICAgY29uc3QgdXNlcklkID0gZGF0YS5faWRcclxuXHJcbiAgICBjb25zdCB1c2VyRGF0YSA9IGF3YWl0IG5vdGlmaWNhdGlvbkxpc3QuZmluZE9uZSh7dXNlcklkOnVzZXJJZH0pXHJcbiAgICBjb25zdCBub3RpZmljYXRpb25EYXRhPXVzZXJEYXRhLm5vdGlmaWNhdGlvblxyXG4gICAgdmFyIHRvdGFsTm90aWZpY2F0aW9uID0gbm90aWZpY2F0aW9uRGF0YS5sZW5ndGg7XHJcbiAgICBmb3IodmFyIGkgPSB0b3RhbE5vdGlmaWNhdGlvbi0xIDtpPnRvdGFsTm90aWZpY2F0aW9uLTExO2ktLSl7XHJcbiAgICAgICAgaWYobm90aWZpY2F0aW9uRGF0YVtpXSl7XHJcbiAgICAgICAgICAgIHJlcy5zZW5kKG5vdGlmaWNhdGlvbkRhdGFbaV0pO1xyXG4gICAgICAgIH0gICAgICAgIFxyXG4gICAgfVxyXG4gICAgfWNhdGNoKGVycil7XHJcbiAgICAgICAgcmVzLnN0YXR1cyg0MDEpLnNlbmQoe1xyXG4gICAgICAgICAgICBzdWNjZXNzOmZhbHNlLFxyXG4gICAgICAgICAgICBtZXNzYWdlOmVyci5tZXNzYWdlXHJcbiAgICAgICAgfSlcclxuICAgIH1cclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "notification.controller.js"
      ],
      "names": [
        "getnotification",
        "req",
        "res",
        "jwt",
        "verify",
        "headers",
        "token",
        "configKey",
        "secrets",
        "JWT_SECRET",
        "decoded",
        "Users",
        "findOne",
        "emailId",
        "sub",
        "data",
        "userId",
        "_id",
        "notificationList",
        "userData",
        "notificationData",
        "notification",
        "totalNotification",
        "length",
        "i",
        "send",
        "status",
        "success",
        "message"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;AACA;AAEO,IAAMA,eAAe;AAAA,qEAAG,iBAAOC,GAAP,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAELC,yBAAIC,MAAJ,CAAWH,GAAG,CAACI,OAAJ,CAAYC,KAAvB,EAA8BC,mBAAUC,OAAV,CAAkBC,UAAhD,CAFK;;AAAA;AAErBC,YAAAA,OAFqB;AAAA;AAAA,mBAGRC,YAAMC,OAAN,CAAc;AAACC,cAAAA,OAAO,EAACH,OAAO,CAACI;AAAjB,aAAd,CAHQ;;AAAA;AAGrBC,YAAAA,IAHqB;AAIrBC,YAAAA,MAJqB,GAIZD,IAAI,CAACE,GAJO;AAAA;AAAA,mBAMJC,+BAAiBN,OAAjB,CAAyB;AAACI,cAAAA,MAAM,EAACA;AAAR,aAAzB,CANI;;AAAA;AAMrBG,YAAAA,QANqB;AAOrBC,YAAAA,gBAPqB,GAOJD,QAAQ,CAACE,YAPL;AAQvBC,YAAAA,iBARuB,GAQHF,gBAAgB,CAACG,MARd;;AAS3B,iBAAQC,CAAR,GAAYF,iBAAiB,GAAC,CAA9B,EAAiCE,CAAC,GAACF,iBAAiB,GAAC,EAArD,EAAwDE,CAAC,EAAzD,EAA4D;AACxD,kBAAGJ,gBAAgB,CAACI,CAAD,CAAnB,EAAuB;AACnBtB,gBAAAA,GAAG,CAACuB,IAAJ,CAASL,gBAAgB,CAACI,CAAD,CAAzB;AACH;AACJ;;AAb0B;AAAA;;AAAA;AAAA;AAAA;AAevBtB,YAAAA,GAAG,CAACwB,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AACjBE,cAAAA,OAAO,EAAC,KADS;AAEjBC,cAAAA,OAAO,EAAC,YAAIA;AAFK,aAArB;;AAfuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAf5B,eAAe;AAAA;AAAA;AAAA,GAArB",
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\notification\\",
      "sourcesContent": [
        "import {notificationList} from './notification.modal'\r\nimport {Users} from '../users/user.modal'\r\nimport jwt from 'jsonwebtoken';\r\nimport configKey from '../../config'\r\n//------------------------------------------------------------------show notification\r\n\r\nexport const getnotification = async (req,res) =>{\r\n    try{\r\n    const decoded = await jwt.verify(req.headers.token, configKey.secrets.JWT_SECRET);\r\n    const data = await Users.findOne({emailId:decoded.sub})\r\n    const userId = data._id\r\n\r\n    const userData = await notificationList.findOne({userId:userId})\r\n    const notificationData=userData.notification\r\n    var totalNotification = notificationData.length;\r\n    for(var i = totalNotification-1 ;i>totalNotification-11;i--){\r\n        if(notificationData[i]){\r\n            res.send(notificationData[i]);\r\n        }        \r\n    }\r\n    }catch(err){\r\n        res.status(401).send({\r\n            success:false,\r\n            message:err.message\r\n        })\r\n    }\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1594973716950
  },
  "{\"sourceRoot\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\about\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"filename\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\about\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\about\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\code\\dds\\social-share-backend-nikund",
      "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\about\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\code\\dds\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\code\\dds\\social-share-backend-nikund\\api\\about\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\about\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\about\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _about = require(\"./about.modal\");\n\nObject.keys(_about).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _about[key];\n    }\n  });\n});\n\nvar _about2 = require(\"./about.restRoute\");\n\nObject.keys(_about2).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _about2[key];\n    }\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFDQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEiLCJzb3VyY2VSb290IjoiRTpcXGNvZGVcXGRkc1xcc29jaWFsLXNoYXJlLWJhY2tlbmQtbmlrdW5kXFxhcGlcXGFib3V0XFwiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICcuL2Fib3V0Lm1vZGFsJztcclxuZXhwb3J0ICogZnJvbSAnLi9hYm91dC5yZXN0Um91dGUnIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [],
      "mappings": ";;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA",
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\about\\",
      "sourcesContent": [
        "export * from './about.modal';\r\nexport * from './about.restRoute'"
      ]
    },
    "sourceType": "script",
    "mtime": 1596605712126
  },
  "{\"sourceRoot\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\about\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"filename\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\about\\\\about.modal.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\about\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\code\\dds\\social-share-backend-nikund",
      "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\about\\about.modal.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\code\\dds\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\code\\dds\\social-share-backend-nikund\\api\\about\\about.modal.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\about\\about.modal.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\about\\",
        "sourceFileName": "about.modal.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.about = void 0;\n\nvar _mongoose = _interopRequireWildcard(require(\"mongoose\"));\n\nvar _mongooseTimestamp = _interopRequireDefault(require(\"mongoose-timestamp\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar aboutSchema = (0, _mongoose.Schema)({\n  userId: String,\n  work: Array,\n  university: Array,\n  highSchool: Array,\n  mobileNumber: Number,\n  address: String,\n  website: String,\n  socialLink: String,\n  basicInfo: String,\n  relationshipStatus: String,\n  family: Array,\n  aboutYourself: String,\n  pronunciation: String,\n  otherName: String,\n  quote: String,\n  bloodDonations: String,\n  lifeEvents: Array\n}, {\n  timestamps: {\n    createdAt: 'created_at'\n  }\n});\n\nvar about = _mongoose[\"default\"].model('about', aboutSchema);\n\nexports.about = about;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFib3V0Lm1vZGFsLmpzIl0sIm5hbWVzIjpbImFib3V0U2NoZW1hIiwidXNlcklkIiwiU3RyaW5nIiwid29yayIsIkFycmF5IiwidW5pdmVyc2l0eSIsImhpZ2hTY2hvb2wiLCJtb2JpbGVOdW1iZXIiLCJOdW1iZXIiLCJhZGRyZXNzIiwid2Vic2l0ZSIsInNvY2lhbExpbmsiLCJiYXNpY0luZm8iLCJyZWxhdGlvbnNoaXBTdGF0dXMiLCJmYW1pbHkiLCJhYm91dFlvdXJzZWxmIiwicHJvbnVuY2lhdGlvbiIsIm90aGVyTmFtZSIsInF1b3RlIiwiYmxvb2REb25hdGlvbnMiLCJsaWZlRXZlbnRzIiwidGltZXN0YW1wcyIsImNyZWF0ZWRBdCIsImFib3V0IiwibW9uZ29vc2UiLCJtb2RlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7Ozs7Ozs7O0FBRUEsSUFBTUEsV0FBVyxHQUFHLHNCQUFPO0FBQ3ZCQyxFQUFBQSxNQUFNLEVBQUNDLE1BRGdCO0FBRXZCQyxFQUFBQSxJQUFJLEVBQUNDLEtBRmtCO0FBR3ZCQyxFQUFBQSxVQUFVLEVBQUNELEtBSFk7QUFJdkJFLEVBQUFBLFVBQVUsRUFBQ0YsS0FKWTtBQUt2QkcsRUFBQUEsWUFBWSxFQUFDQyxNQUxVO0FBTXZCQyxFQUFBQSxPQUFPLEVBQUNQLE1BTmU7QUFPdkJRLEVBQUFBLE9BQU8sRUFBQ1IsTUFQZTtBQVF2QlMsRUFBQUEsVUFBVSxFQUFDVCxNQVJZO0FBU3ZCVSxFQUFBQSxTQUFTLEVBQUNWLE1BVGE7QUFVdkJXLEVBQUFBLGtCQUFrQixFQUFDWCxNQVZJO0FBV3ZCWSxFQUFBQSxNQUFNLEVBQUNWLEtBWGdCO0FBWXZCVyxFQUFBQSxhQUFhLEVBQUNiLE1BWlM7QUFhdkJjLEVBQUFBLGFBQWEsRUFBQ2QsTUFiUztBQWN2QmUsRUFBQUEsU0FBUyxFQUFDZixNQWRhO0FBZXZCZ0IsRUFBQUEsS0FBSyxFQUFDaEIsTUFmaUI7QUFnQnZCaUIsRUFBQUEsY0FBYyxFQUFDakIsTUFoQlE7QUFpQnZCa0IsRUFBQUEsVUFBVSxFQUFDaEI7QUFqQlksQ0FBUCxFQW1CakI7QUFBRWlCLEVBQUFBLFVBQVUsRUFBRTtBQUFDQyxJQUFBQSxTQUFTLEVBQUM7QUFBWDtBQUFkLENBbkJpQixDQUFwQjs7QUFxQk8sSUFBTUMsS0FBSyxHQUFHQyxxQkFBU0MsS0FBVCxDQUFlLE9BQWYsRUFBdUJ6QixXQUF2QixDQUFkIiwic291cmNlUm9vdCI6IkU6XFxjb2RlXFxkZHNcXHNvY2lhbC1zaGFyZS1iYWNrZW5kLW5pa3VuZFxcYXBpXFxhYm91dFxcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlLCB7U2NoZW1hfSBmcm9tICdtb25nb29zZSc7XHJcbmltcG9ydCB0aW1lc3RhbXBzIGZyb20gXCJtb25nb29zZS10aW1lc3RhbXBcIjtcclxuXHJcbmNvbnN0IGFib3V0U2NoZW1hID0gU2NoZW1hKHtcclxuICAgIHVzZXJJZDpTdHJpbmcsXHJcbiAgICB3b3JrOkFycmF5LFxyXG4gICAgdW5pdmVyc2l0eTpBcnJheSxcclxuICAgIGhpZ2hTY2hvb2w6QXJyYXksXHJcbiAgICBtb2JpbGVOdW1iZXI6TnVtYmVyLFxyXG4gICAgYWRkcmVzczpTdHJpbmcsXHJcbiAgICB3ZWJzaXRlOlN0cmluZyxcclxuICAgIHNvY2lhbExpbms6U3RyaW5nLFxyXG4gICAgYmFzaWNJbmZvOlN0cmluZyxcclxuICAgIHJlbGF0aW9uc2hpcFN0YXR1czpTdHJpbmcsXHJcbiAgICBmYW1pbHk6QXJyYXksXHJcbiAgICBhYm91dFlvdXJzZWxmOlN0cmluZyxcclxuICAgIHByb251bmNpYXRpb246U3RyaW5nLFxyXG4gICAgb3RoZXJOYW1lOlN0cmluZyxcclxuICAgIHF1b3RlOlN0cmluZyxcclxuICAgIGJsb29kRG9uYXRpb25zOlN0cmluZyxcclxuICAgIGxpZmVFdmVudHM6QXJyYXlcclxuXHJcbn0sIHsgdGltZXN0YW1wczoge2NyZWF0ZWRBdDonY3JlYXRlZF9hdCd9IH0pXHJcblxyXG5leHBvcnQgY29uc3QgYWJvdXQgPSBtb25nb29zZS5tb2RlbCgnYWJvdXQnLGFib3V0U2NoZW1hKTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "about.modal.js"
      ],
      "names": [
        "aboutSchema",
        "userId",
        "String",
        "work",
        "Array",
        "university",
        "highSchool",
        "mobileNumber",
        "Number",
        "address",
        "website",
        "socialLink",
        "basicInfo",
        "relationshipStatus",
        "family",
        "aboutYourself",
        "pronunciation",
        "otherName",
        "quote",
        "bloodDonations",
        "lifeEvents",
        "timestamps",
        "createdAt",
        "about",
        "mongoose",
        "model"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;;;;;;;AAEA,IAAMA,WAAW,GAAG,sBAAO;AACvBC,EAAAA,MAAM,EAACC,MADgB;AAEvBC,EAAAA,IAAI,EAACC,KAFkB;AAGvBC,EAAAA,UAAU,EAACD,KAHY;AAIvBE,EAAAA,UAAU,EAACF,KAJY;AAKvBG,EAAAA,YAAY,EAACC,MALU;AAMvBC,EAAAA,OAAO,EAACP,MANe;AAOvBQ,EAAAA,OAAO,EAACR,MAPe;AAQvBS,EAAAA,UAAU,EAACT,MARY;AASvBU,EAAAA,SAAS,EAACV,MATa;AAUvBW,EAAAA,kBAAkB,EAACX,MAVI;AAWvBY,EAAAA,MAAM,EAACV,KAXgB;AAYvBW,EAAAA,aAAa,EAACb,MAZS;AAavBc,EAAAA,aAAa,EAACd,MAbS;AAcvBe,EAAAA,SAAS,EAACf,MAda;AAevBgB,EAAAA,KAAK,EAAChB,MAfiB;AAgBvBiB,EAAAA,cAAc,EAACjB,MAhBQ;AAiBvBkB,EAAAA,UAAU,EAAChB;AAjBY,CAAP,EAmBjB;AAAEiB,EAAAA,UAAU,EAAE;AAACC,IAAAA,SAAS,EAAC;AAAX;AAAd,CAnBiB,CAApB;;AAqBO,IAAMC,KAAK,GAAGC,qBAASC,KAAT,CAAe,OAAf,EAAuBzB,WAAvB,CAAd",
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\about\\",
      "sourcesContent": [
        "import mongoose, {Schema} from 'mongoose';\r\nimport timestamps from \"mongoose-timestamp\";\r\n\r\nconst aboutSchema = Schema({\r\n    userId:String,\r\n    work:Array,\r\n    university:Array,\r\n    highSchool:Array,\r\n    mobileNumber:Number,\r\n    address:String,\r\n    website:String,\r\n    socialLink:String,\r\n    basicInfo:String,\r\n    relationshipStatus:String,\r\n    family:Array,\r\n    aboutYourself:String,\r\n    pronunciation:String,\r\n    otherName:String,\r\n    quote:String,\r\n    bloodDonations:String,\r\n    lifeEvents:Array\r\n\r\n}, { timestamps: {createdAt:'created_at'} })\r\n\r\nexport const about = mongoose.model('about',aboutSchema);"
      ]
    },
    "sourceType": "script",
    "mtime": 1596626407224
  },
  "{\"sourceRoot\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\about\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"filename\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\about\\\\about.restRoute.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\about\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\code\\dds\\social-share-backend-nikund",
      "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\about\\about.restRoute.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\code\\dds\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\code\\dds\\social-share-backend-nikund\\api\\about\\about.restRoute.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\about\\about.restRoute.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\about\\",
        "sourceFileName": "about.restRoute.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.aboutRouter = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _about = require(\"./about.controller\");\n\nvar _about2 = require(\"./about.modal\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar aboutRouter = _express[\"default\"].Router();\n\nexports.aboutRouter = aboutRouter;\naboutRouter.post(\"/addWork\", _about.addWork);\naboutRouter.post(\"/updateWork\", _about.updateWork);\naboutRouter.post(\"/deleteWork\", _about.deleteWork);\naboutRouter.post(\"/addHighSchool\", _about.addHighSchool);\naboutRouter.post(\"/updateHighSchool\", _about.updateHighSchool);\naboutRouter.post(\"/deleteHighSchool\", _about.deleteHighSchool);\naboutRouter.post(\"/updateAbout\", _about.updateAbout);\naboutRouter.post(\"/deleteAbout\", _about.deleteAbout);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFib3V0LnJlc3RSb3V0ZS5qcyJdLCJuYW1lcyI6WyJhYm91dFJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJwb3N0IiwiYWRkV29yayIsInVwZGF0ZVdvcmsiLCJkZWxldGVXb3JrIiwiYWRkSGlnaFNjaG9vbCIsInVwZGF0ZUhpZ2hTY2hvb2wiLCJkZWxldGVIaWdoU2Nob29sIiwidXBkYXRlQWJvdXQiLCJkZWxldGVBYm91dCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQVdBOzs7O0FBQ08sSUFBTUEsV0FBVyxHQUFHQyxvQkFBUUMsTUFBUixFQUFwQjs7O0FBRVBGLFdBQVcsQ0FBQ0csSUFBWixDQUFpQixVQUFqQixFQUE0QkMsY0FBNUI7QUFDQUosV0FBVyxDQUFDRyxJQUFaLENBQWlCLGFBQWpCLEVBQStCRSxpQkFBL0I7QUFDQUwsV0FBVyxDQUFDRyxJQUFaLENBQWlCLGFBQWpCLEVBQStCRyxpQkFBL0I7QUFFQU4sV0FBVyxDQUFDRyxJQUFaLENBQWlCLGdCQUFqQixFQUFrQ0ksb0JBQWxDO0FBQ0FQLFdBQVcsQ0FBQ0csSUFBWixDQUFpQixtQkFBakIsRUFBcUNLLHVCQUFyQztBQUNBUixXQUFXLENBQUNHLElBQVosQ0FBaUIsbUJBQWpCLEVBQXFDTSx1QkFBckM7QUFFQVQsV0FBVyxDQUFDRyxJQUFaLENBQWlCLGNBQWpCLEVBQWdDTyxrQkFBaEM7QUFDQVYsV0FBVyxDQUFDRyxJQUFaLENBQWlCLGNBQWpCLEVBQWdDUSxrQkFBaEMiLCJzb3VyY2VSb290IjoiRTpcXGNvZGVcXGRkc1xcc29jaWFsLXNoYXJlLWJhY2tlbmQtbmlrdW5kXFxhcGlcXGFib3V0XFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJ1xyXG5pbXBvcnQge1xyXG4gICAgYWRkV29yayxcclxuICAgIHVwZGF0ZVdvcmssXHJcbiAgICBkZWxldGVXb3JrLFxyXG4gICAgYWRkSGlnaFNjaG9vbCxcclxuICAgIHVwZGF0ZUhpZ2hTY2hvb2wsXHJcbiAgICBkZWxldGVIaWdoU2Nob29sLFxyXG4gICAgZGVsZXRlQWJvdXQsXHJcbiAgICB1cGRhdGVBYm91dFxyXG5cclxufSBmcm9tICcuL2Fib3V0LmNvbnRyb2xsZXInXHJcbmltcG9ydCB7IGFib3V0IH0gZnJvbSAnLi9hYm91dC5tb2RhbCc7XHJcbmV4cG9ydCBjb25zdCBhYm91dFJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XHJcblxyXG5hYm91dFJvdXRlci5wb3N0KFwiL2FkZFdvcmtcIixhZGRXb3JrKTtcclxuYWJvdXRSb3V0ZXIucG9zdChcIi91cGRhdGVXb3JrXCIsdXBkYXRlV29yayk7XHJcbmFib3V0Um91dGVyLnBvc3QoXCIvZGVsZXRlV29ya1wiLGRlbGV0ZVdvcmspO1xyXG5cclxuYWJvdXRSb3V0ZXIucG9zdChcIi9hZGRIaWdoU2Nob29sXCIsYWRkSGlnaFNjaG9vbCk7XHJcbmFib3V0Um91dGVyLnBvc3QoXCIvdXBkYXRlSGlnaFNjaG9vbFwiLHVwZGF0ZUhpZ2hTY2hvb2wpO1xyXG5hYm91dFJvdXRlci5wb3N0KFwiL2RlbGV0ZUhpZ2hTY2hvb2xcIixkZWxldGVIaWdoU2Nob29sKTtcclxuXHJcbmFib3V0Um91dGVyLnBvc3QoXCIvdXBkYXRlQWJvdXRcIix1cGRhdGVBYm91dClcclxuYWJvdXRSb3V0ZXIucG9zdChcIi9kZWxldGVBYm91dFwiLGRlbGV0ZUFib3V0KSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "about.restRoute.js"
      ],
      "names": [
        "aboutRouter",
        "express",
        "Router",
        "post",
        "addWork",
        "updateWork",
        "deleteWork",
        "addHighSchool",
        "updateHighSchool",
        "deleteHighSchool",
        "updateAbout",
        "deleteAbout"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAWA;;;;AACO,IAAMA,WAAW,GAAGC,oBAAQC,MAAR,EAApB;;;AAEPF,WAAW,CAACG,IAAZ,CAAiB,UAAjB,EAA4BC,cAA5B;AACAJ,WAAW,CAACG,IAAZ,CAAiB,aAAjB,EAA+BE,iBAA/B;AACAL,WAAW,CAACG,IAAZ,CAAiB,aAAjB,EAA+BG,iBAA/B;AAEAN,WAAW,CAACG,IAAZ,CAAiB,gBAAjB,EAAkCI,oBAAlC;AACAP,WAAW,CAACG,IAAZ,CAAiB,mBAAjB,EAAqCK,uBAArC;AACAR,WAAW,CAACG,IAAZ,CAAiB,mBAAjB,EAAqCM,uBAArC;AAEAT,WAAW,CAACG,IAAZ,CAAiB,cAAjB,EAAgCO,kBAAhC;AACAV,WAAW,CAACG,IAAZ,CAAiB,cAAjB,EAAgCQ,kBAAhC",
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\about\\",
      "sourcesContent": [
        "import express from 'express'\r\nimport {\r\n    addWork,\r\n    updateWork,\r\n    deleteWork,\r\n    addHighSchool,\r\n    updateHighSchool,\r\n    deleteHighSchool,\r\n    deleteAbout,\r\n    updateAbout\r\n\r\n} from './about.controller'\r\nimport { about } from './about.modal';\r\nexport const aboutRouter = express.Router();\r\n\r\naboutRouter.post(\"/addWork\",addWork);\r\naboutRouter.post(\"/updateWork\",updateWork);\r\naboutRouter.post(\"/deleteWork\",deleteWork);\r\n\r\naboutRouter.post(\"/addHighSchool\",addHighSchool);\r\naboutRouter.post(\"/updateHighSchool\",updateHighSchool);\r\naboutRouter.post(\"/deleteHighSchool\",deleteHighSchool);\r\n\r\naboutRouter.post(\"/updateAbout\",updateAbout)\r\naboutRouter.post(\"/deleteAbout\",deleteAbout)"
      ]
    },
    "sourceType": "script",
    "mtime": 1596626352872
  },
  "{\"sourceRoot\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\about\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"filename\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\\\\api\\\\about\\\\about.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\code\\\\dds\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\about\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\code\\dds\\social-share-backend-nikund",
      "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\about\\about.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\code\\dds\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\code\\dds\\social-share-backend-nikund\\api\\about\\about.controller.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\code\\dds\\social-share-backend-nikund\\api\\about\\about.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\about\\",
        "sourceFileName": "about.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteAbout = exports.updateAbout = exports.deleteHighSchool = exports.updateHighSchool = exports.addHighSchool = exports.deleteWork = exports.updateWork = exports.addWork = void 0;\n\nvar _about = require(\"./about.modal\");\n\nvar _user = require(\"../users/user.modal\");\n\nvar _notification = require(\"../notification/notification.modal\");\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _config = _interopRequireDefault(require(\"../../config\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar checkUserData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(user) {\n    var userFind;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _about.about.find({\n              userId: user\n            });\n\n          case 2:\n            userFind = _context.sent;\n\n            if (!(userFind <= 0)) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 6;\n            return _about.about.create({\n              userId: user\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function checkUserData(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar addData = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(user, data, column) {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _about.about.findOneAndUpdate({\n              userId: user\n            }, {\n              $push: _defineProperty({}, column, data)\n            });\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function addData(_x2, _x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar updateData = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(user, dataId, data, updateId) {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _about.about.updateOne(_defineProperty({\n              userId: user\n            }, updateId, _mongoose[\"default\"].Types.ObjectId(dataId)), {\n              $set: data\n            });\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function updateData(_x5, _x6, _x7, _x8) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar deleteData = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(user, column, dataId) {\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _about.about.findOneAndUpdate({\n              userId: user\n            }, {\n              $pull: _defineProperty({}, column, {\n                _id: _mongoose[\"default\"].Types.ObjectId(dataId)\n              })\n            });\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function deleteData(_x9, _x10, _x11) {\n    return _ref4.apply(this, arguments);\n  };\n}(); //-------------------------------------------------------------------work--------------------------------------------------------------------\n//add work in user about\n\n\nvar addWork = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var userId, _req$body, company, position, city, description, fromdate, todate, data, userdata;\n\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            userId = req.body.userId;\n            _req$body = req.body, company = _req$body.company, position = _req$body.position, city = _req$body.city, description = _req$body.description, fromdate = _req$body.fromdate, todate = _req$body.todate;\n            data = {\n              _id: _mongoose[\"default\"].Types.ObjectId(),\n              company: company,\n              position: position,\n              city: city,\n              description: description,\n              fromdate: fromdate,\n              todate: todate\n            };\n            checkUserData(userId);\n            _context5.next = 7;\n            return _about.about.findOne({\n              userId: userId\n            });\n\n          case 7:\n            userdata = _context5.sent;\n            addData(userId, data, \"work\");\n            res.status(201).send({\n              success: true,\n              message: 'work add successfully'\n            });\n            _context5.next = 15;\n            break;\n\n          case 12:\n            _context5.prev = 12;\n            _context5.t0 = _context5[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context5.t0.message\n            });\n\n          case 15:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 12]]);\n  }));\n\n  return function addWork(_x12, _x13) {\n    return _ref5.apply(this, arguments);\n  };\n}(); //update work in user about\n\n\nexports.addWork = addWork;\n\nvar updateWork = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var _req$body2, userId, dataId, _req$body3, company, position, city, description, fromdate, todate, data;\n\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            try {\n              _req$body2 = req.body, userId = _req$body2.userId, dataId = _req$body2.dataId;\n              _req$body3 = req.body, company = _req$body3.company, position = _req$body3.position, city = _req$body3.city, description = _req$body3.description, fromdate = _req$body3.fromdate, todate = _req$body3.todate;\n              data = {\n                'work.$.company': company,\n                'work.$.position': position,\n                'work.$.city': city,\n                'work.$.description': description,\n                'work.$.fromdate': fromdate,\n                'work.$.todate': todate\n              };\n              updateData(userId, dataId, data, 'work._id');\n              res.status(201).send({\n                success: true,\n                message: 'update work successfully'\n              });\n            } catch (err) {\n              res.status(401).send({\n                success: false,\n                message: err.message\n              });\n            }\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function updateWork(_x14, _x15) {\n    return _ref6.apply(this, arguments);\n  };\n}(); //delete work in user about\n\n\nexports.updateWork = updateWork;\n\nvar deleteWork = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n    var _req$body4, userId, dataId;\n\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            try {\n              _req$body4 = req.body, userId = _req$body4.userId, dataId = _req$body4.dataId;\n              deleteData(userId, \"work\", dataId);\n              res.status(201).send({\n                success: true,\n                message: 'delete work successfully'\n              });\n            } catch (err) {\n              res.status(401).send({\n                success: false,\n                message: err.message\n              });\n            }\n\n          case 1:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function deleteWork(_x16, _x17) {\n    return _ref7.apply(this, arguments);\n  };\n}(); //------------------------------------------------high school---------------------------------------------------------------------------------\n//add HighSchool in user about\n\n\nexports.deleteWork = deleteWork;\n\nvar addHighSchool = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(req, res) {\n    var userId, _req$body5, name, description, fromdate, todate, data, userdata;\n\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.prev = 0;\n            userId = req.body.userId;\n            _req$body5 = req.body, name = _req$body5.name, description = _req$body5.description, fromdate = _req$body5.fromdate, todate = _req$body5.todate;\n            data = {\n              _id: _mongoose[\"default\"].Types.ObjectId(),\n              name: name,\n              description: description,\n              fromdate: fromdate,\n              todate: todate\n            };\n            checkUserData(userId);\n            _context8.next = 7;\n            return _about.about.findOne({\n              userId: userId\n            });\n\n          case 7:\n            userdata = _context8.sent;\n            addData(userId, data, \"highSchool\");\n            res.status(201).send({\n              success: true,\n              message: 'highSchool data add successfully'\n            });\n            _context8.next = 15;\n            break;\n\n          case 12:\n            _context8.prev = 12;\n            _context8.t0 = _context8[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context8.t0.message\n            });\n\n          case 15:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[0, 12]]);\n  }));\n\n  return function addHighSchool(_x18, _x19) {\n    return _ref8.apply(this, arguments);\n  };\n}(); //update work in user about\n\n\nexports.addHighSchool = addHighSchool;\n\nvar updateHighSchool = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(req, res) {\n    var _req$body6, userId, dataId, _req$body7, name, description, fromdate, todate, data;\n\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            try {\n              _req$body6 = req.body, userId = _req$body6.userId, dataId = _req$body6.dataId;\n              _req$body7 = req.body, name = _req$body7.name, description = _req$body7.description, fromdate = _req$body7.fromdate, todate = _req$body7.todate;\n              data = {\n                'highSchool.$.name': name,\n                'highSchool.$.description': description,\n                'highSchool.$.fromdate': fromdate,\n                'highSchool.$.todate': todate\n              };\n              updateData(userId, dataId, data, 'highSchool._id');\n              res.status(201).send({\n                success: true,\n                message: 'update highSchool data successfully'\n              });\n            } catch (err) {\n              res.status(401).send({\n                success: false,\n                message: err.message\n              });\n            }\n\n          case 1:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n\n  return function updateHighSchool(_x20, _x21) {\n    return _ref9.apply(this, arguments);\n  };\n}(); //delete work in user about\n\n\nexports.updateHighSchool = updateHighSchool;\n\nvar deleteHighSchool = /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(req, res) {\n    var _req$body8, userId, dataId;\n\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            try {\n              _req$body8 = req.body, userId = _req$body8.userId, dataId = _req$body8.dataId;\n              deleteData(userId, \"highSchool\", dataId);\n              res.status(201).send({\n                success: true,\n                message: 'delete highSchool data successfully'\n              });\n            } catch (err) {\n              res.status(401).send({\n                success: false,\n                message: err.message\n              });\n            }\n\n          case 1:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n\n  return function deleteHighSchool(_x22, _x23) {\n    return _ref10.apply(this, arguments);\n  };\n}(); //-------------------------------------------------------single String add -----------------------------------------------------------------------\n\n\nexports.deleteHighSchool = deleteHighSchool;\n\nfunction aboutMe(_x24, _x25, _x26) {\n  return _aboutMe.apply(this, arguments);\n}\n\nfunction _aboutMe() {\n  _aboutMe = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(userid, key, value) {\n    return regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            console.log(key);\n            _context13.next = 3;\n            return _about.about.findOneAndUpdate({\n              userId: userid\n            }, {\n              $set: _defineProperty({}, key, value)\n            });\n\n          case 3:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13);\n  }));\n  return _aboutMe.apply(this, arguments);\n}\n\nfunction deleteAboutMe(_x27, _x28, _x29) {\n  return _deleteAboutMe.apply(this, arguments);\n}\n\nfunction _deleteAboutMe() {\n  _deleteAboutMe = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(userid, key, value) {\n    return regeneratorRuntime.wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            console.log(key);\n            _context14.next = 3;\n            return _about.about.findOneAndUpdate({\n              userId: userid\n            }, {\n              $unset: _defineProperty({}, key, value)\n            });\n\n          case 3:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14);\n  }));\n  return _deleteAboutMe.apply(this, arguments);\n}\n\nvar updateAbout = /*#__PURE__*/function () {\n  var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(req, res) {\n    var decoded, user, userId, info, key, value;\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.prev = 0;\n            _context11.next = 3;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 3:\n            decoded = _context11.sent;\n            _context11.next = 6;\n            return _user.Users.findOne({\n              emailId: decoded.sub\n            });\n\n          case 6:\n            user = _context11.sent;\n            userId = user._id;\n            console.log(user._id);\n            info = req.body;\n            console.log(userId);\n            key = Object.keys(info)[0];\n            value = Object.values(info)[0];\n            console.log(key, value);\n            aboutMe(userId, key, value);\n            res.status(201).send({\n              success: true,\n              message: 'data update successsully'\n            });\n            _context11.next = 21;\n            break;\n\n          case 18:\n            _context11.prev = 18;\n            _context11.t0 = _context11[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context11.t0.message\n            });\n\n          case 21:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11, null, [[0, 18]]);\n  }));\n\n  return function updateAbout(_x30, _x31) {\n    return _ref11.apply(this, arguments);\n  };\n}();\n\nexports.updateAbout = updateAbout;\n\nvar deleteAbout = /*#__PURE__*/function () {\n  var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(req, res) {\n    var decoded, user, userId, info, key, value;\n    return regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _context12.prev = 0;\n            _context12.next = 3;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 3:\n            decoded = _context12.sent;\n            _context12.next = 6;\n            return _user.Users.findOne({\n              emailId: decoded.sub\n            });\n\n          case 6:\n            user = _context12.sent;\n            userId = user._id;\n            info = req.body;\n            console.log(userId);\n            key = Object.keys(info)[0];\n            value = Object.values(info)[0];\n            deleteAboutMe(userId, key, key, value);\n            res.status(201).send({\n              success: true,\n              message: 'data update successsully'\n            });\n            _context12.next = 19;\n            break;\n\n          case 16:\n            _context12.prev = 16;\n            _context12.t0 = _context12[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context12.t0.message\n            });\n\n          case 19:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12, null, [[0, 16]]);\n  }));\n\n  return function deleteAbout(_x32, _x33) {\n    return _ref12.apply(this, arguments);\n  };\n}();\n\nexports.deleteAbout = deleteAbout;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "about.controller.js"
      ],
      "names": [
        "checkUserData",
        "user",
        "about",
        "find",
        "userId",
        "userFind",
        "create",
        "addData",
        "data",
        "column",
        "findOneAndUpdate",
        "$push",
        "updateData",
        "dataId",
        "updateId",
        "updateOne",
        "mongoose",
        "Types",
        "ObjectId",
        "$set",
        "deleteData",
        "$pull",
        "_id",
        "addWork",
        "req",
        "res",
        "body",
        "company",
        "position",
        "city",
        "description",
        "fromdate",
        "todate",
        "findOne",
        "userdata",
        "status",
        "send",
        "success",
        "message",
        "updateWork",
        "err",
        "deleteWork",
        "addHighSchool",
        "name",
        "updateHighSchool",
        "deleteHighSchool",
        "aboutMe",
        "userid",
        "key",
        "value",
        "console",
        "log",
        "deleteAboutMe",
        "$unset",
        "updateAbout",
        "jwt",
        "verify",
        "headers",
        "token",
        "configKey",
        "secrets",
        "JWT_SECRET",
        "decoded",
        "Users",
        "emailId",
        "sub",
        "info",
        "Object",
        "keys",
        "values",
        "deleteAbout"
      ],
      "mappings": "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",
      "sourceRoot": "E:\\code\\dds\\social-share-backend-nikund\\api\\about\\",
      "sourcesContent": [
        "import {about} from './about.modal'\r\nimport {Users} from '../users/user.modal'\r\nimport {notificationList} from '../notification/notification.modal'\r\nimport jwt from 'jsonwebtoken';\r\nimport configKey from '../../config'\r\nimport mongoose from 'mongoose'\r\n\r\nconst checkUserData = async(user) =>{\r\n    const userFind = await about.find({userId:user});\r\n    if(userFind<=0){                                                       \r\n        await about.create({\r\n            userId:user\r\n        })\r\n    }\r\n}\r\nconst addData = async(user,data,column) =>{\r\n    await about.findOneAndUpdate({userId:user},{\r\n        $push:{[column] : data} \r\n    })\r\n}\r\nconst updateData = async(user,dataId,data,updateId) =>{\r\n    await about.updateOne({userId:user,[updateId] :mongoose.Types.ObjectId(dataId)},{   \r\n        $set: data\r\n    })\r\n}\r\nconst deleteData = async(user,column,dataId) =>{\r\n    await about.findOneAndUpdate({userId:user},{\r\n        $pull:{[column] : { _id : mongoose.Types.ObjectId(dataId) }} \r\n    })\r\n}\r\n//-------------------------------------------------------------------work--------------------------------------------------------------------\r\n//add work in user about\r\nexport const addWork = async (req,res) =>{\r\n    try{\r\n        const {userId} = req.body;\r\n        const {company,position,city,description,fromdate,todate}=req.body\r\n        var data ={_id: mongoose.Types.ObjectId(),company:company,position:position,city:city,description:description,fromdate:fromdate,todate:todate};\r\n\r\n        checkUserData(userId);\r\n        const userdata= await about.findOne({userId:userId}) \r\n        addData(userId,data,\"work\");\r\n\r\n        res.status(201).send({\r\n            success:true,\r\n            message:'work add successfully',\r\n        })\r\n    }\r\n    catch(err){\r\n        res.status(401).send({\r\n            success:false,message:err.message\r\n        });\r\n    }\r\n}\r\n//update work in user about\r\nexport const updateWork = async (req,res) =>{\r\n    try{\r\n        const {userId,dataId} = req.body;\r\n        const {company,position,city,description,fromdate,todate}=req.body\r\n        var data ={'work.$.company':company,'work.$.position':position,'work.$.city':city,'work.$.description':description,'work.$.fromdate':fromdate,'work.$.todate':todate};\r\n        updateData(userId,dataId,data,'work._id')\r\n        res.status(201).send({\r\n            success:true,\r\n            message:'update work successfully',\r\n        })\r\n    }\r\n    catch(err){\r\n        res.status(401).send({\r\n            success:false,message:err.message\r\n        });\r\n    }\r\n}\r\n//delete work in user about\r\nexport const deleteWork = async (req,res) =>{\r\n    try{\r\n        const {userId,dataId} = req.body;\r\n        deleteData(userId,\"work\",dataId)\r\n        res.status(201).send({\r\n            success:true,\r\n            message:'delete work successfully',\r\n        })\r\n    }\r\n    catch(err){\r\n        res.status(401).send({\r\n            success:false,message:err.message\r\n        });\r\n    }\r\n}\r\n//------------------------------------------------high school---------------------------------------------------------------------------------\r\n//add HighSchool in user about\r\nexport const addHighSchool = async (req,res) =>{\r\n    try{\r\n        const {userId} = req.body;\r\n        const {name,description,fromdate,todate}=req.body\r\n        var data ={_id: mongoose.Types.ObjectId(),name:name,description:description,fromdate:fromdate,todate:todate};\r\n\r\n        checkUserData(userId);\r\n        const userdata= await about.findOne({userId:userId}) \r\n        addData(userId,data,\"highSchool\");\r\n\r\n        res.status(201).send({\r\n            success:true,\r\n            message:'highSchool data add successfully',\r\n        })\r\n    }\r\n    catch(err){\r\n        res.status(401).send({\r\n            success:false,message:err.message\r\n        });\r\n    }\r\n}\r\n//update work in user about\r\nexport const updateHighSchool = async (req,res) =>{\r\n    try{\r\n        const {userId,dataId} = req.body;\r\n        const {name,description,fromdate,todate}=req.body\r\n        var data ={'highSchool.$.name':name,'highSchool.$.description':description,'highSchool.$.fromdate':fromdate,'highSchool.$.todate':todate};\r\n        updateData(userId,dataId,data,'highSchool._id')\r\n        res.status(201).send({\r\n            success:true,\r\n            message:'update highSchool data successfully',\r\n        })\r\n    }\r\n    catch(err){\r\n        res.status(401).send({\r\n            success:false,message:err.message\r\n        });\r\n    }\r\n}\r\n//delete work in user about\r\nexport const deleteHighSchool = async (req,res) =>{\r\n    try{\r\n        const {userId,dataId} = req.body;\r\n        deleteData(userId,\"highSchool\",dataId)\r\n        res.status(201).send({\r\n            success:true,\r\n            message:'delete highSchool data successfully',\r\n        })\r\n    }\r\n    catch(err){\r\n        res.status(401).send({\r\n            success:false,message:err.message\r\n        });\r\n    }\r\n}\r\n\r\n//-------------------------------------------------------single String add -----------------------------------------------------------------------\r\nasync function aboutMe(userid,key,value){\r\n    console.log(key);\r\n    await about.findOneAndUpdate({userId:userid},{\r\n        $set:{[key] : value} \r\n    })\r\n}\r\nasync function deleteAboutMe(userid,key,value){\r\n    console.log(key);\r\n    await about.findOneAndUpdate({userId:userid},{\r\n        $unset:{[key] : value} \r\n    })\r\n}\r\n\r\nexport const updateAbout = async(req,res) =>{\r\n    try{\r\n        const decoded = await jwt.verify(req.headers.token, configKey.secrets.JWT_SECRET);\r\n        const user = await Users.findOne({emailId:decoded.sub})\r\n        const userId = user._id;\r\n        console.log(user._id);\r\n        const info = req.body;\r\n        console.log(userId);\r\n        var key=Object.keys(info)[0]\r\n        var value=Object.values(info)[0]\r\n        console.log(key,value);\r\n\r\n        aboutMe(userId,key,value);\r\n\r\n        res.status(201).send({\r\n            success:true,\r\n            message:'data update successsully'\r\n        })\r\n    }\r\n    catch(err){\r\n        res.status(401).send({\r\n            success:false,\r\n            message:err.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteAbout = async(req,res) =>{\r\n    try{\r\n        const decoded = await jwt.verify(req.headers.token, configKey.secrets.JWT_SECRET);\r\n        const user = await Users.findOne({emailId:decoded.sub})\r\n        const userId = user._id;\r\n        const info = req.body;\r\n        console.log(userId);\r\n        var key=Object.keys(info)[0]\r\n        var value=Object.values(info)[0]\r\n        deleteAboutMe(userId,key,key,value);\r\n        res.status(201).send({\r\n            success:true,\r\n            message:'data update successsully'\r\n        })\r\n    }\r\n    catch(err){\r\n        res.status(401).send({\r\n            success:false,\r\n            message:err.message\r\n        })\r\n    }\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1596627486263
  },
  "{\"sourceRoot\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"filename\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\harsh\\social-share-backend-nikund",
      "filename": "D:\\harsh\\social-share-backend-nikund\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\harsh\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\harsh\\social-share-backend-nikund\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\harsh\\social-share-backend-nikund\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _http = _interopRequireDefault(require(\"http\"));\n\nvar _server = _interopRequireDefault(require(\"./server\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar server = null;\n\nif (process.env.NODE_ENV === \"development\") {\n  server = _http[\"default\"].createServer(_server[\"default\"]);\n} else {\n  console.log(\"This is the production environment\");\n  server = _server[\"default\"];\n}\n\n_server[\"default\"].get('/', function (req, res) {\n  res.send('welcome');\n});\n\nvar PORT = process.env.PORT || 8000;\nserver.listen(PORT, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n  return regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          try {\n            console.log(\"Server listening on port \".concat(PORT));\n          } catch (err) {\n            console.log(\"Server init error\", err);\n          }\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n})));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInNlcnZlciIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsImh0dHAiLCJjcmVhdGVTZXJ2ZXIiLCJhcHAiLCJjb25zb2xlIiwibG9nIiwiZ2V0IiwicmVxIiwicmVzIiwic2VuZCIsIlBPUlQiLCJsaXN0ZW4iLCJlcnIiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBRUE7Ozs7Ozs7O0FBRUEsSUFBSUEsTUFBTSxHQUFHLElBQWI7O0FBRUEsSUFBSUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFFBQVosS0FBeUIsYUFBN0IsRUFBNEM7QUFDeENILEVBQUFBLE1BQU0sR0FBR0ksaUJBQUtDLFlBQUwsQ0FBa0JDLGtCQUFsQixDQUFUO0FBQ0QsQ0FGSCxNQUVTO0FBQ0xDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLG9DQUFaO0FBQ0FSLEVBQUFBLE1BQU0sR0FBR00sa0JBQVQ7QUFDRDs7QUFFREEsbUJBQUlHLEdBQUosQ0FBUSxHQUFSLEVBQWEsVUFBQ0MsR0FBRCxFQUFLQyxHQUFMLEVBQWE7QUFDeEJBLEVBQUFBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTLFNBQVQ7QUFDRCxDQUZEOztBQUlGLElBQU1DLElBQUksR0FBR1osT0FBTyxDQUFDQyxHQUFSLENBQVlXLElBQVosSUFBb0IsSUFBakM7QUFFQWIsTUFBTSxDQUFDYyxNQUFQLENBQWNELElBQWQsdUVBQW9CO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDbEIsY0FBSTtBQUNGTixZQUFBQSxPQUFPLENBQUNDLEdBQVIsb0NBQXdDSyxJQUF4QztBQUNELFdBRkQsQ0FFRSxPQUFPRSxHQUFQLEVBQVk7QUFDWlIsWUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksbUJBQVosRUFBaUNPLEdBQWpDO0FBQ0Q7O0FBTGlCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLENBQXBCIiwic291cmNlUm9vdCI6IkQ6XFxoYXJzaFxcc29jaWFsLXNoYXJlLWJhY2tlbmQtbmlrdW5kXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgaHR0cCBmcm9tIFwiaHR0cFwiXG5cbmltcG9ydCBhcHAgZnJvbSBcIi4vc2VydmVyXCJcblxubGV0IHNlcnZlciA9IG51bGw7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJkZXZlbG9wbWVudFwiKSB7XG4gICAgc2VydmVyID0gaHR0cC5jcmVhdGVTZXJ2ZXIoYXBwKVxuICB9IGVsc2Uge1xuICAgIGNvbnNvbGUubG9nKFwiVGhpcyBpcyB0aGUgcHJvZHVjdGlvbiBlbnZpcm9ubWVudFwiKVxuICAgIHNlcnZlciA9IGFwcFxuICB9XG5cbiAgYXBwLmdldCgnLycsIChyZXEscmVzKSA9PiB7XG4gICAgcmVzLnNlbmQoJ3dlbGNvbWUnKTtcbiAgfSlcblxuY29uc3QgUE9SVCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgODAwMFxuXG5zZXJ2ZXIubGlzdGVuKFBPUlQsIGFzeW5jICgpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zb2xlLmxvZyhgU2VydmVyIGxpc3RlbmluZyBvbiBwb3J0ICR7UE9SVH1gKVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBjb25zb2xlLmxvZyhcIlNlcnZlciBpbml0IGVycm9yXCIsIGVycilcbiAgfVxufSlcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "server",
        "process",
        "env",
        "NODE_ENV",
        "http",
        "createServer",
        "app",
        "console",
        "log",
        "get",
        "req",
        "res",
        "send",
        "PORT",
        "listen",
        "err"
      ],
      "mappings": ";;AAAA;;AAEA;;;;;;;;AAEA,IAAIA,MAAM,GAAG,IAAb;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxCH,EAAAA,MAAM,GAAGI,iBAAKC,YAAL,CAAkBC,kBAAlB,CAAT;AACD,CAFH,MAES;AACLC,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACAR,EAAAA,MAAM,GAAGM,kBAAT;AACD;;AAEDA,mBAAIG,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAKC,GAAL,EAAa;AACxBA,EAAAA,GAAG,CAACC,IAAJ,CAAS,SAAT;AACD,CAFD;;AAIF,IAAMC,IAAI,GAAGZ,OAAO,CAACC,GAAR,CAAYW,IAAZ,IAAoB,IAAjC;AAEAb,MAAM,CAACc,MAAP,CAAcD,IAAd,uEAAoB;AAAA;AAAA;AAAA;AAAA;AAClB,cAAI;AACFN,YAAAA,OAAO,CAACC,GAAR,oCAAwCK,IAAxC;AACD,WAFD,CAEE,OAAOE,GAAP,EAAY;AACZR,YAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCO,GAAjC;AACD;;AALiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB",
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\",
      "sourcesContent": [
        "import http from \"http\"\n\nimport app from \"./server\"\n\nlet server = null;\n\nif (process.env.NODE_ENV === \"development\") {\n    server = http.createServer(app)\n  } else {\n    console.log(\"This is the production environment\")\n    server = app\n  }\n\n  app.get('/', (req,res) => {\n    res.send('welcome');\n  })\n\nconst PORT = process.env.PORT || 8000\n\nserver.listen(PORT, async () => {\n  try {\n    console.log(`Server listening on port ${PORT}`)\n  } catch (err) {\n    console.log(\"Server init error\", err)\n  }\n})\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1594986598000
  },
  "{\"sourceRoot\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"filename\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\harsh\\social-share-backend-nikund",
      "filename": "D:\\harsh\\social-share-backend-nikund\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\harsh\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\harsh\\social-share-backend-nikund\\server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\harsh\\social-share-backend-nikund\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _db = require(\"./db\");\n\nvar _middlewares = _interopRequireDefault(require(\"./middlewares\"));\n\nvar _aurthorization = require(\"./aurthorization\");\n\nvar _restRouter = require(\"./api/restRouter\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\n\nrequire(\"dotenv\").config();\n\n(0, _middlewares[\"default\"])(app);\n(0, _db.connect)();\napp.use((0, _cors[\"default\"])());\napp.use('/auth', function (req, res, next) {\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  res.header(\"Access-Control-Allow-Methods\", \"POST, GET, PUT, DELETE, OPTIONS\");\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Authorization, Accept, Access-Control-Al\" + \"low-Methods\");\n  res.header(\"X-Frame-Options\", \"deny\");\n  res.header(\"X-Content-Type-Options\", \"nosniff\");\n  next();\n});\napp.use('/auth', _aurthorization.authRouter);\napp.use(_express[\"default\"][\"static\"]('public'));\napp.use('/api', function (req, res, next) {\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  res.header(\"Access-Control-Allow-Methods\", \"POST, GET, PUT, DELETE, OPTIONS\");\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Authorization, Accept, Access-Control-Al\" + \"low-Methods\");\n  res.header(\"X-Frame-Options\", \"deny\");\n  res.header(\"X-Content-Type-Options\", \"nosniff\");\n  next();\n});\napp.use('/api', _restRouter.restRouter);\nvar _default = app;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJyZXF1aXJlIiwiY29uZmlnIiwidXNlIiwicmVxIiwicmVzIiwibmV4dCIsImhlYWRlciIsImF1dGhSb3V0ZXIiLCJleHByZXNzIiwicmVzdFJvdXRlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBQ0EsSUFBTUEsR0FBRyxHQUFHLDBCQUFaOztBQUVBQyxPQUFPLENBQUMsUUFBRCxDQUFQLENBQWtCQyxNQUFsQjs7QUFFQSw2QkFBY0YsR0FBZDtBQUVBO0FBRUFBLEdBQUcsQ0FBQ0csR0FBSixDQUFRLHVCQUFSO0FBQ0FILEdBQUcsQ0FBQ0csR0FBSixDQUFRLE9BQVIsRUFBZ0IsVUFBQ0MsR0FBRCxFQUFLQyxHQUFMLEVBQVNDLElBQVQsRUFBZ0I7QUFDOUJELEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXLDZCQUFYLEVBQTBDLEdBQTFDO0FBQ0FGLEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXLDhCQUFYLEVBQTJDLGlDQUEzQztBQUNBRixFQUFBQSxHQUFHLENBQUNFLE1BQUosQ0FDSSw4QkFESixFQUVJLHFGQUNFLGFBSE47QUFLQUYsRUFBQUEsR0FBRyxDQUFDRSxNQUFKLENBQVcsaUJBQVgsRUFBOEIsTUFBOUI7QUFDQUYsRUFBQUEsR0FBRyxDQUFDRSxNQUFKLENBQVcsd0JBQVgsRUFBcUMsU0FBckM7QUFDQUQsRUFBQUEsSUFBSTtBQUNMLENBWEQ7QUFZQU4sR0FBRyxDQUFDRyxHQUFKLENBQVEsT0FBUixFQUFnQkssMEJBQWhCO0FBQ0FSLEdBQUcsQ0FBQ0csR0FBSixDQUFRTSw4QkFBZSxRQUFmLENBQVI7QUFDQVQsR0FBRyxDQUFDRyxHQUFKLENBQVEsTUFBUixFQUFlLFVBQUNDLEdBQUQsRUFBS0MsR0FBTCxFQUFTQyxJQUFULEVBQWdCO0FBQzdCRCxFQUFBQSxHQUFHLENBQUNFLE1BQUosQ0FBVyw2QkFBWCxFQUEwQyxHQUExQztBQUNBRixFQUFBQSxHQUFHLENBQUNFLE1BQUosQ0FBVyw4QkFBWCxFQUEyQyxpQ0FBM0M7QUFDQUYsRUFBQUEsR0FBRyxDQUFDRSxNQUFKLENBQ0ksOEJBREosRUFFSSxxRkFDRSxhQUhOO0FBS0FGLEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXLGlCQUFYLEVBQThCLE1BQTlCO0FBQ0FGLEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXLHdCQUFYLEVBQXFDLFNBQXJDO0FBQ0FELEVBQUFBLElBQUk7QUFDTCxDQVhEO0FBWUFOLEdBQUcsQ0FBQ0csR0FBSixDQUFRLE1BQVIsRUFBZU8sc0JBQWY7ZUFDZVYsRyIsInNvdXJjZVJvb3QiOiJEOlxcaGFyc2hcXHNvY2lhbC1zaGFyZS1iYWNrZW5kLW5pa3VuZFxcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSBcImV4cHJlc3NcIjtcbmltcG9ydCBjb3JzIGZyb20gXCJjb3JzXCI7XG5pbXBvcnQge2Nvbm5lY3R9IGZyb20gJy4vZGInXG5pbXBvcnQgc2V0dXBNaWRkd2FyZSBmcm9tICcuL21pZGRsZXdhcmVzJ1xuaW1wb3J0IHthdXRoUm91dGVyfSBmcm9tICcuL2F1cnRob3JpemF0aW9uJ1xuaW1wb3J0IHtyZXN0Um91dGVyfSBmcm9tICcuL2FwaS9yZXN0Um91dGVyJ1xuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG5yZXF1aXJlKFwiZG90ZW52XCIpLmNvbmZpZygpXG5cbnNldHVwTWlkZHdhcmUoYXBwKVxuXG5jb25uZWN0KCk7XG5cbmFwcC51c2UoY29ycygpKTtcbmFwcC51c2UoJy9hdXRoJywocmVxLHJlcyxuZXh0KT0+e1xuICByZXMuaGVhZGVyKFwiQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luXCIsIFwiKlwiKVxuICByZXMuaGVhZGVyKFwiQWNjZXNzLUNvbnRyb2wtQWxsb3ctTWV0aG9kc1wiLCBcIlBPU1QsIEdFVCwgUFVULCBERUxFVEUsIE9QVElPTlNcIilcbiAgcmVzLmhlYWRlcihcbiAgICAgIFwiQWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVyc1wiLFxuICAgICAgXCJPcmlnaW4sIFgtUmVxdWVzdGVkLVdpdGgsIENvbnRlbnQtVHlwZSwgQXV0aG9yaXphdGlvbiwgQWNjZXB0LCBBY2Nlc3MtQ29udHJvbC1BbFwiICtcbiAgICAgICAgXCJsb3ctTWV0aG9kc1wiXG4gICAgKVxuICByZXMuaGVhZGVyKFwiWC1GcmFtZS1PcHRpb25zXCIsIFwiZGVueVwiKVxuICByZXMuaGVhZGVyKFwiWC1Db250ZW50LVR5cGUtT3B0aW9uc1wiLCBcIm5vc25pZmZcIilcbiAgbmV4dCgpO1xufSlcbmFwcC51c2UoJy9hdXRoJyxhdXRoUm91dGVyKVxuYXBwLnVzZShleHByZXNzLnN0YXRpYygncHVibGljJykpXG5hcHAudXNlKCcvYXBpJywocmVxLHJlcyxuZXh0KT0+e1xuICByZXMuaGVhZGVyKFwiQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luXCIsIFwiKlwiKVxuICByZXMuaGVhZGVyKFwiQWNjZXNzLUNvbnRyb2wtQWxsb3ctTWV0aG9kc1wiLCBcIlBPU1QsIEdFVCwgUFVULCBERUxFVEUsIE9QVElPTlNcIilcbiAgcmVzLmhlYWRlcihcbiAgICAgIFwiQWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVyc1wiLFxuICAgICAgXCJPcmlnaW4sIFgtUmVxdWVzdGVkLVdpdGgsIENvbnRlbnQtVHlwZSwgQXV0aG9yaXphdGlvbiwgQWNjZXB0LCBBY2Nlc3MtQ29udHJvbC1BbFwiICtcbiAgICAgICAgXCJsb3ctTWV0aG9kc1wiXG4gICAgKVxuICByZXMuaGVhZGVyKFwiWC1GcmFtZS1PcHRpb25zXCIsIFwiZGVueVwiKVxuICByZXMuaGVhZGVyKFwiWC1Db250ZW50LVR5cGUtT3B0aW9uc1wiLCBcIm5vc25pZmZcIilcbiAgbmV4dCgpO1xufSlcbmFwcC51c2UoJy9hcGknLHJlc3RSb3V0ZXIpXG5leHBvcnQgZGVmYXVsdCBhcHA7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "require",
        "config",
        "use",
        "req",
        "res",
        "next",
        "header",
        "authRouter",
        "express",
        "restRouter"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AACA,IAAMA,GAAG,GAAG,0BAAZ;;AAEAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,6BAAcF,GAAd;AAEA;AAEAA,GAAG,CAACG,GAAJ,CAAQ,uBAAR;AACAH,GAAG,CAACG,GAAJ,CAAQ,OAAR,EAAgB,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAgB;AAC9BD,EAAAA,GAAG,CAACE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA2C,iCAA3C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CACI,8BADJ,EAEI,qFACE,aAHN;AAKAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,iBAAX,EAA8B,MAA9B;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,wBAAX,EAAqC,SAArC;AACAD,EAAAA,IAAI;AACL,CAXD;AAYAN,GAAG,CAACG,GAAJ,CAAQ,OAAR,EAAgBK,0BAAhB;AACAR,GAAG,CAACG,GAAJ,CAAQM,8BAAe,QAAf,CAAR;AACAT,GAAG,CAACG,GAAJ,CAAQ,MAAR,EAAe,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAgB;AAC7BD,EAAAA,GAAG,CAACE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA2C,iCAA3C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CACI,8BADJ,EAEI,qFACE,aAHN;AAKAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,iBAAX,EAA8B,MAA9B;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,wBAAX,EAAqC,SAArC;AACAD,EAAAA,IAAI;AACL,CAXD;AAYAN,GAAG,CAACG,GAAJ,CAAQ,MAAR,EAAeO,sBAAf;eACeV,G",
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\",
      "sourcesContent": [
        "import express from \"express\";\nimport cors from \"cors\";\nimport {connect} from './db'\nimport setupMiddware from './middlewares'\nimport {authRouter} from './aurthorization'\nimport {restRouter} from './api/restRouter'\nconst app = express();\n\nrequire(\"dotenv\").config()\n\nsetupMiddware(app)\n\nconnect();\n\napp.use(cors());\napp.use('/auth',(req,res,next)=>{\n  res.header(\"Access-Control-Allow-Origin\", \"*\")\n  res.header(\"Access-Control-Allow-Methods\", \"POST, GET, PUT, DELETE, OPTIONS\")\n  res.header(\n      \"Access-Control-Allow-Headers\",\n      \"Origin, X-Requested-With, Content-Type, Authorization, Accept, Access-Control-Al\" +\n        \"low-Methods\"\n    )\n  res.header(\"X-Frame-Options\", \"deny\")\n  res.header(\"X-Content-Type-Options\", \"nosniff\")\n  next();\n})\napp.use('/auth',authRouter)\napp.use(express.static('public'))\napp.use('/api',(req,res,next)=>{\n  res.header(\"Access-Control-Allow-Origin\", \"*\")\n  res.header(\"Access-Control-Allow-Methods\", \"POST, GET, PUT, DELETE, OPTIONS\")\n  res.header(\n      \"Access-Control-Allow-Headers\",\n      \"Origin, X-Requested-With, Content-Type, Authorization, Accept, Access-Control-Al\" +\n        \"low-Methods\"\n    )\n  res.header(\"X-Frame-Options\", \"deny\")\n  res.header(\"X-Content-Type-Options\", \"nosniff\")\n  next();\n})\napp.use('/api',restRouter)\nexport default app;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1594986598000
  },
  "{\"sourceRoot\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"filename\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\harsh\\social-share-backend-nikund",
      "filename": "D:\\harsh\\social-share-backend-nikund\\db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\harsh\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\harsh\\social-share-backend-nikund\\db.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\harsh\\social-share-backend-nikund\\db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.connect = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _mongooseTimestamp = _interopRequireDefault(require(\"mongoose-timestamp\"));\n\nvar _config = _interopRequireDefault(require(\"./config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_mongoose[\"default\"].Promise = global.Promise;\n\n_mongoose[\"default\"].plugin(_mongooseTimestamp[\"default\"]);\n\nvar connect = function connect() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _config[\"default\"];\n\n  _mongoose[\"default\"].set(\"useCreateIndex\", true);\n\n  _mongoose[\"default\"].set(\"useNewUrlParser\", true);\n\n  _mongoose[\"default\"].set(\"useFindAndModify\", false);\n\n  _mongoose[\"default\"].connect(_config[\"default\"].db.url, {\n    useUnifiedTopology: true,\n    useNewUrlParser: true\n  }).then(function () {\n    console.log(\"db connected\");\n  })[\"catch\"](function (err) {\n    console.log(err);\n  });\n};\n\nexports.connect = connect;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwiUHJvbWlzZSIsImdsb2JhbCIsInBsdWdpbiIsInRpbWVzdGFtcHMiLCJjb25uZWN0IiwiY29uZmlnIiwiYXBwQ29uZmlnIiwic2V0IiwiZGIiLCJ1cmwiLCJ1c2VVbmlmaWVkVG9wb2xvZ3kiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ0aGVuIiwiY29uc29sZSIsImxvZyIsImVyciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOzs7O0FBRUFBLHFCQUFTQyxPQUFULEdBQW1CQyxNQUFNLENBQUNELE9BQTFCOztBQUNBRCxxQkFBU0csTUFBVCxDQUFnQkMsNkJBQWhCOztBQUVPLElBQU1DLE9BQU8sR0FBRyxTQUFWQSxPQUFVLEdBQXdCO0FBQUEsTUFBdkJDLE1BQXVCLHVFQUFkQyxrQkFBYzs7QUFDM0NQLHVCQUFTUSxHQUFULENBQWEsZ0JBQWIsRUFBK0IsSUFBL0I7O0FBQ0FSLHVCQUFTUSxHQUFULENBQWEsaUJBQWIsRUFBZ0MsSUFBaEM7O0FBQ0FSLHVCQUFTUSxHQUFULENBQWEsa0JBQWIsRUFBaUMsS0FBakM7O0FBQ0FSLHVCQUFTSyxPQUFULENBQ0VFLG1CQUFVRSxFQUFWLENBQWFDLEdBRGYsRUFFRTtBQUFFQyxJQUFBQSxrQkFBa0IsRUFBRSxJQUF0QjtBQUNFQyxJQUFBQSxlQUFlLEVBQUU7QUFEbkIsR0FGRixFQUtFQyxJQUxGLENBS08sWUFBSTtBQUFDQyxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxjQUFaO0FBQTRCLEdBTHhDLFdBTU8sVUFBQ0MsR0FBRCxFQUFPO0FBQUNGLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxHQUFaO0FBQWlCLEdBTmhDO0FBUUQsQ0FaSSIsInNvdXJjZVJvb3QiOiJEOlxcaGFyc2hcXHNvY2lhbC1zaGFyZS1iYWNrZW5kLW5pa3VuZFxcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJ1xuaW1wb3J0IHRpbWVzdGFtcHMgZnJvbSAnbW9uZ29vc2UtdGltZXN0YW1wJ1xuaW1wb3J0IGFwcENvbmZpZyBmcm9tIFwiLi9jb25maWdcIjtcblxubW9uZ29vc2UuUHJvbWlzZSA9IGdsb2JhbC5Qcm9taXNlO1xubW9uZ29vc2UucGx1Z2luKHRpbWVzdGFtcHMpO1xuXG5leHBvcnQgY29uc3QgY29ubmVjdCA9IChjb25maWcgPSBhcHBDb25maWcpID0+IHtcbiAgICBtb25nb29zZS5zZXQoXCJ1c2VDcmVhdGVJbmRleFwiLCB0cnVlKTtcbiAgICBtb25nb29zZS5zZXQoXCJ1c2VOZXdVcmxQYXJzZXJcIiwgdHJ1ZSk7XG4gICAgbW9uZ29vc2Uuc2V0KFwidXNlRmluZEFuZE1vZGlmeVwiLCBmYWxzZSk7XG4gICAgbW9uZ29vc2UuY29ubmVjdChcbiAgICAgIGFwcENvbmZpZy5kYi51cmwsXG4gICAgICB7IHVzZVVuaWZpZWRUb3BvbG9neTogdHJ1ZSxcbiAgICAgICAgdXNlTmV3VXJsUGFyc2VyOiB0cnVlXG4gICAgICB9XG4gICAgKS50aGVuKCgpPT57Y29uc29sZS5sb2coXCJkYiBjb25uZWN0ZWRcIil9KVxuICAgIC5jYXRjaCgoZXJyKT0+e2NvbnNvbGUubG9nKGVycil9XG4gICAgKVxuICB9OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "mongoose",
        "Promise",
        "global",
        "plugin",
        "timestamps",
        "connect",
        "config",
        "appConfig",
        "set",
        "db",
        "url",
        "useUnifiedTopology",
        "useNewUrlParser",
        "then",
        "console",
        "log",
        "err"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAEAA,qBAASC,OAAT,GAAmBC,MAAM,CAACD,OAA1B;;AACAD,qBAASG,MAAT,CAAgBC,6BAAhB;;AAEO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAwB;AAAA,MAAvBC,MAAuB,uEAAdC,kBAAc;;AAC3CP,uBAASQ,GAAT,CAAa,gBAAb,EAA+B,IAA/B;;AACAR,uBAASQ,GAAT,CAAa,iBAAb,EAAgC,IAAhC;;AACAR,uBAASQ,GAAT,CAAa,kBAAb,EAAiC,KAAjC;;AACAR,uBAASK,OAAT,CACEE,mBAAUE,EAAV,CAAaC,GADf,EAEE;AAAEC,IAAAA,kBAAkB,EAAE,IAAtB;AACEC,IAAAA,eAAe,EAAE;AADnB,GAFF,EAKEC,IALF,CAKO,YAAI;AAACC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAA4B,GALxC,WAMO,UAACC,GAAD,EAAO;AAACF,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AAAiB,GANhC;AAQD,CAZI",
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\",
      "sourcesContent": [
        "import mongoose from 'mongoose'\nimport timestamps from 'mongoose-timestamp'\nimport appConfig from \"./config\";\n\nmongoose.Promise = global.Promise;\nmongoose.plugin(timestamps);\n\nexport const connect = (config = appConfig) => {\n    mongoose.set(\"useCreateIndex\", true);\n    mongoose.set(\"useNewUrlParser\", true);\n    mongoose.set(\"useFindAndModify\", false);\n    mongoose.connect(\n      appConfig.db.url,\n      { useUnifiedTopology: true,\n        useNewUrlParser: true\n      }\n    ).then(()=>{console.log(\"db connected\")})\n    .catch((err)=>{console.log(err)}\n    )\n  };"
      ]
    },
    "sourceType": "script",
    "mtime": 1594986598000
  },
  "{\"sourceRoot\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\config\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"filename\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\config\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\config\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\harsh\\social-share-backend-nikund",
      "filename": "D:\\harsh\\social-share-backend-nikund\\config\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\harsh\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\harsh\\social-share-backend-nikund\\config\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\harsh\\social-share-backend-nikund\\config\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\config\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nrequire(\"dotenv\").config();\n\nvar config = {\n  expireTime: process.env.JWTEXPIRE,\n  secrets: {\n    JWT_SECRET: process.env.JWTSECRET\n  },\n  db: {\n    url: process.env.DBURL\n  },\n  port: process.env.PORT\n};\nvar _default = config;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJjb25maWciLCJleHBpcmVUaW1lIiwicHJvY2VzcyIsImVudiIsIkpXVEVYUElSRSIsInNlY3JldHMiLCJKV1RfU0VDUkVUIiwiSldUU0VDUkVUIiwiZGIiLCJ1cmwiLCJEQlVSTCIsInBvcnQiLCJQT1JUIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUFBLE9BQU8sQ0FBQyxRQUFELENBQVAsQ0FBa0JDLE1BQWxCOztBQUNBLElBQU1BLE1BQU0sR0FBRztBQUNYQyxFQUFBQSxVQUFVLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxTQURiO0FBRVhDLEVBQUFBLE9BQU8sRUFBRTtBQUNQQyxJQUFBQSxVQUFVLEVBQUVKLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSTtBQURqQixHQUZFO0FBS1hDLEVBQUFBLEVBQUUsRUFBRTtBQUNGQyxJQUFBQSxHQUFHLEVBQUVQLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTztBQURmLEdBTE87QUFRWEMsRUFBQUEsSUFBSSxFQUFFVCxPQUFPLENBQUNDLEdBQVIsQ0FBWVM7QUFSUCxDQUFmO2VBV2lCWixNIiwic291cmNlUm9vdCI6IkQ6XFxoYXJzaFxcc29jaWFsLXNoYXJlLWJhY2tlbmQtbmlrdW5kXFxjb25maWdcXCIsInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoXCJkb3RlbnZcIikuY29uZmlnKClcbmNvbnN0IGNvbmZpZyA9IHtcbiAgICBleHBpcmVUaW1lOiBwcm9jZXNzLmVudi5KV1RFWFBJUkUsXG4gICAgc2VjcmV0czoge1xuICAgICAgSldUX1NFQ1JFVDogcHJvY2Vzcy5lbnYuSldUU0VDUkVUXG4gICAgfSxcbiAgICBkYjoge1xuICAgICAgdXJsOiBwcm9jZXNzLmVudi5EQlVSTFxuICAgIH0sXG4gICAgcG9ydDogcHJvY2Vzcy5lbnYuUE9SVCxcbiAgfVxuICBcbiAgZXhwb3J0IGRlZmF1bHQgY29uZmlnICJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "require",
        "config",
        "expireTime",
        "process",
        "env",
        "JWTEXPIRE",
        "secrets",
        "JWT_SECRET",
        "JWTSECRET",
        "db",
        "url",
        "DBURL",
        "port",
        "PORT"
      ],
      "mappings": ";;;;;;;AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,IAAMA,MAAM,GAAG;AACXC,EAAAA,UAAU,EAAEC,OAAO,CAACC,GAAR,CAAYC,SADb;AAEXC,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EAAEJ,OAAO,CAACC,GAAR,CAAYI;AADjB,GAFE;AAKXC,EAAAA,EAAE,EAAE;AACFC,IAAAA,GAAG,EAAEP,OAAO,CAACC,GAAR,CAAYO;AADf,GALO;AAQXC,EAAAA,IAAI,EAAET,OAAO,CAACC,GAAR,CAAYS;AARP,CAAf;eAWiBZ,M",
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\config\\",
      "sourcesContent": [
        "require(\"dotenv\").config()\nconst config = {\n    expireTime: process.env.JWTEXPIRE,\n    secrets: {\n      JWT_SECRET: process.env.JWTSECRET\n    },\n    db: {\n      url: process.env.DBURL\n    },\n    port: process.env.PORT,\n  }\n  \n  export default config "
      ]
    },
    "sourceType": "script",
    "mtime": 1594986606000
  },
  "{\"sourceRoot\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\middlewares\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"filename\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\middlewares\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\middlewares\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\harsh\\social-share-backend-nikund",
      "filename": "D:\\harsh\\social-share-backend-nikund\\middlewares\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\harsh\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\harsh\\social-share-backend-nikund\\middlewares\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\harsh\\social-share-backend-nikund\\middlewares\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\middlewares\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _helmet = _interopRequireDefault(require(\"helmet\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar setGlobelMiddleware = function setGlobelMiddleware(app) {\n  app.use(_bodyParser[\"default\"].urlencoded({\n    limit: \"50mb\",\n    extended: true\n  }));\n  app.use(_bodyParser[\"default\"].json({\n    limit: \"50mb\"\n  }));\n  app.use(_bodyParser[\"default\"].text({\n    type: \"application/x-ndjson\"\n  }));\n  app.use((0, _helmet[\"default\"])());\n  app.use(_helmet[\"default\"].xssFilter());\n  app.disable(\"x-powered-by\");\n  var sixtyDaysInSeconds = 5184000;\n  app.use(_helmet[\"default\"].hsts({\n    maxAge: sixtyDaysInSeconds\n  }));\n};\n\nvar _default = setGlobelMiddleware;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInNldEdsb2JlbE1pZGRsZXdhcmUiLCJhcHAiLCJ1c2UiLCJib2R5UGFyc2VyIiwidXJsZW5jb2RlZCIsImxpbWl0IiwiZXh0ZW5kZWQiLCJqc29uIiwidGV4dCIsInR5cGUiLCJoZWxtZXQiLCJ4c3NGaWx0ZXIiLCJkaXNhYmxlIiwic2l4dHlEYXlzSW5TZWNvbmRzIiwiaHN0cyIsIm1heEFnZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7O0FBRUEsSUFBTUEsbUJBQW1CLEdBQUcsU0FBdEJBLG1CQUFzQixDQUFBQyxHQUFHLEVBQUc7QUFDOUJBLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRQyx1QkFBV0MsVUFBWCxDQUFzQjtBQUFFQyxJQUFBQSxLQUFLLEVBQUUsTUFBVDtBQUFpQkMsSUFBQUEsUUFBUSxFQUFFO0FBQTNCLEdBQXRCLENBQVI7QUFDQUwsRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVFDLHVCQUFXSSxJQUFYLENBQWdCO0FBQUVGLElBQUFBLEtBQUssRUFBRTtBQUFULEdBQWhCLENBQVI7QUFDQUosRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVFDLHVCQUFXSyxJQUFYLENBQWdCO0FBQUVDLElBQUFBLElBQUksRUFBRTtBQUFSLEdBQWhCLENBQVI7QUFDQVIsRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEseUJBQVI7QUFDQUQsRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVFRLG1CQUFPQyxTQUFQLEVBQVI7QUFDQVYsRUFBQUEsR0FBRyxDQUFDVyxPQUFKLENBQVksY0FBWjtBQUVBLE1BQU1DLGtCQUFrQixHQUFHLE9BQTNCO0FBQ0FaLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUNFUSxtQkFBT0ksSUFBUCxDQUFZO0FBQ1ZDLElBQUFBLE1BQU0sRUFBRUY7QUFERSxHQUFaLENBREY7QUFLRCxDQWRIOztlQWdCZWIsbUIiLCJzb3VyY2VSb290IjoiRDpcXGhhcnNoXFxzb2NpYWwtc2hhcmUtYmFja2VuZC1uaWt1bmRcXG1pZGRsZXdhcmVzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcidcbmltcG9ydCBoZWxtZXQgZnJvbSAnaGVsbWV0J1xuXG5jb25zdCBzZXRHbG9iZWxNaWRkbGV3YXJlID0gYXBwID0+e1xuICAgIGFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgbGltaXQ6IFwiNTBtYlwiLCBleHRlbmRlZDogdHJ1ZSB9KSk7XG4gICAgYXBwLnVzZShib2R5UGFyc2VyLmpzb24oeyBsaW1pdDogXCI1MG1iXCIgfSkpO1xuICAgIGFwcC51c2UoYm9keVBhcnNlci50ZXh0KHsgdHlwZTogXCJhcHBsaWNhdGlvbi94LW5kanNvblwiIH0pKTtcbiAgICBhcHAudXNlKGhlbG1ldCgpKTtcbiAgICBhcHAudXNlKGhlbG1ldC54c3NGaWx0ZXIoKSlcbiAgICBhcHAuZGlzYWJsZShcIngtcG93ZXJlZC1ieVwiKTtcblxuICAgIGNvbnN0IHNpeHR5RGF5c0luU2Vjb25kcyA9IDUxODQwMDA7XG4gICAgYXBwLnVzZShcbiAgICAgIGhlbG1ldC5oc3RzKHtcbiAgICAgICAgbWF4QWdlOiBzaXh0eURheXNJblNlY29uZHNcbiAgICAgIH0pXG4gICAgKTtcbiAgfTtcblxuZXhwb3J0IGRlZmF1bHQgc2V0R2xvYmVsTWlkZGxld2FyZTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "setGlobelMiddleware",
        "app",
        "use",
        "bodyParser",
        "urlencoded",
        "limit",
        "extended",
        "json",
        "text",
        "type",
        "helmet",
        "xssFilter",
        "disable",
        "sixtyDaysInSeconds",
        "hsts",
        "maxAge"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,GAAG,EAAG;AAC9BA,EAAAA,GAAG,CAACC,GAAJ,CAAQC,uBAAWC,UAAX,CAAsB;AAAEC,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,QAAQ,EAAE;AAA3B,GAAtB,CAAR;AACAL,EAAAA,GAAG,CAACC,GAAJ,CAAQC,uBAAWI,IAAX,CAAgB;AAAEF,IAAAA,KAAK,EAAE;AAAT,GAAhB,CAAR;AACAJ,EAAAA,GAAG,CAACC,GAAJ,CAAQC,uBAAWK,IAAX,CAAgB;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAhB,CAAR;AACAR,EAAAA,GAAG,CAACC,GAAJ,CAAQ,yBAAR;AACAD,EAAAA,GAAG,CAACC,GAAJ,CAAQQ,mBAAOC,SAAP,EAAR;AACAV,EAAAA,GAAG,CAACW,OAAJ,CAAY,cAAZ;AAEA,MAAMC,kBAAkB,GAAG,OAA3B;AACAZ,EAAAA,GAAG,CAACC,GAAJ,CACEQ,mBAAOI,IAAP,CAAY;AACVC,IAAAA,MAAM,EAAEF;AADE,GAAZ,CADF;AAKD,CAdH;;eAgBeb,mB",
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\middlewares\\",
      "sourcesContent": [
        "import bodyParser from 'body-parser'\nimport helmet from 'helmet'\n\nconst setGlobelMiddleware = app =>{\n    app.use(bodyParser.urlencoded({ limit: \"50mb\", extended: true }));\n    app.use(bodyParser.json({ limit: \"50mb\" }));\n    app.use(bodyParser.text({ type: \"application/x-ndjson\" }));\n    app.use(helmet());\n    app.use(helmet.xssFilter())\n    app.disable(\"x-powered-by\");\n\n    const sixtyDaysInSeconds = 5184000;\n    app.use(\n      helmet.hsts({\n        maxAge: sixtyDaysInSeconds\n      })\n    );\n  };\n\nexport default setGlobelMiddleware;"
      ]
    },
    "sourceType": "script",
    "mtime": 1594986606000
  },
  "{\"sourceRoot\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\aurthorization\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"filename\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\aurthorization\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\aurthorization\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\harsh\\social-share-backend-nikund",
      "filename": "D:\\harsh\\social-share-backend-nikund\\aurthorization\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\harsh\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\harsh\\social-share-backend-nikund\\aurthorization\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\harsh\\social-share-backend-nikund\\aurthorization\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\aurthorization\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _auth = require(\"./auth.restRouter\");\n\nObject.keys(_auth).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _auth[key];\n    }\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSIsInNvdXJjZVJvb3QiOiJEOlxcaGFyc2hcXHNvY2lhbC1zaGFyZS1iYWNrZW5kLW5pa3VuZFxcYXVydGhvcml6YXRpb25cXCIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2F1dGgucmVzdFJvdXRlclwiOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [],
      "mappings": ";;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA",
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\aurthorization\\",
      "sourcesContent": [
        "export * from \"./auth.restRouter\";"
      ]
    },
    "sourceType": "script",
    "mtime": 1594986604000
  },
  "{\"sourceRoot\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\aurthorization\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"filename\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\aurthorization\\\\auth.restRouter.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\aurthorization\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\harsh\\social-share-backend-nikund",
      "filename": "D:\\harsh\\social-share-backend-nikund\\aurthorization\\auth.restRouter.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\harsh\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\harsh\\social-share-backend-nikund\\aurthorization\\auth.restRouter.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\harsh\\social-share-backend-nikund\\aurthorization\\auth.restRouter.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\aurthorization\\",
        "sourceFileName": "auth.restRouter.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.authRouter = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _auth = require(\"./auth.controller\");\n\nvar _auth2 = require(\"./auth.middleware\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar authRouter = _express[\"default\"].Router();\n\nexports.authRouter = authRouter;\nauthRouter.post('/signin', _auth2.requireSignIn, _auth.signin);\nauthRouter.post(\"/signup\", _auth.signup);\nauthRouter.post('/forgotpassword', _auth.forgotPassword);\nauthRouter.post(\"/resetpassword\", _auth.resetPassword);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGgucmVzdFJvdXRlci5qcyJdLCJuYW1lcyI6WyJhdXRoUm91dGVyIiwiZXhwcmVzcyIsIlJvdXRlciIsInBvc3QiLCJyZXF1aXJlU2lnbkluIiwic2lnbmluIiwic2lnbnVwIiwiZm9yZ290UGFzc3dvcmQiLCJyZXNldFBhc3N3b3JkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBTUE7Ozs7QUFDTyxJQUFNQSxVQUFVLEdBQUdDLG9CQUFRQyxNQUFSLEVBQW5COzs7QUFFUEYsVUFBVSxDQUFDRyxJQUFYLENBQWdCLFNBQWhCLEVBQTBCQyxvQkFBMUIsRUFBd0NDLFlBQXhDO0FBQ0FMLFVBQVUsQ0FBQ0csSUFBWCxDQUFnQixTQUFoQixFQUEyQkcsWUFBM0I7QUFDQU4sVUFBVSxDQUFDRyxJQUFYLENBQWdCLGlCQUFoQixFQUFrQ0ksb0JBQWxDO0FBQ0FQLFVBQVUsQ0FBQ0csSUFBWCxDQUFnQixnQkFBaEIsRUFBaUNLLG1CQUFqQyIsInNvdXJjZVJvb3QiOiJEOlxcaGFyc2hcXHNvY2lhbC1zaGFyZS1iYWNrZW5kLW5pa3VuZFxcYXVydGhvcml6YXRpb25cXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XG5pbXBvcnQge1xuICAgIHNpZ251cCxcbiAgICBzaWduaW4sXG4gICAgZm9yZ290UGFzc3dvcmQsXG4gICAgcmVzZXRQYXNzd29yZFxufSBmcm9tICcuL2F1dGguY29udHJvbGxlcidcbmltcG9ydCB7cmVxdWlyZVNpZ25Jbn0gZnJvbSAnLi9hdXRoLm1pZGRsZXdhcmUnXG5leHBvcnQgY29uc3QgYXV0aFJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbmF1dGhSb3V0ZXIucG9zdCgnL3NpZ25pbicscmVxdWlyZVNpZ25JbixzaWduaW4pO1xuYXV0aFJvdXRlci5wb3N0KFwiL3NpZ251cFwiLCBzaWdudXApO1xuYXV0aFJvdXRlci5wb3N0KCcvZm9yZ290cGFzc3dvcmQnLGZvcmdvdFBhc3N3b3JkKTtcbmF1dGhSb3V0ZXIucG9zdChcIi9yZXNldHBhc3N3b3JkXCIscmVzZXRQYXNzd29yZCk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "auth.restRouter.js"
      ],
      "names": [
        "authRouter",
        "express",
        "Router",
        "post",
        "requireSignIn",
        "signin",
        "signup",
        "forgotPassword",
        "resetPassword"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAMA;;;;AACO,IAAMA,UAAU,GAAGC,oBAAQC,MAAR,EAAnB;;;AAEPF,UAAU,CAACG,IAAX,CAAgB,SAAhB,EAA0BC,oBAA1B,EAAwCC,YAAxC;AACAL,UAAU,CAACG,IAAX,CAAgB,SAAhB,EAA2BG,YAA3B;AACAN,UAAU,CAACG,IAAX,CAAgB,iBAAhB,EAAkCI,oBAAlC;AACAP,UAAU,CAACG,IAAX,CAAgB,gBAAhB,EAAiCK,mBAAjC",
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\aurthorization\\",
      "sourcesContent": [
        "import express from \"express\";\nimport {\n    signup,\n    signin,\n    forgotPassword,\n    resetPassword\n} from './auth.controller'\nimport {requireSignIn} from './auth.middleware'\nexport const authRouter = express.Router();\n\nauthRouter.post('/signin',requireSignIn,signin);\nauthRouter.post(\"/signup\", signup);\nauthRouter.post('/forgotpassword',forgotPassword);\nauthRouter.post(\"/resetpassword\",resetPassword);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1594986604000
  },
  "{\"sourceRoot\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\aurthorization\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"filename\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\aurthorization\\\\auth.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\aurthorization\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\harsh\\social-share-backend-nikund",
      "filename": "D:\\harsh\\social-share-backend-nikund\\aurthorization\\auth.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\harsh\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\harsh\\social-share-backend-nikund\\aurthorization\\auth.controller.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\harsh\\social-share-backend-nikund\\aurthorization\\auth.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\aurthorization\\",
        "sourceFileName": "auth.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resetPassword = exports.forgotPassword = exports.signin = exports.signup = void 0;\n\nvar _users = require(\"../api/users\");\n\nvar _bcryptNodejs = _interopRequireDefault(require(\"bcrypt-nodejs\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nvar _nodemailer = _interopRequireDefault(require(\"nodemailer\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// mail object\nvar smtpTransport = _nodemailer[\"default\"].createTransport({\n  host: \"smtp.gmail.com\",\n  port: 587,\n  auth: {\n    user: \"shubhamkanani.dds@gmail.com\",\n    pass: 'Sh9825784600'\n  }\n}); // Registration api\n\n\nvar signup = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var _req$body, email, name, uname, password, userName, emailRegexp, mobileNoRegexp, emailId, isEmailExist, mobileNo, ismobileNoExist;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _req$body = req.body, email = _req$body.email, name = _req$body.name, uname = _req$body.uname, password = _req$body.password;\n            userName = uname;\n            emailRegexp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n            mobileNoRegexp = /\\(?\\d{3}\\)?-? *\\d{3}-? *-?\\d{6}/;\n\n            if (!emailRegexp.test(email)) {\n              _context.next = 19;\n              break;\n            }\n\n            emailId = email.toLowerCase();\n            _context.next = 9;\n            return _users.Users.findOne({\n              emailId: emailId\n            });\n\n          case 9:\n            isEmailExist = _context.sent;\n            console.log(isEmailExist);\n\n            if (!isEmailExist) {\n              _context.next = 13;\n              break;\n            }\n\n            return _context.abrupt(\"return\", res.status(422).send({\n              success: false,\n              message: \"Email is alrady exist\"\n            }));\n\n          case 13:\n            console.log(_bcryptNodejs[\"default\"].hashSync(password));\n            _context.next = 16;\n            return _users.Users.create({\n              emailId: emailId,\n              name: name,\n              userName: userName,\n              password: _bcryptNodejs[\"default\"].hashSync(password)\n            });\n\n          case 16:\n            return _context.abrupt(\"return\", res.status(201).send({\n              success: true,\n              message: \"User created successfully.\"\n            }));\n\n          case 19:\n            if (!mobileNoRegexp.test(email)) {\n              _context.next = 31;\n              break;\n            }\n\n            mobileNo = email;\n            _context.next = 23;\n            return _users.Users.findOne({\n              mobileNo: mobileNo\n            });\n\n          case 23:\n            ismobileNoExist = _context.sent;\n\n            if (!ismobileNoExist) {\n              _context.next = 26;\n              break;\n            }\n\n            return _context.abrupt(\"return\", res.status(422).send({\n              success: false,\n              message: \"Mobile number is alrady exist\"\n            }));\n\n          case 26:\n            _context.next = 28;\n            return _users.Users.create({\n              mobileNo: mobileNo,\n              name: name,\n              userName: userName,\n              password: _bcryptNodejs[\"default\"].hashSync(password)\n            });\n\n          case 28:\n            return _context.abrupt(\"return\", res.status(201).send({\n              success: true,\n              message: \"User created successfully.\"\n            }));\n\n          case 31:\n            return _context.abrupt(\"return\", res.status(401).send({\n              success: false,\n              message: \"User not created.\"\n            }));\n\n          case 32:\n            _context.next = 37;\n            break;\n\n          case 34:\n            _context.prev = 34;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(422).send({\n              success: false,\n              message: _context.t0.message\n            });\n\n          case 37:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 34]]);\n  }));\n\n  return function signup(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}(); //token genration\n\n\nexports.signup = signup;\nvar expirationInterval = process.env.NODE_ENV === \"development\" ? 30 * 24 * 60 * 60 : (parseInt(process.env.JWTSECRET) || 1) * 24 * 60 * 60;\n\nvar tokenForUser = function tokenForUser(user) {\n  try {\n    console.log(user.emailId);\n    var timestamp = new Date().getTime();\n    return _jsonwebtoken[\"default\"].sign({\n      sub: user.emailId,\n      iat: timestamp,\n      // entityDetails: loginDetails.relatedFaEntities[0],\n      exp: Math.floor(Date.now() / 1000) + expirationInterval\n    }, _config[\"default\"].secrets.JWT_SECRET);\n  } catch (err) {\n    throw err;\n  }\n}; //signin api\n\n\nvar signin = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var email, emailRegexp, mobileNoRegexp, userExistence, _userExistence;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            email = req.body.email;\n            _context2.prev = 1;\n            emailRegexp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n            mobileNoRegexp = /\\(?\\d{3}\\)?-? *\\d{3}-? *-?\\d{6}/;\n\n            if (!emailRegexp.test(email)) {\n              _context2.next = 11;\n              break;\n            }\n\n            _context2.next = 7;\n            return _users.Users.findOne({\n              emailId: email.toLowerCase()\n            });\n\n          case 7:\n            userExistence = _context2.sent;\n\n            if (userExistence) {\n              res.status(200).send({\n                success: true,\n                token: tokenForUser(userExistence),\n                data: userExistence\n              });\n            }\n\n            _context2.next = 16;\n            break;\n\n          case 11:\n            if (!mobileNoRegexp.test(email)) {\n              _context2.next = 16;\n              break;\n            }\n\n            _context2.next = 14;\n            return _users.Users.findOne({\n              mobileNo: email\n            });\n\n          case 14:\n            _userExistence = _context2.sent;\n\n            if (_userExistence) {\n              res.status(200).send({\n                success: true,\n                token: tokenForUser(_userExistence),\n                data: _userExistence\n              });\n            }\n\n          case 16:\n            _context2.next = 21;\n            break;\n\n          case 18:\n            _context2.prev = 18;\n            _context2.t0 = _context2[\"catch\"](1);\n            res.status(422).send({\n              success: false,\n              error: \"Unable to Login using email - \".concat(email)\n            });\n\n          case 21:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 18]]);\n  }));\n\n  return function signin(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}(); //forget password Link genration\n\n\nexports.signin = signin;\n\nvar forgotPassword = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var email, emailId, emailRegexp, isEmailExist, mail, token, data;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            email = req.body.email;\n            emailId = email.toLowerCase();\n            emailRegexp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n            if (emailRegexp.test(emailId)) {\n              _context3.next = 6;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", res.status(422).send({\n              success: false,\n              message: \"Invalid Email\"\n            }));\n\n          case 6:\n            _context3.next = 8;\n            return _users.Users.findOne({\n              emailId: emailId\n            }).then(function (data) {\n              return data ? true : false;\n            });\n\n          case 8:\n            isEmailExist = _context3.sent;\n\n            if (isEmailExist) {\n              _context3.next = 11;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", res.status(422).send({\n              success: false,\n              message: \"email in not registered\"\n            }));\n\n          case 11:\n            mail = {\n              emailId: email\n            };\n            token = tokenForUser(mail);\n            data = {\n              to: emailId,\n              from: process.env.MAILER_EMAIL_ID,\n              subject: \"Click Below Link To Reset Password \",\n              text: \"Confirm your email address to get started.\\n\\n\" + \"Please click on the following link, or paste this into your browser to the reset password process:\\n\\n\" + \"http://localhost:4200/reset?token=\" + token + \"\\n\\n\" + \"If you did not need this, please ignore this email and your password will remain unchanged.\\n\"\n            };\n            _context3.next = 16;\n            return smtpTransport.sendMail(data, function (err) {\n              return err ? res.status(422).send({\n                success: false,\n                message: err\n              }) : res.status(200).send({\n                success: true,\n                message: \"please check your email to reset your password!\"\n              });\n            });\n\n          case 16:\n            _context3.next = 21;\n            break;\n\n          case 18:\n            _context3.prev = 18;\n            _context3.t0 = _context3[\"catch\"](0);\n            res.status(422).send({\n              success: false,\n              message: _context3.t0.message\n            });\n\n          case 21:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 18]]);\n  }));\n\n  return function forgotPassword(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexports.forgotPassword = forgotPassword;\n\nvar resetPassword = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var token, decoded;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            token = req.query.token;\n            decoded = _jsonwebtoken[\"default\"].decode(token);\n            console.log(decoded);\n            _context4.next = 6;\n            return _users.Users.findOneAndUpdate({\n              emailId: decoded.sub\n            }, {\n              password: _bcryptNodejs[\"default\"].hashSync(req.body.password)\n            });\n\n          case 6:\n            return _context4.abrupt(\"return\", res.status(200).send({\n              success: true,\n              message: \"your password changed successfully!\"\n            }));\n\n          case 9:\n            _context4.prev = 9;\n            _context4.t0 = _context4[\"catch\"](0);\n            res.status(422).send({\n              success: false,\n              message: _context4.t0.message\n            });\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 9]]);\n  }));\n\n  return function resetPassword(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nexports.resetPassword = resetPassword;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "auth.controller.js"
      ],
      "names": [
        "smtpTransport",
        "nodemailer",
        "createTransport",
        "host",
        "port",
        "auth",
        "user",
        "pass",
        "signup",
        "req",
        "res",
        "body",
        "email",
        "name",
        "uname",
        "password",
        "userName",
        "emailRegexp",
        "mobileNoRegexp",
        "test",
        "emailId",
        "toLowerCase",
        "Users",
        "findOne",
        "isEmailExist",
        "console",
        "log",
        "status",
        "send",
        "success",
        "message",
        "bcrypt",
        "hashSync",
        "create",
        "mobileNo",
        "ismobileNoExist",
        "expirationInterval",
        "process",
        "env",
        "NODE_ENV",
        "parseInt",
        "JWTSECRET",
        "tokenForUser",
        "timestamp",
        "Date",
        "getTime",
        "jwt",
        "sign",
        "sub",
        "iat",
        "exp",
        "Math",
        "floor",
        "now",
        "configKey",
        "secrets",
        "JWT_SECRET",
        "err",
        "signin",
        "userExistence",
        "token",
        "data",
        "error",
        "forgotPassword",
        "then",
        "mail",
        "to",
        "from",
        "MAILER_EMAIL_ID",
        "subject",
        "text",
        "sendMail",
        "resetPassword",
        "query",
        "decoded",
        "decode",
        "findOneAndUpdate"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\aurthorization\\",
      "sourcesContent": [
        "import {Users} from '../api/users'\nimport bcrypt from 'bcrypt-nodejs'\nimport jwt from 'jsonwebtoken'\nimport configKey from '../config'\nimport nodemailer from 'nodemailer'\n\n// mail object\nconst smtpTransport = nodemailer.createTransport({\n    host: \"smtp.gmail.com\",\n    port: 587,\n    auth: {\n      user: \"shubhamkanani.dds@gmail.com\",\n      pass: 'Sh9825784600'\n    }\n  });\n// Registration api\n\nexport const signup = async (req,res) =>{\n    try{\n        const {email,name,uname,password} = req.body;\n        const userName = uname;\n        const emailRegexp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n        const mobileNoRegexp = /\\(?\\d{3}\\)?-? *\\d{3}-? *-?\\d{6}/;\n        if(emailRegexp.test(email)){\n            const emailId = email.toLowerCase();\n            const isEmailExist = await Users.findOne({emailId: emailId});\n            console.log(isEmailExist);\n            if(isEmailExist){\n                return res\n                    .status(422)\n                    .send({ success: false, message: \"Email is alrady exist\" });\n            }\n            console.log(bcrypt.hashSync(password))\n            await Users.create({\n                emailId,\n                name,\n                userName,\n                password:bcrypt.hashSync(password),\n            })\n            return res.status(201).send({\n                success: true,\n                message: \"User created successfully.\"\n              });\n        }\n        else if(mobileNoRegexp.test(email)){\n            const mobileNo = email;\n            const ismobileNoExist = await Users.findOne({mobileNo:mobileNo})\n            if(ismobileNoExist){\n                return res\n                    .status(422)\n                    .send({ success: false, message: \"Mobile number is alrady exist\" });\n            }\n            await Users.create({\n                mobileNo,\n                name,\n                userName,\n                password:bcrypt.hashSync(password),\n            })\n            return res.status(201).send({\n                success: true,\n                message: \"User created successfully.\"\n              });\n        }\n        else{\n            return res.status(401).send({\n                success: false,\n                message: \"User not created.\"\n              });\n        }\n    }\n    catch(err){\n        res.status(422).send({ success: false, message: err.message });\n    }\n}\n\n//token genration\nconst expirationInterval =\n    (process.env.NODE_ENV === \"development\")? 30 * 24 * 60 * 60: (parseInt(process.env.JWTSECRET) || 1) * 24 * 60 * 60;\n\nconst tokenForUser = (user) => {\n    try {\n      console.log(user.emailId)\n      const timestamp = new Date().getTime();\n      return jwt.sign(\n        {\n          sub: user.emailId,\n          iat: timestamp,\n          // entityDetails: loginDetails.relatedFaEntities[0],\n          exp: Math.floor(Date.now() / 1000) + expirationInterval\n        },\n        configKey.secrets.JWT_SECRET\n      );\n    }\n    catch (err) {\n      throw err;\n    }\n  };\n\n//signin api\n\nexport const signin = async (req,res) => {\n    const {email} = req.body;\n    try{\n        const emailRegexp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n        const mobileNoRegexp = /\\(?\\d{3}\\)?-? *\\d{3}-? *-?\\d{6}/;\n            if(emailRegexp.test(email)){\n               const userExistence = await Users.findOne({emailId:email.toLowerCase()})\n               if(userExistence){\n                res.status(200).send({\n                    success: true,\n                    token: tokenForUser(userExistence),\n                    data:userExistence\n                  });\n            }\n            }\n            else if(mobileNoRegexp.test(email)){\n               const userExistence = await Users.findOne({mobileNo:email})\n               if(userExistence){\n                res.status(200).send({\n                    success: true,\n                    token: tokenForUser(userExistence),\n                    data:userExistence\n                  });\n            }\n            }\n    }\n    catch(err){\n        res.status(422).send({\n            success: false,\n            error: `Unable to Login using email - ${email}`\n          });\n    }\n}\n\n//forget password Link genration\n\nexport const forgotPassword = async (req,res) =>{\n  try{\n    let {email} = req.body\n    const emailId = email.toLowerCase();\n    const emailRegexp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if (!emailRegexp.test(emailId)) {\n        return res.status(422).send({ success: false, message: \"Invalid Email\" });\n      }\n    const isEmailExist = await Users.findOne({emailId:emailId}).then(data => {\n        return data ? true : false;\n      });\n      if (!isEmailExist) {\n        return res\n          .status(422)\n          .send({ success: false, message: \"email in not registered\" });\n      }\n      const mail = {\n        emailId:email\n      }\n      const token = tokenForUser(mail);\n      const data = {\n        to: emailId,\n        from: process.env.MAILER_EMAIL_ID,\n        subject: \"Click Below Link To Reset Password \",\n        text:\n          \"Confirm your email address to get started.\\n\\n\" +\n          \"Please click on the following link, or paste this into your browser to the reset password process:\\n\\n\" +\n          \"http://localhost:4200/reset?token=\" +\n          token +\n          \"\\n\\n\" +\n          \"If you did not need this, please ignore this email and your password will remain unchanged.\\n\"\n      };\n      await smtpTransport.sendMail(data, err => {\n        return err ? res.status(422).send({\n              success: false,\n              message: err\n            }) : res.status(200).send({\n              success: true,\n              message: \"please check your email to reset your password!\"\n            });\n      });\n  }\n  catch(err){\n    res.status(422).send({ success: false, message: err.message });\n  }\n}\nexport const resetPassword = async(req,res) =>{\n  try{\n    const token = req.query.token;\n    const decoded =jwt.decode(token)\n    console.log(decoded);\n    await Users.findOneAndUpdate(\n      { emailId: decoded.sub },\n      { password: bcrypt.hashSync(req.body.password) }\n    );\n    return res.status(200).send({\n      success: true,\n      message: \"your password changed successfully!\"\n    });\n  }\n  catch(err){\n    res.status(422).send({ success: false, message: err.message });\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1594986604000
  },
  "{\"sourceRoot\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\users\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"filename\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\users\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\users\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\harsh\\social-share-backend-nikund",
      "filename": "D:\\harsh\\social-share-backend-nikund\\api\\users\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\harsh\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\harsh\\social-share-backend-nikund\\api\\users\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\harsh\\social-share-backend-nikund\\api\\users\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\users\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _user = require(\"./user.restRouter\");\n\nObject.keys(_user).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _user[key];\n    }\n  });\n});\n\nvar _user2 = require(\"./user.modal\");\n\nObject.keys(_user2).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _user2[key];\n    }\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFDQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEiLCJzb3VyY2VSb290IjoiRDpcXGhhcnNoXFxzb2NpYWwtc2hhcmUtYmFja2VuZC1uaWt1bmRcXGFwaVxcdXNlcnNcXCIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vdXNlci5yZXN0Um91dGVyJztcbmV4cG9ydCAqIGZyb20gJy4vdXNlci5tb2RhbCciXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [],
      "mappings": ";;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA",
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\users\\",
      "sourcesContent": [
        "export * from './user.restRouter';\nexport * from './user.modal'"
      ]
    },
    "sourceType": "script",
    "mtime": 1594986602000
  },
  "{\"sourceRoot\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\users\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"filename\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\users\\\\user.restRouter.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\users\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\harsh\\social-share-backend-nikund",
      "filename": "D:\\harsh\\social-share-backend-nikund\\api\\users\\user.restRouter.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\harsh\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\harsh\\social-share-backend-nikund\\api\\users\\user.restRouter.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\harsh\\social-share-backend-nikund\\api\\users\\user.restRouter.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\users\\",
        "sourceFileName": "user.restRouter.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.userRouter = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _user = require(\"./user.controller\");\n\nvar _multer = _interopRequireDefault(require(\"multer\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _config = _interopRequireDefault(require(\"../../config\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _user2 = require(\"./user.modal\");\n\nvar _querystring = require(\"querystring\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar userRouter = _express[\"default\"].Router();\n\nexports.userRouter = userRouter;\n\nvar pstorage = _multer[\"default\"].diskStorage({\n  destination: function () {\n    var _destination = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, file, cb) {\n      var profileUploadDir;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              profileUploadDir = _path[\"default\"].join(__dirname, '..', '..', 'public', 'profile');\n\n              if (_fs[\"default\"].existsSync(profileUploadDir)) {\n                cb(null, profileUploadDir);\n              } else {\n                _fs[\"default\"].mkdirSync(profileUploadDir);\n\n                cb(null, profileUploadDir);\n              }\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function destination(_x, _x2, _x3) {\n      return _destination.apply(this, arguments);\n    }\n\n    return destination;\n  }(),\n  filename: function () {\n    var _filename = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, file, cb) {\n      var decoded, data, extension;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n            case 2:\n              decoded = _context2.sent;\n              _context2.next = 5;\n              return _user2.Users.findOne({\n                emailId: decoded.sub\n              });\n\n            case 5:\n              data = _context2.sent;\n              extension = file.originalname.substring(file.originalname.lastIndexOf('.') + 1);\n              cb(null, data._id + '.' + extension);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function filename(_x4, _x5, _x6) {\n      return _filename.apply(this, arguments);\n    }\n\n    return filename;\n  }()\n});\n\nvar cstroge = _multer[\"default\"].diskStorage({\n  destination: function () {\n    var _destination2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, file, cb) {\n      var userId, coverUploaddir;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              userId = req.body.userId;\n              coverUploaddir = _path[\"default\"].join(__dirname, '..', '..', 'public', 'cover');\n\n              if (_fs[\"default\"].existsSync(coverUploaddir)) {\n                cb(null, coverUploaddir);\n              } else {\n                _fs[\"default\"].mkdirSync(coverUploaddir);\n\n                cb(null, coverUploaddir);\n              }\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function destination(_x7, _x8, _x9) {\n      return _destination2.apply(this, arguments);\n    }\n\n    return destination;\n  }(),\n  filename: function () {\n    var _filename2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, file, cb) {\n      var decoded, data, extension;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n            case 2:\n              decoded = _context4.sent;\n              _context4.next = 5;\n              return _user2.Users.findOne({\n                emailId: decoded.sub\n              });\n\n            case 5:\n              data = _context4.sent;\n              extension = file.originalname.substring(file.originalname.lastIndexOf('.') + 1);\n              cb(null, data._id + '.' + extension);\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function filename(_x10, _x11, _x12) {\n      return _filename2.apply(this, arguments);\n    }\n\n    return filename;\n  }()\n});\n\nvar uploadCoverImg = (0, _multer[\"default\"])({\n  storage: cstroge,\n  fileFilter: function () {\n    var _fileFilter = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, file, cb) {\n      var decoded, data, extension, coverUploaddir;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n            case 3:\n              decoded = _context5.sent;\n              _context5.next = 6;\n              return _user2.Users.findOne({\n                emailId: decoded.sub\n              });\n\n            case 6:\n              data = _context5.sent;\n              extension = data.coverImgURl.substring(data.coverImgURl.lastIndexOf(\".\") + 1);\n              coverUploaddir = _path[\"default\"].join(__dirname, '..', '..', 'public', 'cover');\n              console.log(extension);\n\n              if (_fs[\"default\"].existsSync(coverUploaddir + '/' + data._id + '.' + extension)) {\n                _fs[\"default\"].unlink(coverUploaddir + '/' + data._id + '.' + extension, function (err) {\n                  if (err) throw err; // if no error, file has been deleted successfully\n\n                  console.log('File deleted!');\n                });\n              }\n\n              cb(null, true);\n              _context5.next = 17;\n              break;\n\n            case 14:\n              _context5.prev = 14;\n              _context5.t0 = _context5[\"catch\"](0);\n              cb(null, false, new Error(_context5.t0.message));\n\n            case 17:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 14]]);\n    }));\n\n    function fileFilter(_x13, _x14, _x15) {\n      return _fileFilter.apply(this, arguments);\n    }\n\n    return fileFilter;\n  }()\n});\nvar uploadProfileImg = (0, _multer[\"default\"])({\n  storage: pstorage,\n  fileFilter: function () {\n    var _fileFilter2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, file, cb) {\n      var decoded, data, extension, profileUploadDir;\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n            case 3:\n              decoded = _context6.sent;\n              _context6.next = 6;\n              return _user2.Users.findOne({\n                emailId: decoded.sub\n              });\n\n            case 6:\n              data = _context6.sent;\n              extension = data.coverImgURl.substring(data.coverImgURl.lastIndexOf(\".\") + 1);\n              profileUploadDir = _path[\"default\"].join(__dirname, '..', '..', 'public', 'profile');\n              console.log(extension);\n\n              if (_fs[\"default\"].existsSync(profileUploadDir + '/' + data._id + '.' + extension)) {\n                _fs[\"default\"].unlink(profileUploadDir + '/' + data._id + '.' + extension, function (err) {\n                  if (err) throw err; // if no error, file has been deleted successfully\n\n                  console.log('File deleted!');\n                });\n              }\n\n              cb(null, true);\n              _context6.next = 17;\n              break;\n\n            case 14:\n              _context6.prev = 14;\n              _context6.t0 = _context6[\"catch\"](0);\n              cb(null, false, new Error(_context6.t0.message));\n\n            case 17:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[0, 14]]);\n    }));\n\n    function fileFilter(_x16, _x17, _x18) {\n      return _fileFilter2.apply(this, arguments);\n    }\n\n    return fileFilter;\n  }()\n});\nuserRouter.post('/setprofileimg', uploadProfileImg.single('image'), _user.setProfileImg);\nuserRouter.post('/setcoverimg', uploadCoverImg.single('image'), _user.setCoverImg);\nuserRouter.get('/profile', _user.getProfile);\nuserRouter.post('/serach', _user.serachUser);\nuserRouter.post('/update', _user.updateUser);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "user.restRouter.js"
      ],
      "names": [
        "userRouter",
        "express",
        "Router",
        "pstorage",
        "multer",
        "diskStorage",
        "destination",
        "req",
        "file",
        "cb",
        "profileUploadDir",
        "path",
        "join",
        "__dirname",
        "fs",
        "existsSync",
        "mkdirSync",
        "filename",
        "jwt",
        "verify",
        "headers",
        "token",
        "configKey",
        "secrets",
        "JWT_SECRET",
        "decoded",
        "Users",
        "findOne",
        "emailId",
        "sub",
        "data",
        "extension",
        "originalname",
        "substring",
        "lastIndexOf",
        "_id",
        "cstroge",
        "userId",
        "body",
        "coverUploaddir",
        "uploadCoverImg",
        "storage",
        "fileFilter",
        "coverImgURl",
        "console",
        "log",
        "unlink",
        "err",
        "Error",
        "message",
        "uploadProfileImg",
        "post",
        "single",
        "setProfileImg",
        "setCoverImg",
        "get",
        "getProfile",
        "serachUser",
        "updateUser"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\users\\",
      "sourcesContent": [
        "import express from \"express\";\nimport {\n    getProfile,\n    serachUser,\n    updateUser,\n    setProfileImg,\n    setCoverImg,\n    \n} from './user.controller';\nimport multer from 'multer';\nimport path from 'path';\nimport fs from 'fs';\nimport configKey from '../../config'\nimport jwt from 'jsonwebtoken';\nimport { Users } from \"./user.modal\";\nimport { decode } from \"querystring\";\nexport const userRouter = express.Router();\n\nvar pstorage = multer.diskStorage({\n    destination: async function(req, file, cb){\n        const profileUploadDir = path.join(__dirname,'..','..','public','profile');\n        if (fs.existsSync(profileUploadDir)){\n            cb(null, profileUploadDir)\n        }\n        else{\n            fs.mkdirSync(profileUploadDir)\n            cb(null, profileUploadDir)\n        }\n    },\n    filename:async function(req,file,cb){\n        const decoded = await jwt.verify(req.headers.token, configKey.secrets.JWT_SECRET);\n        const data = await Users.findOne({emailId:decoded.sub})\n        const extension = file.originalname.substring(file.originalname.lastIndexOf('.') + 1);\n        cb(null, data._id+'.'+extension)\n    }\n})\n\nvar cstroge = multer.diskStorage({\n    destination: async function(req, file, cb){\n        const {userId} = req.body;\n        const coverUploaddir = path.join(__dirname,'..','..','public','cover');\n        if (fs.existsSync(coverUploaddir)){\n            cb(null, coverUploaddir)\n        }\n        else{\n            fs.mkdirSync(coverUploaddir)\n            cb(null, coverUploaddir)\n        }\n    },\n    filename:async function(req,file,cb){\n        const decoded = await jwt.verify(req.headers.token, configKey.secrets.JWT_SECRET);\n        const data = await Users.findOne({emailId:decoded.sub})\n        const extension = file.originalname.substring(file.originalname.lastIndexOf('.') + 1);\n        cb(null, data._id+'.'+extension)\n    }\n})\nconst uploadCoverImg = multer({storage:cstroge,\n    fileFilter:async function (req, file, cb){\n        try{\n            const decoded = await jwt.verify(req.headers.token, configKey.secrets.JWT_SECRET);\n              \n        const data = await Users.findOne({emailId:decoded.sub})\n            const extension = data.coverImgURl.substring(data.coverImgURl.lastIndexOf(\".\") + 1);\n            const coverUploaddir = path.join(__dirname,'..','..','public','cover');\n            console.log(extension);\n            \n            if(fs.existsSync(coverUploaddir+'/'+data._id+'.'+extension)){\n                fs.unlink(coverUploaddir+'/'+data._id+'.'+extension, function (err) {\n                    if (err) throw err;\n                    // if no error, file has been deleted successfully\n                    console.log('File deleted!');\n                });\n            }\n            cb(null,true);\n        }\n        catch(err){\n            cb(null,false,new Error(err.message));\n        }\n\n}\n})\nconst uploadProfileImg = multer({storage:pstorage,\n    fileFilter:async function (req, file, cb){\n        try{\n            const decoded = await jwt.verify(req.headers.token, configKey.secrets.JWT_SECRET);\n        const data = await Users.findOne({emailId:decoded.sub})\n            const extension = data.coverImgURl.substring(data.coverImgURl.lastIndexOf(\".\") + 1);\n            const profileUploadDir = path.join(__dirname,'..','..','public','profile');\n            console.log(extension);\n            \n            if(fs.existsSync(profileUploadDir+'/'+data._id+'.'+extension)){\n                fs.unlink(profileUploadDir+'/'+data._id+'.'+extension, function (err) {\n                    if (err) throw err;\n                    // if no error, file has been deleted successfully\n                    console.log('File deleted!');\n                });\n            }\n            cb(null,true);\n        }\n        catch(err){\n            cb(null,false,new Error(err.message));\n        }\n\n}\n})\n\nuserRouter.post('/setprofileimg', uploadProfileImg.single('image'),setProfileImg);\nuserRouter.post('/setcoverimg',uploadCoverImg.single('image'),setCoverImg);\nuserRouter.get('/profile',getProfile);\nuserRouter.post('/serach',serachUser);\nuserRouter.post('/update',updateUser);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1596627854000
  },
  "{\"sourceRoot\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\users\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"filename\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\users\\\\user.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\users\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\harsh\\social-share-backend-nikund",
      "filename": "D:\\harsh\\social-share-backend-nikund\\api\\users\\user.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\harsh\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\harsh\\social-share-backend-nikund\\api\\users\\user.controller.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\harsh\\social-share-backend-nikund\\api\\users\\user.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\users\\",
        "sourceFileName": "user.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setCoverImg = exports.setProfileImg = exports.updateUser = exports.serachUser = exports.getProfile = void 0;\n\nvar _user = require(\"./user.modal\");\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _config = _interopRequireDefault(require(\"../../config\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// get user profile by id\nvar getProfile = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var userId, profileData;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            userId = req.query.id;\n            _context.next = 4;\n            return _user.Users.findOne(userId);\n\n          case 4:\n            profileData = _context.sent;\n            console.log(profileData);\n\n            if (profileData.length <= 0) {\n              res.status(401).send({\n                success: false,\n                message: 'somthing goes to wrong in find data'\n              });\n            } else {\n              res.status(201).send({\n                success: true,\n                data: profileData,\n                message: 'data find successfully'\n              });\n            }\n\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context.t0.message\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 9]]);\n  }));\n\n  return function getProfile(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}(); //search User\n\n\nexports.getProfile = getProfile;\n\nvar serachUser = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$body, serchData, userId, searchDataBackend, allUser;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _req$body = req.body, serchData = _req$body.serchData, userId = _req$body.userId;\n            searchDataBackend = [];\n            _context2.next = 5;\n            return _user.Users.aggregate([{\n              $match: {}\n            }, {\n              $project: {\n                _id: 1,\n                userName: 1,\n                profileImgURL: 1,\n                city: 1\n              }\n            }]);\n\n          case 5:\n            allUser = _context2.sent;\n            _context2.next = 8;\n            return Promise.all(allUser.map(function (item) {\n              var ID = item._id.toString();\n\n              if (item.userName.match(serchData) && !ID.match(userId)) {\n                searchDataBackend.push(item);\n              }\n            }));\n\n          case 8:\n            //console.log(allUser);\n            res.status(201).send({\n              success: true,\n              data: searchDataBackend\n            });\n            _context2.next = 14;\n            break;\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context2.t0.message\n            });\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 11]]);\n  }));\n\n  return function serachUser(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}(); //edit profile page\n\n\nexports.serachUser = serachUser;\n\nvar updateUser = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var _req$body2, userId, designation, country, city, hobbies, success;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _req$body2 = req.body, userId = _req$body2.userId, designation = _req$body2.designation, country = _req$body2.country, city = _req$body2.city, hobbies = _req$body2.hobbies;\n            _context3.next = 4;\n            return _user.Users.findByIdAndUpdate({\n              _id: userId\n            }, {\n              designation: designation,\n              country: country,\n              city: city,\n              hobbies: hobbies\n            });\n\n          case 4:\n            success = _context3.sent;\n\n            if (!success) {\n              res.status(401).send({\n                success: false,\n                message: 'data update process failed due to user not found error'\n              });\n            }\n\n            res.status(201).send({\n              success: true,\n              message: 'data update successsully'\n            });\n            _context3.next = 12;\n            break;\n\n          case 9:\n            _context3.prev = 9;\n            _context3.t0 = _context3[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context3.t0.message\n            });\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 9]]);\n  }));\n\n  return function updateUser(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}(); //upload profile Image\n\n\nexports.updateUser = updateUser;\n\nvar setProfileImg = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var decoded;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n\n            if (!req.file) {\n              _context4.next = 11;\n              break;\n            }\n\n            console.log(req.file);\n            _context4.next = 5;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 5:\n            decoded = _context4.sent;\n            _context4.next = 8;\n            return _user.Users.findOneAndUpdate({\n              emailId: decoded.sub\n            }, {\n              profileImgURL: \"http://localhost:8000/profile/\" + req.file.filename\n            });\n\n          case 8:\n            return _context4.abrupt(\"return\", res.status(201).send({\n              success: true,\n              message: 'image upload successfully'\n            }));\n\n          case 11:\n            res.status(401).send({\n              success: false,\n              message: \"Image file either not supported or not found\"\n            });\n\n          case 12:\n            _context4.next = 17;\n            break;\n\n          case 14:\n            _context4.prev = 14;\n            _context4.t0 = _context4[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context4.t0.message\n            });\n\n          case 17:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 14]]);\n  }));\n\n  return function setProfileImg(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}(); //upload Cover Image\n\n\nexports.setProfileImg = setProfileImg;\n\nvar setCoverImg = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var decoded;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n\n            if (!req.file) {\n              _context5.next = 11;\n              break;\n            }\n\n            console.log(req.file);\n            _context5.next = 5;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 5:\n            decoded = _context5.sent;\n            _context5.next = 8;\n            return _user.Users.findOneAndUpdate({\n              emailId: decoded.sub\n            }, {\n              coverImgURl: \"http://localhost:8000/profile/\" + req.file.filename\n            });\n\n          case 8:\n            return _context5.abrupt(\"return\", res.status(201).send({\n              success: true,\n              message: 'image upload successfully'\n            }));\n\n          case 11:\n            res.status(401).send({\n              success: false,\n              message: \"Image file either not supported or not found\"\n            });\n\n          case 12:\n            _context5.next = 17;\n            break;\n\n          case 14:\n            _context5.prev = 14;\n            _context5.t0 = _context5[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context5.t0.message\n            });\n\n          case 17:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 14]]);\n  }));\n\n  return function setCoverImg(_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nexports.setCoverImg = setCoverImg;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "user.controller.js"
      ],
      "names": [
        "getProfile",
        "req",
        "res",
        "userId",
        "query",
        "id",
        "Users",
        "findOne",
        "profileData",
        "console",
        "log",
        "length",
        "status",
        "send",
        "success",
        "message",
        "data",
        "serachUser",
        "body",
        "serchData",
        "searchDataBackend",
        "aggregate",
        "$match",
        "$project",
        "_id",
        "userName",
        "profileImgURL",
        "city",
        "allUser",
        "Promise",
        "all",
        "map",
        "item",
        "ID",
        "toString",
        "match",
        "push",
        "updateUser",
        "designation",
        "country",
        "hobbies",
        "findByIdAndUpdate",
        "setProfileImg",
        "file",
        "jwt",
        "verify",
        "headers",
        "token",
        "configKey",
        "secrets",
        "JWT_SECRET",
        "decoded",
        "findOneAndUpdate",
        "emailId",
        "sub",
        "filename",
        "setCoverImg",
        "coverImgURl"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\users\\",
      "sourcesContent": [
        "import {Users} from './user.modal'\nimport mongoose from 'mongoose'\nimport configKey from '../../config'\nimport jwt from 'jsonwebtoken';\n// get user profile by id\nexport const getProfile = async(req,res) =>{\n    try{\n        const userId = req.query.id;\n        const profileData = await Users.findOne(userId)\n        console.log(profileData);\n        if(profileData.length<=0){\n            res.status(401).send({\n                success:false,\n                message:'somthing goes to wrong in find data'\n            })\n        }\n        else{\n            res.status(201).send({\n                success:true,\n                data:profileData,\n                message:'data find successfully'\n            })\n        }\n    }\n    catch(err){\n        res.status(401).send({\n            success:false,\n            message:err.message\n        })\n    }\n}\n//search User\nexport const serachUser = async(req,res) =>{\n    try{\n        const {serchData,userId} = req.body;\n        const searchDataBackend = []\n        const allUser = await Users.aggregate([{\n            $match:{}\n        },\n        {\n            $project:{\n                _id:1,\n                userName:1,\n                profileImgURL:1,\n                city:1\n            }\n        }]);\n        await Promise.all(allUser.map((item)=>{\n            const ID = item._id.toString();\n            if(item.userName.match(serchData) && !ID.match(userId)){\n                searchDataBackend.push(item);\n            }\n        }))\n        //console.log(allUser);\n        res.status(201).send({\n            success:true,\n            data:searchDataBackend\n        })\n    }\n    catch(err){\n        res.status(401).send({\n            success:false,\n            message:err.message\n        })\n    }\n}\n//edit profile page\nexport const updateUser = async(req,res) =>{\n    try{\n        const {userId,designation,country,city,hobbies} = req.body;\n        const success = await Users.findByIdAndUpdate({_id:userId},{\n            designation,country,city,hobbies\n        })\n        if(!success){\n            res.status(401).send({\n                success:false,\n                message:'data update process failed due to user not found error'\n            })\n        }\n        res.status(201).send({\n            success:true,\n            message:'data update successsully'\n        })\n    }\n    catch(err){\n        res.status(401).send({\n            success:false,\n            message:err.message\n        })\n    }\n}\n\n//upload profile Image\nexport const setProfileImg = async(req,res) =>{\n    try{\n        if(req.file){\n            console.log(req.file);\n            const decoded = await jwt.verify(req.headers.token, configKey.secrets.JWT_SECRET);\n            await Users.findOneAndUpdate({emailId:decoded.sub},{\n                profileImgURL:\"http://localhost:8000/profile/\"+req.file.filename\n            })\n            return res.status(201).send({\n                success:true,\n                message:'image upload successfully'\n            })\n        }\n        else{\n            res.status(401).send({\n                success:false,\n                message:\"Image file either not supported or not found\"\n            })\n        }\n    }\n    catch(err){\n        res.status(401).send({\n            success:false,\n            message:err.message\n        })\n    }\n}\n\n//upload Cover Image\nexport const setCoverImg= async(req,res) =>{\n    try{\n        if(req.file){\n            console.log(req.file);\n            const decoded = await jwt.verify(req.headers.token, configKey.secrets.JWT_SECRET);\n            await Users.findOneAndUpdate({emailId:decoded.sub},{\n                coverImgURl:\"http://localhost:8000/profile/\"+req.file.filename\n            })\n            return res.status(201).send({\n                success:true,\n                message:'image upload successfully'\n            })\n        }\n        else{\n            res.status(401).send({\n                success:false,\n                message:\"Image file either not supported or not found\"\n            })\n        }\n    }\n    catch(err){\n        res.status(401).send({\n            success:false,\n            message:err.message\n        })\n    }\n}\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597033922000
  },
  "{\"sourceRoot\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\users\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"filename\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\users\\\\user.modal.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\users\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\harsh\\social-share-backend-nikund",
      "filename": "D:\\harsh\\social-share-backend-nikund\\api\\users\\user.modal.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\harsh\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\harsh\\social-share-backend-nikund\\api\\users\\user.modal.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\harsh\\social-share-backend-nikund\\api\\users\\user.modal.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\users\\",
        "sourceFileName": "user.modal.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Users = void 0;\n\nvar _mongoose = _interopRequireWildcard(require(\"mongoose\"));\n\nvar _mongooseTimestamp = _interopRequireDefault(require(\"mongoose-timestamp\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar userSchema = (0, _mongoose.Schema)({\n  name: String,\n  emailId: String,\n  password: String,\n  mobileNo: Number,\n  userName: String,\n  designation: String,\n  country: String,\n  city: String,\n  hobbies: Array,\n  profileImgURL: String,\n  coverImgURl: String,\n  content: String\n}, {\n  timestamps: {\n    createdAt: 'created_at'\n  }\n});\n\nvar Users = _mongoose[\"default\"].model('userInfo', userSchema);\n\nexports.Users = Users;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIubW9kYWwuanMiXSwibmFtZXMiOlsidXNlclNjaGVtYSIsIm5hbWUiLCJTdHJpbmciLCJlbWFpbElkIiwicGFzc3dvcmQiLCJtb2JpbGVObyIsIk51bWJlciIsInVzZXJOYW1lIiwiZGVzaWduYXRpb24iLCJjb3VudHJ5IiwiY2l0eSIsImhvYmJpZXMiLCJBcnJheSIsInByb2ZpbGVJbWdVUkwiLCJjb3ZlckltZ1VSbCIsImNvbnRlbnQiLCJ0aW1lc3RhbXBzIiwiY3JlYXRlZEF0IiwiVXNlcnMiLCJtb25nb29zZSIsIm1vZGVsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7QUFFQSxJQUFNQSxVQUFVLEdBQUcsc0JBQU87QUFDdEJDLEVBQUFBLElBQUksRUFBQ0MsTUFEaUI7QUFFdEJDLEVBQUFBLE9BQU8sRUFBQ0QsTUFGYztBQUd0QkUsRUFBQUEsUUFBUSxFQUFDRixNQUhhO0FBSXRCRyxFQUFBQSxRQUFRLEVBQUNDLE1BSmE7QUFLdEJDLEVBQUFBLFFBQVEsRUFBQ0wsTUFMYTtBQU10Qk0sRUFBQUEsV0FBVyxFQUFDTixNQU5VO0FBT3RCTyxFQUFBQSxPQUFPLEVBQUNQLE1BUGM7QUFRdEJRLEVBQUFBLElBQUksRUFBQ1IsTUFSaUI7QUFTdEJTLEVBQUFBLE9BQU8sRUFBQ0MsS0FUYztBQVV0QkMsRUFBQUEsYUFBYSxFQUFDWCxNQVZRO0FBV3RCWSxFQUFBQSxXQUFXLEVBQUNaLE1BWFU7QUFZdEJhLEVBQUFBLE9BQU8sRUFBQ2I7QUFaYyxDQUFQLEVBZWhCO0FBQUVjLEVBQUFBLFVBQVUsRUFBRTtBQUFDQyxJQUFBQSxTQUFTLEVBQUM7QUFBWDtBQUFkLENBZmdCLENBQW5COztBQWlCTyxJQUFNQyxLQUFLLEdBQUdDLHFCQUFTQyxLQUFULENBQWUsVUFBZixFQUEwQnBCLFVBQTFCLENBQWQiLCJzb3VyY2VSb290IjoiRDpcXGhhcnNoXFxzb2NpYWwtc2hhcmUtYmFja2VuZC1uaWt1bmRcXGFwaVxcdXNlcnNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSwge1NjaGVtYX0gZnJvbSAnbW9uZ29vc2UnO1xuaW1wb3J0IHRpbWVzdGFtcHMgZnJvbSBcIm1vbmdvb3NlLXRpbWVzdGFtcFwiO1xuXG5jb25zdCB1c2VyU2NoZW1hID0gU2NoZW1hKHtcbiAgICBuYW1lOlN0cmluZyxcbiAgICBlbWFpbElkOlN0cmluZyxcbiAgICBwYXNzd29yZDpTdHJpbmcsXG4gICAgbW9iaWxlTm86TnVtYmVyLFxuICAgIHVzZXJOYW1lOlN0cmluZyxcbiAgICBkZXNpZ25hdGlvbjpTdHJpbmcsXG4gICAgY291bnRyeTpTdHJpbmcsXG4gICAgY2l0eTpTdHJpbmcsXG4gICAgaG9iYmllczpBcnJheSxcbiAgICBwcm9maWxlSW1nVVJMOlN0cmluZyxcbiAgICBjb3ZlckltZ1VSbDpTdHJpbmcsXG4gICAgY29udGVudDpTdHJpbmcsXG5cblxufSwgeyB0aW1lc3RhbXBzOiB7Y3JlYXRlZEF0OidjcmVhdGVkX2F0J30gfSlcblxuZXhwb3J0IGNvbnN0IFVzZXJzID0gbW9uZ29vc2UubW9kZWwoJ3VzZXJJbmZvJyx1c2VyU2NoZW1hKTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "user.modal.js"
      ],
      "names": [
        "userSchema",
        "name",
        "String",
        "emailId",
        "password",
        "mobileNo",
        "Number",
        "userName",
        "designation",
        "country",
        "city",
        "hobbies",
        "Array",
        "profileImgURL",
        "coverImgURl",
        "content",
        "timestamps",
        "createdAt",
        "Users",
        "mongoose",
        "model"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;;;;;;;AAEA,IAAMA,UAAU,GAAG,sBAAO;AACtBC,EAAAA,IAAI,EAACC,MADiB;AAEtBC,EAAAA,OAAO,EAACD,MAFc;AAGtBE,EAAAA,QAAQ,EAACF,MAHa;AAItBG,EAAAA,QAAQ,EAACC,MAJa;AAKtBC,EAAAA,QAAQ,EAACL,MALa;AAMtBM,EAAAA,WAAW,EAACN,MANU;AAOtBO,EAAAA,OAAO,EAACP,MAPc;AAQtBQ,EAAAA,IAAI,EAACR,MARiB;AAStBS,EAAAA,OAAO,EAACC,KATc;AAUtBC,EAAAA,aAAa,EAACX,MAVQ;AAWtBY,EAAAA,WAAW,EAACZ,MAXU;AAYtBa,EAAAA,OAAO,EAACb;AAZc,CAAP,EAehB;AAAEc,EAAAA,UAAU,EAAE;AAACC,IAAAA,SAAS,EAAC;AAAX;AAAd,CAfgB,CAAnB;;AAiBO,IAAMC,KAAK,GAAGC,qBAASC,KAAT,CAAe,UAAf,EAA0BpB,UAA1B,CAAd",
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\users\\",
      "sourcesContent": [
        "import mongoose, {Schema} from 'mongoose';\nimport timestamps from \"mongoose-timestamp\";\n\nconst userSchema = Schema({\n    name:String,\n    emailId:String,\n    password:String,\n    mobileNo:Number,\n    userName:String,\n    designation:String,\n    country:String,\n    city:String,\n    hobbies:Array,\n    profileImgURL:String,\n    coverImgURl:String,\n    content:String,\n\n\n}, { timestamps: {createdAt:'created_at'} })\n\nexport const Users = mongoose.model('userInfo',userSchema);"
      ]
    },
    "sourceType": "script",
    "mtime": 1596627818000
  },
  "{\"sourceRoot\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\aurthorization\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"filename\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\aurthorization\\\\auth.middleware.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\aurthorization\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\harsh\\social-share-backend-nikund",
      "filename": "D:\\harsh\\social-share-backend-nikund\\aurthorization\\auth.middleware.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\harsh\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\harsh\\social-share-backend-nikund\\aurthorization\\auth.middleware.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\harsh\\social-share-backend-nikund\\aurthorization\\auth.middleware.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\aurthorization\\",
        "sourceFileName": "auth.middleware.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.requireSignIn = exports.requireAuth = void 0;\n\nvar passportService = require(\"./passport\");\n\nvar passport = require(\"passport\"); // Create the interceptor and ensure that the cookie is turned off\n\n\nvar requireAuth = passport.authenticate(\"jwt\", {\n  session: false\n});\nexports.requireAuth = requireAuth;\nvar requireSignIn = passport.authenticate(\"local\", {\n  session: false\n});\nexports.requireSignIn = requireSignIn;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGgubWlkZGxld2FyZS5qcyJdLCJuYW1lcyI6WyJwYXNzcG9ydFNlcnZpY2UiLCJyZXF1aXJlIiwicGFzc3BvcnQiLCJyZXF1aXJlQXV0aCIsImF1dGhlbnRpY2F0ZSIsInNlc3Npb24iLCJyZXF1aXJlU2lnbkluIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsSUFBTUEsZUFBZSxHQUFHQyxPQUFPLENBQUMsWUFBRCxDQUEvQjs7QUFDQSxJQUFNQyxRQUFRLEdBQUdELE9BQU8sQ0FBQyxVQUFELENBQXhCLEMsQ0FFQTs7O0FBQ08sSUFBTUUsV0FBVyxHQUFHRCxRQUFRLENBQUNFLFlBQVQsQ0FBc0IsS0FBdEIsRUFBNkI7QUFBRUMsRUFBQUEsT0FBTyxFQUFFO0FBQVgsQ0FBN0IsQ0FBcEI7O0FBQ0EsSUFBTUMsYUFBYSxHQUFHSixRQUFRLENBQUNFLFlBQVQsQ0FBc0IsT0FBdEIsRUFBK0I7QUFBRUMsRUFBQUEsT0FBTyxFQUFFO0FBQVgsQ0FBL0IsQ0FBdEIiLCJzb3VyY2VSb290IjoiRDpcXGhhcnNoXFxzb2NpYWwtc2hhcmUtYmFja2VuZC1uaWt1bmRcXGF1cnRob3JpemF0aW9uXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBwYXNzcG9ydFNlcnZpY2UgPSByZXF1aXJlKFwiLi9wYXNzcG9ydFwiKTtcbmNvbnN0IHBhc3Nwb3J0ID0gcmVxdWlyZShcInBhc3Nwb3J0XCIpO1xuXG4vLyBDcmVhdGUgdGhlIGludGVyY2VwdG9yIGFuZCBlbnN1cmUgdGhhdCB0aGUgY29va2llIGlzIHR1cm5lZCBvZmZcbmV4cG9ydCBjb25zdCByZXF1aXJlQXV0aCA9IHBhc3Nwb3J0LmF1dGhlbnRpY2F0ZShcImp3dFwiLCB7IHNlc3Npb246IGZhbHNlIH0pO1xuZXhwb3J0IGNvbnN0IHJlcXVpcmVTaWduSW4gPSBwYXNzcG9ydC5hdXRoZW50aWNhdGUoXCJsb2NhbFwiLCB7IHNlc3Npb246IGZhbHNlIH0pOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "auth.middleware.js"
      ],
      "names": [
        "passportService",
        "require",
        "passport",
        "requireAuth",
        "authenticate",
        "session",
        "requireSignIn"
      ],
      "mappings": ";;;;;;;AAAA,IAAMA,eAAe,GAAGC,OAAO,CAAC,YAAD,CAA/B;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB,C,CAEA;;;AACO,IAAME,WAAW,GAAGD,QAAQ,CAACE,YAAT,CAAsB,KAAtB,EAA6B;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAA7B,CAApB;;AACA,IAAMC,aAAa,GAAGJ,QAAQ,CAACE,YAAT,CAAsB,OAAtB,EAA+B;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAA/B,CAAtB",
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\aurthorization\\",
      "sourcesContent": [
        "const passportService = require(\"./passport\");\nconst passport = require(\"passport\");\n\n// Create the interceptor and ensure that the cookie is turned off\nexport const requireAuth = passport.authenticate(\"jwt\", { session: false });\nexport const requireSignIn = passport.authenticate(\"local\", { session: false });"
      ]
    },
    "sourceType": "script",
    "mtime": 1594986604000
  },
  "{\"sourceRoot\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\aurthorization\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"filename\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\aurthorization\\\\passport.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\aurthorization\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\harsh\\social-share-backend-nikund",
      "filename": "D:\\harsh\\social-share-backend-nikund\\aurthorization\\passport.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\harsh\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\harsh\\social-share-backend-nikund\\aurthorization\\passport.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\harsh\\social-share-backend-nikund\\aurthorization\\passport.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\aurthorization\\",
        "sourceFileName": "passport.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _passportJwt = require(\"passport-jwt\");\n\nvar _users = require(\"../api/users\");\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nvar _bcryptNodejs = _interopRequireDefault(require(\"bcrypt-nodejs\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar passport = require(\"passport\");\n\nvar LocalStrategy = require(\"passport-local\");\n\nvar JwtStrategy = require(\"passport-jwt\").Strategy;\n\nvar localOptions = {\n  usernameField: \"email\"\n};\nvar localLogin = new LocalStrategy(localOptions, /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(email, password, done) {\n    var emailRegexp, mobileNoRegexp, userExistence, validPassword, _userExistence, _validPassword;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            emailRegexp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n            mobileNoRegexp = /\\(?\\d{3}\\)?-? *\\d{3}-? *-?\\d{6}/;\n\n            if (!emailRegexp.test(email)) {\n              _context.next = 17;\n              break;\n            }\n\n            _context.next = 6;\n            return _users.Users.findOne({\n              emailId: email.toLowerCase()\n            });\n\n          case 6:\n            userExistence = _context.sent;\n\n            if (userExistence) {\n              _context.next = 9;\n              break;\n            }\n\n            return _context.abrupt(\"return\", done(\"Either Password or EmailId Doesn't match\", false));\n\n          case 9:\n            _context.next = 11;\n            return _bcryptNodejs[\"default\"].compareSync(password, userExistence.password);\n\n          case 11:\n            validPassword = _context.sent;\n\n            if (validPassword) {\n              _context.next = 14;\n              break;\n            }\n\n            return _context.abrupt(\"return\", done(\"Password is Incorrect Please try Again later\", false));\n\n          case 14:\n            return _context.abrupt(\"return\", done(null, userExistence));\n\n          case 17:\n            if (!mobileNoRegexp.test(email)) {\n              _context.next = 30;\n              break;\n            }\n\n            _context.next = 20;\n            return _users.Users.findOne({\n              mobileNo: email\n            });\n\n          case 20:\n            _userExistence = _context.sent;\n\n            if (_userExistence) {\n              _context.next = 23;\n              break;\n            }\n\n            return _context.abrupt(\"return\", done(\"Either Password or EmailId Doesn't match\", false));\n\n          case 23:\n            _context.next = 25;\n            return _bcryptNodejs[\"default\"].compareSync(password, _userExistence.password);\n\n          case 25:\n            _validPassword = _context.sent;\n            console.log(_validPassword);\n\n            if (_validPassword) {\n              _context.next = 29;\n              break;\n            }\n\n            return _context.abrupt(\"return\", done(\"Password is Incorrect Please try Again later\", false));\n\n          case 29:\n            return _context.abrupt(\"return\", done(null, _userExistence));\n\n          case 30:\n            _context.next = 36;\n            break;\n\n          case 32:\n            _context.prev = 32;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n            return _context.abrupt(\"return\", done(\"System was unable to process the details\", false));\n\n          case 36:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 32]]);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}());\npassport.use(localLogin);\nvar jwtOptions = {\n  jwtFromRequest: _passportJwt.ExtractJwt.fromHeader(\"authorization\"),\n  secretOrKey: _config[\"default\"].secrets.JWT_SECRET\n};\nvar jwtLogin = new JwtStrategy(jwtOptions, function (jwt_payload, done) {\n  console.log(\"CHECKING LOGIN USING JWT\");\n\n  _users.Users.findOne({\n    emailId: jwt_payload.sub\n  }, function (err, user) {\n    if (err) {\n      return done(err.message, false);\n    }\n\n    if (user) {\n      return done(null, user);\n    } else {\n      return done(null, false);\n    }\n  });\n});\npassport.use(jwtLogin);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhc3Nwb3J0LmpzIl0sIm5hbWVzIjpbInBhc3Nwb3J0IiwicmVxdWlyZSIsIkxvY2FsU3RyYXRlZ3kiLCJKd3RTdHJhdGVneSIsIlN0cmF0ZWd5IiwibG9jYWxPcHRpb25zIiwidXNlcm5hbWVGaWVsZCIsImxvY2FsTG9naW4iLCJlbWFpbCIsInBhc3N3b3JkIiwiZG9uZSIsImVtYWlsUmVnZXhwIiwibW9iaWxlTm9SZWdleHAiLCJ0ZXN0IiwiVXNlcnMiLCJmaW5kT25lIiwiZW1haWxJZCIsInRvTG93ZXJDYXNlIiwidXNlckV4aXN0ZW5jZSIsImJjcnlwdCIsImNvbXBhcmVTeW5jIiwidmFsaWRQYXNzd29yZCIsIm1vYmlsZU5vIiwiY29uc29sZSIsImxvZyIsInVzZSIsImp3dE9wdGlvbnMiLCJqd3RGcm9tUmVxdWVzdCIsIkV4dHJhY3RKd3QiLCJmcm9tSGVhZGVyIiwic2VjcmV0T3JLZXkiLCJjb25maWdLZXkiLCJzZWNyZXRzIiwiSldUX1NFQ1JFVCIsImp3dExvZ2luIiwiand0X3BheWxvYWQiLCJzdWIiLCJlcnIiLCJ1c2VyIiwibWVzc2FnZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7QUFHQSxJQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXhCOztBQUNBLElBQU1DLGFBQWEsR0FBR0QsT0FBTyxDQUFDLGdCQUFELENBQTdCOztBQUNBLElBQU1FLFdBQVcsR0FBR0YsT0FBTyxDQUFDLGNBQUQsQ0FBUCxDQUF3QkcsUUFBNUM7O0FBRUEsSUFBTUMsWUFBWSxHQUFHO0FBQ2pCQyxFQUFBQSxhQUFhLEVBQUU7QUFERSxDQUFyQjtBQUlBLElBQU1DLFVBQVUsR0FBRyxJQUFJTCxhQUFKLENBQ2ZHLFlBRGU7QUFBQSxxRUFFZixpQkFBT0csS0FBUCxFQUFjQyxRQUFkLEVBQXdCQyxJQUF4QjtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFY0MsWUFBQUEsV0FGZCxHQUU0QiwrQ0FGNUI7QUFHY0MsWUFBQUEsY0FIZCxHQUcrQixpQ0FIL0I7O0FBQUEsaUJBSVdELFdBQVcsQ0FBQ0UsSUFBWixDQUFpQkwsS0FBakIsQ0FKWDtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBLG1CQUt3Q00sYUFBTUMsT0FBTixDQUFjO0FBQUNDLGNBQUFBLE9BQU8sRUFBQ1IsS0FBSyxDQUFDUyxXQUFOO0FBQVQsYUFBZCxDQUx4Qzs7QUFBQTtBQUtrQkMsWUFBQUEsYUFMbEI7O0FBQUEsZ0JBTWdCQSxhQU5oQjtBQUFBO0FBQUE7QUFBQTs7QUFBQSw2Q0FPdUJSLElBQUksQ0FBQywwQ0FBRCxFQUE0QyxLQUE1QyxDQVAzQjs7QUFBQTtBQUFBO0FBQUEsbUJBU3dDUyx5QkFBT0MsV0FBUCxDQUFtQlgsUUFBbkIsRUFBNkJTLGFBQWEsQ0FBQ1QsUUFBM0MsQ0FUeEM7O0FBQUE7QUFTa0JZLFlBQUFBLGFBVGxCOztBQUFBLGdCQVdnQkEsYUFYaEI7QUFBQTtBQUFBO0FBQUE7O0FBQUEsNkNBWXVCWCxJQUFJLENBQUMsOENBQUQsRUFBZ0QsS0FBaEQsQ0FaM0I7O0FBQUE7QUFBQSw2Q0FjbUJBLElBQUksQ0FBRSxJQUFGLEVBQU9RLGFBQVAsQ0FkdkI7O0FBQUE7QUFBQSxpQkFnQmdCTixjQUFjLENBQUNDLElBQWYsQ0FBb0JMLEtBQXBCLENBaEJoQjtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBLG1CQWlCd0NNLGFBQU1DLE9BQU4sQ0FBYztBQUFDTyxjQUFBQSxRQUFRLEVBQUNkO0FBQVYsYUFBZCxDQWpCeEM7O0FBQUE7QUFpQmtCVSxZQUFBQSxjQWpCbEI7O0FBQUEsZ0JBbUJnQkEsY0FuQmhCO0FBQUE7QUFBQTtBQUFBOztBQUFBLDZDQW9CdUJSLElBQUksQ0FBQywwQ0FBRCxFQUE0QyxLQUE1QyxDQXBCM0I7O0FBQUE7QUFBQTtBQUFBLG1CQXNCd0NTLHlCQUFPQyxXQUFQLENBQW1CWCxRQUFuQixFQUE2QlMsY0FBYSxDQUFDVCxRQUEzQyxDQXRCeEM7O0FBQUE7QUFzQmtCWSxZQUFBQSxjQXRCbEI7QUF1QllFLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSCxjQUFaOztBQXZCWixnQkF3QmdCQSxjQXhCaEI7QUFBQTtBQUFBO0FBQUE7O0FBQUEsNkNBeUJ1QlgsSUFBSSxDQUFDLDhDQUFELEVBQWdELEtBQWhELENBekIzQjs7QUFBQTtBQUFBLDZDQTJCbUJBLElBQUksQ0FBRSxJQUFGLEVBQU9RLGNBQVAsQ0EzQnZCOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUErQlFLLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUjtBQS9CUiw2Q0FnQ2VkLElBQUksQ0FBQywwQ0FBRCxFQUE2QyxLQUE3QyxDQWhDbkI7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FGZTs7QUFBQTtBQUFBO0FBQUE7QUFBQSxJQUFuQjtBQXVDQVYsUUFBUSxDQUFDeUIsR0FBVCxDQUFhbEIsVUFBYjtBQUVBLElBQU1tQixVQUFVLEdBQUc7QUFDZkMsRUFBQUEsY0FBYyxFQUFFQyx3QkFBV0MsVUFBWCxDQUFzQixlQUF0QixDQUREO0FBRWZDLEVBQUFBLFdBQVcsRUFBRUMsbUJBQVVDLE9BQVYsQ0FBa0JDO0FBRmhCLENBQW5CO0FBS0EsSUFBTUMsUUFBUSxHQUFHLElBQUkvQixXQUFKLENBQWdCdUIsVUFBaEIsRUFBNEIsVUFBQ1MsV0FBRCxFQUFjekIsSUFBZCxFQUFxQjtBQUM5RGEsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMEJBQVo7O0FBQ0FWLGVBQU1DLE9BQU4sQ0FBYztBQUFDQyxJQUFBQSxPQUFPLEVBQUNtQixXQUFXLENBQUNDO0FBQXJCLEdBQWQsRUFDSSxVQUFDQyxHQUFELEVBQU1DLElBQU4sRUFBYTtBQUNULFFBQUdELEdBQUgsRUFBTztBQUNILGFBQU8zQixJQUFJLENBQUMyQixHQUFHLENBQUNFLE9BQUwsRUFBYyxLQUFkLENBQVg7QUFDSDs7QUFDRCxRQUFJRCxJQUFKLEVBQVU7QUFDTixhQUFPNUIsSUFBSSxDQUFDLElBQUQsRUFBTzRCLElBQVAsQ0FBWDtBQUNILEtBRkQsTUFFTztBQUNILGFBQU81QixJQUFJLENBQUMsSUFBRCxFQUFPLEtBQVAsQ0FBWDtBQUNIO0FBQ1IsR0FWRDtBQVdILENBYmdCLENBQWpCO0FBY0FWLFFBQVEsQ0FBQ3lCLEdBQVQsQ0FBYVMsUUFBYiIsInNvdXJjZVJvb3QiOiJEOlxcaGFyc2hcXHNvY2lhbC1zaGFyZS1iYWNrZW5kLW5pa3VuZFxcYXVydGhvcml6YXRpb25cXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV4dHJhY3RKd3QgfSBmcm9tICdwYXNzcG9ydC1qd3QnXG5pbXBvcnQge1VzZXJzfSBmcm9tICcuLi9hcGkvdXNlcnMnXG5pbXBvcnQgY29uZmlnS2V5IGZyb20gJy4uL2NvbmZpZydcbmltcG9ydCBiY3J5cHQgZnJvbSAnYmNyeXB0LW5vZGVqcydcblxuXG5jb25zdCBwYXNzcG9ydCA9IHJlcXVpcmUoXCJwYXNzcG9ydFwiKTtcbmNvbnN0IExvY2FsU3RyYXRlZ3kgPSByZXF1aXJlKFwicGFzc3BvcnQtbG9jYWxcIik7XG5jb25zdCBKd3RTdHJhdGVneSA9IHJlcXVpcmUoXCJwYXNzcG9ydC1qd3RcIikuU3RyYXRlZ3k7XG5cbmNvbnN0IGxvY2FsT3B0aW9ucyA9IHtcbiAgICB1c2VybmFtZUZpZWxkOiBcImVtYWlsXCJcbiAgfTtcblxuY29uc3QgbG9jYWxMb2dpbiA9IG5ldyBMb2NhbFN0cmF0ZWd5KFxuICAgIGxvY2FsT3B0aW9ucyxcbiAgICBhc3luYyAoZW1haWwsIHBhc3N3b3JkLCBkb25lKT0+e1xuICAgICAgICB0cnl7XG4gICAgICAgICAgICBjb25zdCBlbWFpbFJlZ2V4cCA9IC9eXFx3KyhbXFwuLV0/XFx3KykqQFxcdysoW1xcLi1dP1xcdyspKihcXC5cXHd7MiwzfSkrJC87XG4gICAgICAgICAgICBjb25zdCBtb2JpbGVOb1JlZ2V4cCA9IC9cXCg/XFxkezN9XFwpPy0/ICpcXGR7M30tPyAqLT9cXGR7Nn0vO1xuICAgICAgICAgICAgaWYoZW1haWxSZWdleHAudGVzdChlbWFpbCkpe1xuICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJFeGlzdGVuY2UgPSBhd2FpdCBVc2Vycy5maW5kT25lKHtlbWFpbElkOmVtYWlsLnRvTG93ZXJDYXNlKCl9KVxuICAgICAgICAgICAgICAgIGlmKCF1c2VyRXhpc3RlbmNlKXtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRvbmUoXCJFaXRoZXIgUGFzc3dvcmQgb3IgRW1haWxJZCBEb2Vzbid0IG1hdGNoXCIsZmFsc2UpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zdCB2YWxpZFBhc3N3b3JkID0gYXdhaXQgYmNyeXB0LmNvbXBhcmVTeW5jKHBhc3N3b3JkLCB1c2VyRXhpc3RlbmNlLnBhc3N3b3JkKTtcbiAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKHZhbGlkUGFzc3dvcmQpXG4gICAgICAgICAgICAgICAgaWYoIXZhbGlkUGFzc3dvcmQpe1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZG9uZShcIlBhc3N3b3JkIGlzIEluY29ycmVjdCBQbGVhc2UgdHJ5IEFnYWluIGxhdGVyXCIsZmFsc2UpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gZG9uZSAobnVsbCx1c2VyRXhpc3RlbmNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYobW9iaWxlTm9SZWdleHAudGVzdChlbWFpbCkpe1xuICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJFeGlzdGVuY2UgPSBhd2FpdCBVc2Vycy5maW5kT25lKHttb2JpbGVObzplbWFpbH0pXG4gICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyh1c2VyRXhpc3RlbmNlKVxuICAgICAgICAgICAgICAgIGlmKCF1c2VyRXhpc3RlbmNlKXtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRvbmUoXCJFaXRoZXIgUGFzc3dvcmQgb3IgRW1haWxJZCBEb2Vzbid0IG1hdGNoXCIsZmFsc2UpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zdCB2YWxpZFBhc3N3b3JkID0gYXdhaXQgYmNyeXB0LmNvbXBhcmVTeW5jKHBhc3N3b3JkLCB1c2VyRXhpc3RlbmNlLnBhc3N3b3JkKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh2YWxpZFBhc3N3b3JkKVxuICAgICAgICAgICAgICAgIGlmKCF2YWxpZFBhc3N3b3JkKXtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRvbmUoXCJQYXNzd29yZCBpcyBJbmNvcnJlY3QgUGxlYXNlIHRyeSBBZ2FpbiBsYXRlclwiLGZhbHNlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRvbmUgKG51bGwsdXNlckV4aXN0ZW5jZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2goZXJyKXtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgICAgICByZXR1cm4gZG9uZShcIlN5c3RlbSB3YXMgdW5hYmxlIHRvIHByb2Nlc3MgdGhlIGRldGFpbHNcIiwgZmFsc2UpO1xuICAgICAgICB9XG4gICAgfVxuKVxuXG5wYXNzcG9ydC51c2UobG9jYWxMb2dpbik7XG5cbmNvbnN0IGp3dE9wdGlvbnMgPSB7XG4gICAgand0RnJvbVJlcXVlc3Q6IEV4dHJhY3RKd3QuZnJvbUhlYWRlcihcImF1dGhvcml6YXRpb25cIiksXG4gICAgc2VjcmV0T3JLZXk6IGNvbmZpZ0tleS5zZWNyZXRzLkpXVF9TRUNSRVRcbn1cblxuY29uc3Qgand0TG9naW4gPSBuZXcgSnd0U3RyYXRlZ3koand0T3B0aW9ucywgKGp3dF9wYXlsb2FkLCBkb25lKT0+e1xuICAgIGNvbnNvbGUubG9nKFwiQ0hFQ0tJTkcgTE9HSU4gVVNJTkcgSldUXCIpO1xuICAgIFVzZXJzLmZpbmRPbmUoe2VtYWlsSWQ6and0X3BheWxvYWQuc3VifSxcbiAgICAgICAgKGVyciwgdXNlcik9PntcbiAgICAgICAgICAgIGlmKGVycil7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRvbmUoZXJyLm1lc3NhZ2UsIGZhbHNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh1c2VyKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRvbmUobnVsbCwgdXNlcik7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiBkb25lKG51bGwsIGZhbHNlKTtcbiAgICAgICAgICAgIH1cbiAgICB9KVxufSlcbnBhc3Nwb3J0LnVzZShqd3RMb2dpbik7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "passport.js"
      ],
      "names": [
        "passport",
        "require",
        "LocalStrategy",
        "JwtStrategy",
        "Strategy",
        "localOptions",
        "usernameField",
        "localLogin",
        "email",
        "password",
        "done",
        "emailRegexp",
        "mobileNoRegexp",
        "test",
        "Users",
        "findOne",
        "emailId",
        "toLowerCase",
        "userExistence",
        "bcrypt",
        "compareSync",
        "validPassword",
        "mobileNo",
        "console",
        "log",
        "use",
        "jwtOptions",
        "jwtFromRequest",
        "ExtractJwt",
        "fromHeader",
        "secretOrKey",
        "configKey",
        "secrets",
        "JWT_SECRET",
        "jwtLogin",
        "jwt_payload",
        "sub",
        "err",
        "user",
        "message"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\aurthorization\\",
      "sourcesContent": [
        "import { ExtractJwt } from 'passport-jwt'\nimport {Users} from '../api/users'\nimport configKey from '../config'\nimport bcrypt from 'bcrypt-nodejs'\n\n\nconst passport = require(\"passport\");\nconst LocalStrategy = require(\"passport-local\");\nconst JwtStrategy = require(\"passport-jwt\").Strategy;\n\nconst localOptions = {\n    usernameField: \"email\"\n  };\n\nconst localLogin = new LocalStrategy(\n    localOptions,\n    async (email, password, done)=>{\n        try{\n            const emailRegexp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n            const mobileNoRegexp = /\\(?\\d{3}\\)?-? *\\d{3}-? *-?\\d{6}/;\n            if(emailRegexp.test(email)){\n                const userExistence = await Users.findOne({emailId:email.toLowerCase()})\n                if(!userExistence){\n                    return done(\"Either Password or EmailId Doesn't match\",false);\n                }\n                const validPassword = await bcrypt.compareSync(password, userExistence.password);\n                //console.log(validPassword)\n                if(!validPassword){\n                    return done(\"Password is Incorrect Please try Again later\",false);\n                }\n                return done (null,userExistence);\n            }\n            else if(mobileNoRegexp.test(email)){\n                const userExistence = await Users.findOne({mobileNo:email})\n                //console.log(userExistence)\n                if(!userExistence){\n                    return done(\"Either Password or EmailId Doesn't match\",false);\n                }\n                const validPassword = await bcrypt.compareSync(password, userExistence.password);\n                console.log(validPassword)\n                if(!validPassword){\n                    return done(\"Password is Incorrect Please try Again later\",false);\n                }\n                return done (null,userExistence);\n            }\n        }\n        catch(err){\n            console.log(err);\n            return done(\"System was unable to process the details\", false);\n        }\n    }\n)\n\npassport.use(localLogin);\n\nconst jwtOptions = {\n    jwtFromRequest: ExtractJwt.fromHeader(\"authorization\"),\n    secretOrKey: configKey.secrets.JWT_SECRET\n}\n\nconst jwtLogin = new JwtStrategy(jwtOptions, (jwt_payload, done)=>{\n    console.log(\"CHECKING LOGIN USING JWT\");\n    Users.findOne({emailId:jwt_payload.sub},\n        (err, user)=>{\n            if(err){\n                return done(err.message, false);\n            }\n            if (user) {\n                return done(null, user);\n            } else {\n                return done(null, false);\n            }\n    })\n})\npassport.use(jwtLogin);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1594986604000
  },
  "{\"sourceRoot\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"filename\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\restRouter.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\harsh\\social-share-backend-nikund",
      "filename": "D:\\harsh\\social-share-backend-nikund\\api\\restRouter.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\harsh\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\harsh\\social-share-backend-nikund\\api\\restRouter.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\harsh\\social-share-backend-nikund\\api\\restRouter.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\",
        "sourceFileName": "restRouter.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.restRouter = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _users = require(\"./users\");\n\nvar _Friends = require(\"./Friends\");\n\nvar _photos = require(\"./photos\");\n\nvar _notification = require(\"./notification/notification.restRoute\");\n\nvar _about = require(\"./about\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar restRouter = _express[\"default\"].Router();\n\nexports.restRouter = restRouter;\nrestRouter.use('/about', _about.aboutRouter);\nrestRouter.use('/photos', _photos.photosRouter);\nrestRouter.use('/user', _users.userRouter);\nrestRouter.use('/friend', _Friends.friendRouter);\nrestRouter.use('/notification', _notification.notificationRouter); // restRouter.use('/matirial',materialRouter);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc3RSb3V0ZXIuanMiXSwibmFtZXMiOlsicmVzdFJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJ1c2UiLCJhYm91dFJvdXRlciIsInBob3Rvc1JvdXRlciIsInVzZXJSb3V0ZXIiLCJmcmllbmRSb3V0ZXIiLCJub3RpZmljYXRpb25Sb3V0ZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVPLElBQU1BLFVBQVUsR0FBR0Msb0JBQVFDLE1BQVIsRUFBbkI7OztBQUVQRixVQUFVLENBQUNHLEdBQVgsQ0FBZSxRQUFmLEVBQXdCQyxrQkFBeEI7QUFDQUosVUFBVSxDQUFDRyxHQUFYLENBQWUsU0FBZixFQUF5QkUsb0JBQXpCO0FBQ0FMLFVBQVUsQ0FBQ0csR0FBWCxDQUFlLE9BQWYsRUFBdUJHLGlCQUF2QjtBQUNBTixVQUFVLENBQUNHLEdBQVgsQ0FBZSxTQUFmLEVBQXlCSSxxQkFBekI7QUFDQVAsVUFBVSxDQUFDRyxHQUFYLENBQWUsZUFBZixFQUErQkssZ0NBQS9CLEUsQ0FDQSIsInNvdXJjZVJvb3QiOiJEOlxcaGFyc2hcXHNvY2lhbC1zaGFyZS1iYWNrZW5kLW5pa3VuZFxcYXBpXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJ1xuaW1wb3J0IHt1c2VyUm91dGVyfSBmcm9tICcuL3VzZXJzJ1xuaW1wb3J0IHtmcmllbmRSb3V0ZXJ9IGZyb20gJy4vRnJpZW5kcydcbmltcG9ydCB7cGhvdG9zUm91dGVyfSBmcm9tICcuL3Bob3RvcydcbmltcG9ydCB7IG5vdGlmaWNhdGlvblJvdXRlciB9IGZyb20gJy4vbm90aWZpY2F0aW9uL25vdGlmaWNhdGlvbi5yZXN0Um91dGUnO1xuaW1wb3J0IHthYm91dFJvdXRlcn0gZnJvbSAnLi9hYm91dCdcblxuZXhwb3J0IGNvbnN0IHJlc3RSb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG5yZXN0Um91dGVyLnVzZSgnL2Fib3V0JyxhYm91dFJvdXRlcilcbnJlc3RSb3V0ZXIudXNlKCcvcGhvdG9zJyxwaG90b3NSb3V0ZXIpXG5yZXN0Um91dGVyLnVzZSgnL3VzZXInLHVzZXJSb3V0ZXIpXG5yZXN0Um91dGVyLnVzZSgnL2ZyaWVuZCcsZnJpZW5kUm91dGVyKVxucmVzdFJvdXRlci51c2UoJy9ub3RpZmljYXRpb24nLG5vdGlmaWNhdGlvblJvdXRlcilcbi8vIHJlc3RSb3V0ZXIudXNlKCcvbWF0aXJpYWwnLG1hdGVyaWFsUm91dGVyKTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "restRouter.js"
      ],
      "names": [
        "restRouter",
        "express",
        "Router",
        "use",
        "aboutRouter",
        "photosRouter",
        "userRouter",
        "friendRouter",
        "notificationRouter"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEO,IAAMA,UAAU,GAAGC,oBAAQC,MAAR,EAAnB;;;AAEPF,UAAU,CAACG,GAAX,CAAe,QAAf,EAAwBC,kBAAxB;AACAJ,UAAU,CAACG,GAAX,CAAe,SAAf,EAAyBE,oBAAzB;AACAL,UAAU,CAACG,GAAX,CAAe,OAAf,EAAuBG,iBAAvB;AACAN,UAAU,CAACG,GAAX,CAAe,SAAf,EAAyBI,qBAAzB;AACAP,UAAU,CAACG,GAAX,CAAe,eAAf,EAA+BK,gCAA/B,E,CACA",
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\",
      "sourcesContent": [
        "import express from 'express'\nimport {userRouter} from './users'\nimport {friendRouter} from './Friends'\nimport {photosRouter} from './photos'\nimport { notificationRouter } from './notification/notification.restRoute';\nimport {aboutRouter} from './about'\n\nexport const restRouter = express.Router();\n\nrestRouter.use('/about',aboutRouter)\nrestRouter.use('/photos',photosRouter)\nrestRouter.use('/user',userRouter)\nrestRouter.use('/friend',friendRouter)\nrestRouter.use('/notification',notificationRouter)\n// restRouter.use('/matirial',materialRouter);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1596606752000
  },
  "{\"sourceRoot\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\Friends\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"filename\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\Friends\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\Friends\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\harsh\\social-share-backend-nikund",
      "filename": "D:\\harsh\\social-share-backend-nikund\\api\\Friends\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\harsh\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\harsh\\social-share-backend-nikund\\api\\Friends\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\harsh\\social-share-backend-nikund\\api\\Friends\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\Friends\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _friend = require(\"./friend.modal\");\n\nObject.keys(_friend).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _friend[key];\n    }\n  });\n});\n\nvar _friend2 = require(\"./friend.restRoute\");\n\nObject.keys(_friend2).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _friend2[key];\n    }\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFDQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEiLCJzb3VyY2VSb290IjoiRDpcXGhhcnNoXFxzb2NpYWwtc2hhcmUtYmFja2VuZC1uaWt1bmRcXGFwaVxcRnJpZW5kc1xcIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi9mcmllbmQubW9kYWwnO1xuZXhwb3J0ICogZnJvbSAnLi9mcmllbmQucmVzdFJvdXRlJyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [],
      "mappings": ";;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA",
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\Friends\\",
      "sourcesContent": [
        "export * from './friend.modal';\nexport * from './friend.restRoute'"
      ]
    },
    "sourceType": "script",
    "mtime": 1594986600000
  },
  "{\"sourceRoot\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\Friends\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"filename\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\Friends\\\\friend.modal.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\Friends\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\harsh\\social-share-backend-nikund",
      "filename": "D:\\harsh\\social-share-backend-nikund\\api\\Friends\\friend.modal.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\harsh\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\harsh\\social-share-backend-nikund\\api\\Friends\\friend.modal.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\harsh\\social-share-backend-nikund\\api\\Friends\\friend.modal.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\Friends\\",
        "sourceFileName": "friend.modal.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FriendList = void 0;\n\nvar _mongoose = _interopRequireWildcard(require(\"mongoose\"));\n\nvar _mongooseTimestamp = _interopRequireDefault(require(\"mongoose-timestamp\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar friendSchema = (0, _mongoose.Schema)({\n  userId: String,\n  friendList: Array,\n  getRequest: Array,\n  sentRequest: Array\n}, {\n  timestamps: {\n    createdAt: 'created_at'\n  }\n});\n\nvar FriendList = _mongoose[\"default\"].model('FriendDocument', friendSchema);\n\nexports.FriendList = FriendList;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZyaWVuZC5tb2RhbC5qcyJdLCJuYW1lcyI6WyJmcmllbmRTY2hlbWEiLCJ1c2VySWQiLCJTdHJpbmciLCJmcmllbmRMaXN0IiwiQXJyYXkiLCJnZXRSZXF1ZXN0Iiwic2VudFJlcXVlc3QiLCJ0aW1lc3RhbXBzIiwiY3JlYXRlZEF0IiwiRnJpZW5kTGlzdCIsIm1vbmdvb3NlIiwibW9kZWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7OztBQUVBLElBQU1BLFlBQVksR0FBRyxzQkFBTztBQUN4QkMsRUFBQUEsTUFBTSxFQUFDQyxNQURpQjtBQUV4QkMsRUFBQUEsVUFBVSxFQUFDQyxLQUZhO0FBR3hCQyxFQUFBQSxVQUFVLEVBQUNELEtBSGE7QUFJeEJFLEVBQUFBLFdBQVcsRUFBQ0Y7QUFKWSxDQUFQLEVBS2xCO0FBQUVHLEVBQUFBLFVBQVUsRUFBRTtBQUFDQyxJQUFBQSxTQUFTLEVBQUM7QUFBWDtBQUFkLENBTGtCLENBQXJCOztBQU9PLElBQU1DLFVBQVUsR0FBR0MscUJBQVNDLEtBQVQsQ0FBZSxnQkFBZixFQUFnQ1gsWUFBaEMsQ0FBbkIiLCJzb3VyY2VSb290IjoiRDpcXGhhcnNoXFxzb2NpYWwtc2hhcmUtYmFja2VuZC1uaWt1bmRcXGFwaVxcRnJpZW5kc1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlLCB7U2NoZW1hfSBmcm9tICdtb25nb29zZSc7XG5pbXBvcnQgdGltZXN0YW1wcyBmcm9tIFwibW9uZ29vc2UtdGltZXN0YW1wXCI7XG5cbmNvbnN0IGZyaWVuZFNjaGVtYSA9IFNjaGVtYSh7XG4gICAgdXNlcklkOlN0cmluZyxcbiAgICBmcmllbmRMaXN0OkFycmF5LFxuICAgIGdldFJlcXVlc3Q6QXJyYXksXG4gICAgc2VudFJlcXVlc3Q6QXJyYXlcbn0sIHsgdGltZXN0YW1wczoge2NyZWF0ZWRBdDonY3JlYXRlZF9hdCd9IH0pXG5cbmV4cG9ydCBjb25zdCBGcmllbmRMaXN0ID0gbW9uZ29vc2UubW9kZWwoJ0ZyaWVuZERvY3VtZW50JyxmcmllbmRTY2hlbWEpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "friend.modal.js"
      ],
      "names": [
        "friendSchema",
        "userId",
        "String",
        "friendList",
        "Array",
        "getRequest",
        "sentRequest",
        "timestamps",
        "createdAt",
        "FriendList",
        "mongoose",
        "model"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;;;;;;;AAEA,IAAMA,YAAY,GAAG,sBAAO;AACxBC,EAAAA,MAAM,EAACC,MADiB;AAExBC,EAAAA,UAAU,EAACC,KAFa;AAGxBC,EAAAA,UAAU,EAACD,KAHa;AAIxBE,EAAAA,WAAW,EAACF;AAJY,CAAP,EAKlB;AAAEG,EAAAA,UAAU,EAAE;AAACC,IAAAA,SAAS,EAAC;AAAX;AAAd,CALkB,CAArB;;AAOO,IAAMC,UAAU,GAAGC,qBAASC,KAAT,CAAe,gBAAf,EAAgCX,YAAhC,CAAnB",
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\Friends\\",
      "sourcesContent": [
        "import mongoose, {Schema} from 'mongoose';\nimport timestamps from \"mongoose-timestamp\";\n\nconst friendSchema = Schema({\n    userId:String,\n    friendList:Array,\n    getRequest:Array,\n    sentRequest:Array\n}, { timestamps: {createdAt:'created_at'} })\n\nexport const FriendList = mongoose.model('FriendDocument',friendSchema);"
      ]
    },
    "sourceType": "script",
    "mtime": 1594986600000
  },
  "{\"sourceRoot\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\Friends\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"filename\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\Friends\\\\friend.restRoute.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\Friends\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\harsh\\social-share-backend-nikund",
      "filename": "D:\\harsh\\social-share-backend-nikund\\api\\Friends\\friend.restRoute.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\harsh\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\harsh\\social-share-backend-nikund\\api\\Friends\\friend.restRoute.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\harsh\\social-share-backend-nikund\\api\\Friends\\friend.restRoute.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\Friends\\",
        "sourceFileName": "friend.restRoute.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.friendRouter = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _friend = require(\"./friend.controller\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar friendRouter = _express[\"default\"].Router();\n\nexports.friendRouter = friendRouter;\nfriendRouter.get(\"/\", _friend.allUser);\nfriendRouter.post(\"/send\", _friend.sentFriendRequest);\nfriendRouter.post('/accept', _friend.friendRequestAccept);\nfriendRouter.get('/show', _friend.getFriendList);\nfriendRouter.get('/requests', _friend.showFriendRequetList);\nfriendRouter.get('/requestsData', _friend.showRequestedFriEndData);\nfriendRouter.post(\"/reject\", _friend.rejectFriendRequest);\nfriendRouter.get('/suggest', _friend.suggestedFriend);\nfriendRouter.post('/removeRequest', _friend.removeSendRequest);\nfriendRouter.get(\"/sentRequests\", _friend.AllSentRequest);\nfriendRouter.get(\"/userList\", _friend.notYourFriend);\nfriendRouter.get(\"/search\", _friend.searchEngine);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZyaWVuZC5yZXN0Um91dGUuanMiXSwibmFtZXMiOlsiZnJpZW5kUm91dGVyIiwiZXhwcmVzcyIsIlJvdXRlciIsImdldCIsImFsbFVzZXIiLCJwb3N0Iiwic2VudEZyaWVuZFJlcXVlc3QiLCJmcmllbmRSZXF1ZXN0QWNjZXB0IiwiZ2V0RnJpZW5kTGlzdCIsInNob3dGcmllbmRSZXF1ZXRMaXN0Iiwic2hvd1JlcXVlc3RlZEZyaUVuZERhdGEiLCJyZWplY3RGcmllbmRSZXF1ZXN0Iiwic3VnZ2VzdGVkRnJpZW5kIiwicmVtb3ZlU2VuZFJlcXVlc3QiLCJBbGxTZW50UmVxdWVzdCIsIm5vdFlvdXJGcmllbmQiLCJzZWFyY2hFbmdpbmUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7OztBQWdCTyxJQUFNQSxZQUFZLEdBQUdDLG9CQUFRQyxNQUFSLEVBQXJCOzs7QUFFUEYsWUFBWSxDQUFDRyxHQUFiLENBQWlCLEdBQWpCLEVBQXFCQyxlQUFyQjtBQUNBSixZQUFZLENBQUNLLElBQWIsQ0FBa0IsT0FBbEIsRUFBMEJDLHlCQUExQjtBQUNBTixZQUFZLENBQUNLLElBQWIsQ0FBa0IsU0FBbEIsRUFBNEJFLDJCQUE1QjtBQUNBUCxZQUFZLENBQUNHLEdBQWIsQ0FBaUIsT0FBakIsRUFBeUJLLHFCQUF6QjtBQUNBUixZQUFZLENBQUNHLEdBQWIsQ0FBaUIsV0FBakIsRUFBNkJNLDRCQUE3QjtBQUNBVCxZQUFZLENBQUNHLEdBQWIsQ0FBaUIsZUFBakIsRUFBaUNPLCtCQUFqQztBQUNBVixZQUFZLENBQUNLLElBQWIsQ0FBa0IsU0FBbEIsRUFBNEJNLDJCQUE1QjtBQUNBWCxZQUFZLENBQUNHLEdBQWIsQ0FBaUIsVUFBakIsRUFBNEJTLHVCQUE1QjtBQUNBWixZQUFZLENBQUNLLElBQWIsQ0FBa0IsZ0JBQWxCLEVBQW1DUSx5QkFBbkM7QUFDQWIsWUFBWSxDQUFDRyxHQUFiLENBQWlCLGVBQWpCLEVBQWlDVyxzQkFBakM7QUFDQWQsWUFBWSxDQUFDRyxHQUFiLENBQWlCLFdBQWpCLEVBQTZCWSxxQkFBN0I7QUFDQWYsWUFBWSxDQUFDRyxHQUFiLENBQWlCLFNBQWpCLEVBQTJCYSxvQkFBM0IiLCJzb3VyY2VSb290IjoiRDpcXGhhcnNoXFxzb2NpYWwtc2hhcmUtYmFja2VuZC1uaWt1bmRcXGFwaVxcRnJpZW5kc1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcydcbmltcG9ydCB7XG4gICAgc2VudEZyaWVuZFJlcXVlc3QsXG4gICAgZnJpZW5kUmVxdWVzdEFjY2VwdCxcbiAgICBnZXRGcmllbmRMaXN0LFxuICAgIHNob3dGcmllbmRSZXF1ZXRMaXN0LFxuICAgIHJlamVjdEZyaWVuZFJlcXVlc3QsXG4gICAgc3VnZ2VzdGVkRnJpZW5kLFxuICAgIGFsbFVzZXIsXG4gICAgcmVtb3ZlU2VuZFJlcXVlc3QsXG4gICAgQWxsU2VudFJlcXVlc3QsXG4gICAgc2hvd1JlcXVlc3RlZEZyaUVuZERhdGEsXG4gICAgbm90WW91ckZyaWVuZCxcbiAgICBzZWFyY2hFbmdpbmVcbiBcblxufSBmcm9tICcuL2ZyaWVuZC5jb250cm9sbGVyJ1xuZXhwb3J0IGNvbnN0IGZyaWVuZFJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbmZyaWVuZFJvdXRlci5nZXQoXCIvXCIsYWxsVXNlcilcbmZyaWVuZFJvdXRlci5wb3N0KFwiL3NlbmRcIixzZW50RnJpZW5kUmVxdWVzdClcbmZyaWVuZFJvdXRlci5wb3N0KCcvYWNjZXB0JyxmcmllbmRSZXF1ZXN0QWNjZXB0KVxuZnJpZW5kUm91dGVyLmdldCgnL3Nob3cnLGdldEZyaWVuZExpc3QpXG5mcmllbmRSb3V0ZXIuZ2V0KCcvcmVxdWVzdHMnLHNob3dGcmllbmRSZXF1ZXRMaXN0KVxuZnJpZW5kUm91dGVyLmdldCgnL3JlcXVlc3RzRGF0YScsc2hvd1JlcXVlc3RlZEZyaUVuZERhdGEpXG5mcmllbmRSb3V0ZXIucG9zdChcIi9yZWplY3RcIixyZWplY3RGcmllbmRSZXF1ZXN0KVxuZnJpZW5kUm91dGVyLmdldCgnL3N1Z2dlc3QnLHN1Z2dlc3RlZEZyaWVuZClcbmZyaWVuZFJvdXRlci5wb3N0KCcvcmVtb3ZlUmVxdWVzdCcscmVtb3ZlU2VuZFJlcXVlc3QpXG5mcmllbmRSb3V0ZXIuZ2V0KFwiL3NlbnRSZXF1ZXN0c1wiLEFsbFNlbnRSZXF1ZXN0KVxuZnJpZW5kUm91dGVyLmdldChcIi91c2VyTGlzdFwiLG5vdFlvdXJGcmllbmQpXG5mcmllbmRSb3V0ZXIuZ2V0KFwiL3NlYXJjaFwiLHNlYXJjaEVuZ2luZSkiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "friend.restRoute.js"
      ],
      "names": [
        "friendRouter",
        "express",
        "Router",
        "get",
        "allUser",
        "post",
        "sentFriendRequest",
        "friendRequestAccept",
        "getFriendList",
        "showFriendRequetList",
        "showRequestedFriEndData",
        "rejectFriendRequest",
        "suggestedFriend",
        "removeSendRequest",
        "AllSentRequest",
        "notYourFriend",
        "searchEngine"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAgBO,IAAMA,YAAY,GAAGC,oBAAQC,MAAR,EAArB;;;AAEPF,YAAY,CAACG,GAAb,CAAiB,GAAjB,EAAqBC,eAArB;AACAJ,YAAY,CAACK,IAAb,CAAkB,OAAlB,EAA0BC,yBAA1B;AACAN,YAAY,CAACK,IAAb,CAAkB,SAAlB,EAA4BE,2BAA5B;AACAP,YAAY,CAACG,GAAb,CAAiB,OAAjB,EAAyBK,qBAAzB;AACAR,YAAY,CAACG,GAAb,CAAiB,WAAjB,EAA6BM,4BAA7B;AACAT,YAAY,CAACG,GAAb,CAAiB,eAAjB,EAAiCO,+BAAjC;AACAV,YAAY,CAACK,IAAb,CAAkB,SAAlB,EAA4BM,2BAA5B;AACAX,YAAY,CAACG,GAAb,CAAiB,UAAjB,EAA4BS,uBAA5B;AACAZ,YAAY,CAACK,IAAb,CAAkB,gBAAlB,EAAmCQ,yBAAnC;AACAb,YAAY,CAACG,GAAb,CAAiB,eAAjB,EAAiCW,sBAAjC;AACAd,YAAY,CAACG,GAAb,CAAiB,WAAjB,EAA6BY,qBAA7B;AACAf,YAAY,CAACG,GAAb,CAAiB,SAAjB,EAA2Ba,oBAA3B",
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\Friends\\",
      "sourcesContent": [
        "import express from 'express'\nimport {\n    sentFriendRequest,\n    friendRequestAccept,\n    getFriendList,\n    showFriendRequetList,\n    rejectFriendRequest,\n    suggestedFriend,\n    allUser,\n    removeSendRequest,\n    AllSentRequest,\n    showRequestedFriEndData,\n    notYourFriend,\n    searchEngine\n \n\n} from './friend.controller'\nexport const friendRouter = express.Router();\n\nfriendRouter.get(\"/\",allUser)\nfriendRouter.post(\"/send\",sentFriendRequest)\nfriendRouter.post('/accept',friendRequestAccept)\nfriendRouter.get('/show',getFriendList)\nfriendRouter.get('/requests',showFriendRequetList)\nfriendRouter.get('/requestsData',showRequestedFriEndData)\nfriendRouter.post(\"/reject\",rejectFriendRequest)\nfriendRouter.get('/suggest',suggestedFriend)\nfriendRouter.post('/removeRequest',removeSendRequest)\nfriendRouter.get(\"/sentRequests\",AllSentRequest)\nfriendRouter.get(\"/userList\",notYourFriend)\nfriendRouter.get(\"/search\",searchEngine)"
      ]
    },
    "sourceType": "script",
    "mtime": 1597926378000
  },
  "{\"sourceRoot\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\Friends\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"filename\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\Friends\\\\friend.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\Friends\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\harsh\\social-share-backend-nikund",
      "filename": "D:\\harsh\\social-share-backend-nikund\\api\\Friends\\friend.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\harsh\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\harsh\\social-share-backend-nikund\\api\\Friends\\friend.controller.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\harsh\\social-share-backend-nikund\\api\\Friends\\friend.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\Friends\\",
        "sourceFileName": "friend.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.searchEngine = exports.notYourFriend = exports.AllSentRequest = exports.suggestedFriend = exports.rejectFriendRequest = exports.showRequestedFriEndData = exports.showFriendRequetList = exports.friendRequestAccept = exports.removeSendRequest = exports.sentFriendRequest = exports.getFriendList = exports.allUser = void 0;\n\nvar _friend = require(\"./friend.modal\");\n\nvar _user = require(\"../users/user.modal\");\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _config = _interopRequireDefault(require(\"../../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//push and query\nvar pullQuery = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(matchId, branchMatchId, branchName) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _friend.FriendList.updateOne({\n              userId: matchId\n            }, {\n              $pull: _defineProperty({}, branchName, {\n                friendId: branchMatchId\n              })\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function pullQuery(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar pushQuery = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(matchId, branchMatchId, branchName) {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _friend.FriendList.updateOne({\n              userId: matchId\n            }, {\n              $push: _defineProperty({}, branchName, {\n                $each: [{\n                  friendId: branchMatchId,\n                  date: new Date()\n                }]\n              })\n            });\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function pushQuery(_x4, _x5, _x6) {\n    return _ref2.apply(this, arguments);\n  };\n}(); //featch all user data\n\n\nvar allUser = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var decoded, user, userId, data;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 3:\n            decoded = _context3.sent;\n            _context3.next = 6;\n            return _user.Users.findOne({\n              emailId: decoded.sub\n            });\n\n          case 6:\n            user = _context3.sent;\n            userId = user._id;\n            console.log(userId);\n            _context3.next = 11;\n            return _user.Users.find({\n              _id: {\n                $not: {\n                  $eq: userId\n                }\n              }\n            }, {\n              _id: 1,\n              name: 1,\n              profileImgURl: 1\n            });\n\n          case 11:\n            data = _context3.sent;\n\n            if (!data) {\n              console.log(\"data not found\");\n            }\n\n            res.status(201).send({\n              success: true,\n              message: \"List fetched successfully\",\n              AllUser: [data]\n            });\n            _context3.next = 19;\n            break;\n\n          case 16:\n            _context3.prev = 16;\n            _context3.t0 = _context3[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context3.t0.message\n            });\n\n          case 19:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 16]]);\n  }));\n\n  return function allUser(_x7, _x8) {\n    return _ref3.apply(this, arguments);\n  };\n}(); //get friend list\n\n\nexports.allUser = allUser;\n\nvar getFriendList = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var userId, data, array, list, i, userData;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            userId = req.query.userId; //fetch the data of friendList\n\n            _context4.next = 4;\n            return _friend.FriendList.findOne({\n              userId: userId\n            });\n\n          case 4:\n            data = _context4.sent;\n            //check data fetched successfull or not\n            console.log(data);\n\n            if (data) {\n              _context4.next = 8;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", res.status(401).send({\n              success: false,\n              message: \"No friends to show\"\n            }));\n\n          case 8:\n            array = [];\n            list = data.friendList;\n            i = 0;\n\n          case 11:\n            if (!(i < list.length)) {\n              _context4.next = 19;\n              break;\n            }\n\n            _context4.next = 14;\n            return _user.Users.findOne({\n              _id: list[i].friendId\n            }, {\n              _id: 1,\n              name: 1,\n              profileImgURl: 1\n            });\n\n          case 14:\n            userData = _context4.sent;\n            array.push(userData);\n\n          case 16:\n            i++;\n            _context4.next = 11;\n            break;\n\n          case 19:\n            console.log(array); //send fetched data list\n\n            res.status(201).send({\n              success: true,\n              message: \"List fetched successfully\",\n              userInfo: array\n            });\n            _context4.next = 26;\n            break;\n\n          case 23:\n            _context4.prev = 23;\n            _context4.t0 = _context4[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context4.t0.message\n            });\n\n          case 26:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 23]]);\n  }));\n\n  return function getFriendList(_x9, _x10) {\n    return _ref4.apply(this, arguments);\n  };\n}(); //when user send friend request\n\n\nexports.getFriendList = getFriendList;\n\nvar sentFriendRequest = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var _req$body, userId, requestId, userFind, requestUserFind, findRequest;\n\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _req$body = req.body, userId = _req$body.userId, requestId = _req$body.requestId;\n            _context5.next = 4;\n            return _friend.FriendList.find({\n              userId: userId\n            });\n\n          case 4:\n            userFind = _context5.sent;\n            _context5.next = 7;\n            return _friend.FriendList.find({\n              userId: requestId\n            });\n\n          case 7:\n            requestUserFind = _context5.sent;\n\n            if (!(userFind <= 0)) {\n              _context5.next = 11;\n              break;\n            }\n\n            _context5.next = 11;\n            return _friend.FriendList.create({\n              userId: userId,\n              friendList: [],\n              getRequest: [],\n              sentRequest: []\n            });\n\n          case 11:\n            if (!(requestUserFind <= 0)) {\n              _context5.next = 14;\n              break;\n            }\n\n            _context5.next = 14;\n            return _friend.FriendList.create({\n              userId: requestId,\n              friendList: [],\n              getRequest: [],\n              sentRequest: []\n            });\n\n          case 14:\n            //find request inside datbase if found than send response false\n            findRequest = false;\n\n            if (!(!userFind.length <= 0)) {\n              _context5.next = 22;\n              break;\n            }\n\n            _context5.next = 18;\n            return userFind[0].getRequest.map(function (item) {\n              if (item.friendId == requestId) {\n                findRequest = true;\n              }\n            });\n\n          case 18:\n            _context5.next = 20;\n            return userFind[0].sentRequest.map(function (item) {\n              if (item.friendId == requestId) {\n                findRequest = true;\n              }\n            });\n\n          case 20:\n            _context5.next = 22;\n            return userFind[0].friendList.map(function (item) {\n              if (item.friendId == requestId) {\n                findRequest = true;\n              }\n            });\n\n          case 22:\n            if (!findRequest) {\n              _context5.next = 24;\n              break;\n            }\n\n            return _context5.abrupt(\"return\", res.status(401).send({\n              success: false,\n              message: \"friend request already sent or recive either you are already friends\"\n            }));\n\n          case 24:\n            //set request in database and send positive response\n            //pushQuery(matchId,BranchMatchId,BranchName);\n            pushQuery(userId, requestId, \"sentRequest\");\n            pushQuery(requestId, userId, \"getRequest\"); // const data = await Users.findById({_id:userId})\n            // console.log(data);\n            // const usernotification = await notificationList.findOne({userId:requestId})\n            //     if(!usernotification){\n            //         await notificationList.create({\n            //             userId:requestId,\n            //             notificaton:[]\n            //         })\n            //     }\n            // await notificationList.findOneAndUpdate({userId:requestId},{\n            //     $push:{notification : {\n            //         type : \"friend request\",\n            //         user: userId,\n            //         userprofile: data.profileImgURL,\n            //         content :data.userName + \" sent you friend Request\" ,\n            //         date : Date()\n            //     }}\n            // })\n\n            res.status(201).send({\n              success: true,\n              message: \"request sent successfully\"\n            });\n            _context5.next = 32;\n            break;\n\n          case 29:\n            _context5.prev = 29;\n            _context5.t0 = _context5[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context5.t0.message\n            });\n\n          case 32:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 29]]);\n  }));\n\n  return function sentFriendRequest(_x11, _x12) {\n    return _ref5.apply(this, arguments);\n  };\n}(); // delete sendrequest\n\n\nexports.sentFriendRequest = sentFriendRequest;\n\nvar removeSendRequest = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var _req$body2, userId, requestId;\n\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            _req$body2 = req.body, userId = _req$body2.userId, requestId = _req$body2.requestId;\n            pullQuery(userId, requestId, \"sentRequest\");\n            pullQuery(requestId, userId, \"getRequest\");\n            return _context6.abrupt(\"return\", res.status(201).send({\n              success: true,\n              message: \"remove request\"\n            }));\n\n          case 7:\n            _context6.prev = 7;\n            _context6.t0 = _context6[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context6.t0.message\n            });\n\n          case 10:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[0, 7]]);\n  }));\n\n  return function removeSendRequest(_x13, _x14) {\n    return _ref6.apply(this, arguments);\n  };\n}(); //when approve friend request\n\n\nexports.removeSendRequest = removeSendRequest;\n\nvar friendRequestAccept = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n    var _req$body3, userId, requestId, userFind, requestedUser, requestExist;\n\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.prev = 0;\n            _req$body3 = req.body, userId = _req$body3.userId, requestId = _req$body3.requestId;\n            _context7.next = 4;\n            return _friend.FriendList.find({\n              userId: userId\n            });\n\n          case 4:\n            userFind = _context7.sent;\n            _context7.next = 7;\n            return _user.Users.findById({\n              _id: requestId\n            });\n\n          case 7:\n            requestedUser = _context7.sent;\n            //console.log('user', requestedUser)\n            //find request exist or not if not then send negative response\n            requestExist = false;\n            userFind[0].getRequest.map(function (item) {\n              if (item.friendId == requestId) {\n                requestExist = true;\n              }\n            });\n\n            if (requestExist) {\n              _context7.next = 12;\n              break;\n            }\n\n            return _context7.abrupt(\"return\", res.status(401).send({\n              success: false,\n              message: \"Request are not exist\"\n            }));\n\n          case 12:\n            pushQuery(userId, requestId, \"friendList\");\n            pullQuery(userId, requestId, \"getRequest\");\n            pushQuery(requestId, userId, \"friendList\");\n            pullQuery(requestId, userId, \"sentRequest\"); // const data = await Users.findById({_id:userId})\n            // console.log(data);\n            // const usernotification = await notificationList.findOne({userId:requestId})\n            //     if(!usernotification){\n            //         await notificationList.create({\n            //             userId:requestId,\n            //             notificaton:[]\n            //         })\n            //     }\n            // await notificationList.findOneAndUpdate({userId:requestId},{\n            //     $push:{notification : {\n            //         type : \"accept request\",\n            //         user: userId,\n            //         content :data.userName + \" accept friend Request\" ,\n            //         userprofile: data.profileImgURL,\n            //         date : Date()\n            //     }}\n            // })\n\n            return _context7.abrupt(\"return\", res.status(200).send({\n              success: true,\n              message: \"you and \" + [requestedUser.userName] + \" are friend's now\"\n            }));\n\n          case 19:\n            _context7.prev = 19;\n            _context7.t0 = _context7[\"catch\"](0);\n            res.status(401).send({\n              success: true,\n              message: _context7.t0.message\n            });\n\n          case 22:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[0, 19]]);\n  }));\n\n  return function friendRequestAccept(_x15, _x16) {\n    return _ref7.apply(this, arguments);\n  };\n}(); //when user want friend request List\n\n\nexports.friendRequestAccept = friendRequestAccept;\n\nvar showFriendRequetList = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(req, res) {\n    var userId, userFind;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.prev = 0;\n            userId = req.query.id;\n            console.log(userId);\n            _context8.next = 5;\n            return _friend.FriendList.findOne({\n              userId: userId\n            });\n\n          case 5:\n            userFind = _context8.sent;\n\n            if (userFind) {\n              _context8.next = 9;\n              break;\n            }\n\n            _context8.next = 9;\n            return _friend.FriendList.create({\n              userId: userId,\n              friendList: [],\n              getRequest: [],\n              sentRequest: []\n            });\n\n          case 9:\n            if (userFind.getRequest.length <= 0) {\n              res.status(401).send({\n                success: false,\n                message: \"Not any friend request avilable\"\n              });\n            } else {\n              res.status(200).send({\n                success: true,\n                message: \"List found\",\n                list: userFind.getRequest.reverse()\n              });\n            }\n\n            _context8.next = 15;\n            break;\n\n          case 12:\n            _context8.prev = 12;\n            _context8.t0 = _context8[\"catch\"](0);\n            res.status(401).send({\n              success: true,\n              message: _context8.t0.message\n            });\n\n          case 15:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[0, 12]]);\n  }));\n\n  return function showFriendRequetList(_x17, _x18) {\n    return _ref8.apply(this, arguments);\n  };\n}(); //data of requested user data\n\n\nexports.showFriendRequetList = showFriendRequetList;\n\nvar showRequestedFriEndData = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(req, res) {\n    var userId, dataR, Friend, fList, i, d;\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.prev = 0;\n            userId = req.query.id;\n            console.log(userId);\n            dataR = [];\n            _context9.next = 6;\n            return _friend.FriendList.findOne({\n              userId: userId\n            });\n\n          case 6:\n            Friend = _context9.sent;\n            fList = Friend.getRequest;\n            console.log(fList);\n            i = 0;\n\n          case 10:\n            if (!(i < fList.length)) {\n              _context9.next = 18;\n              break;\n            }\n\n            _context9.next = 13;\n            return _user.Users.findById({\n              _id: fList[i].friendId\n            }, {\n              name: 1,\n              profileImgURl: 1\n            });\n\n          case 13:\n            d = _context9.sent;\n            // console.log(d);\n            dataR.push(d);\n\n          case 15:\n            i++;\n            _context9.next = 10;\n            break;\n\n          case 18:\n            console.log(dataR);\n            res.status(200).send({\n              success: true,\n              message: \"List found\",\n              list: dataR\n            });\n            _context9.next = 25;\n            break;\n\n          case 22:\n            _context9.prev = 22;\n            _context9.t0 = _context9[\"catch\"](0);\n            res.status(401).send({\n              success: true,\n              message: _context9.t0.message\n            });\n\n          case 25:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9, null, [[0, 22]]);\n  }));\n\n  return function showRequestedFriEndData(_x19, _x20) {\n    return _ref9.apply(this, arguments);\n  };\n}(); //when user reject friend request\n\n\nexports.showRequestedFriEndData = showRequestedFriEndData;\n\nvar rejectFriendRequest = /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(req, res) {\n    var _req$body4, userId, requestId;\n\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.prev = 0;\n            _req$body4 = req.body, userId = _req$body4.userId, requestId = _req$body4.requestId;\n            pullQuery(userId, requestId, \"getRequest\"); //remove request from user account\n\n            pullQuery(requestId, userId, \"sentRequest\"); //remove request from requested account\n\n            return _context10.abrupt(\"return\", res.status(201).send({\n              success: true,\n              message: \"reject successfully\"\n            }));\n\n          case 7:\n            _context10.prev = 7;\n            _context10.t0 = _context10[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context10.t0.message\n            });\n\n          case 10:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10, null, [[0, 7]]);\n  }));\n\n  return function rejectFriendRequest(_x21, _x22) {\n    return _ref10.apply(this, arguments);\n  };\n}(); //suggested friends\n// const getSuggestFriend = (friend) =>{\n// }\n\n\nexports.rejectFriendRequest = rejectFriendRequest;\n\nvar suggestedFriend = /*#__PURE__*/function () {\n  var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(req, res) {\n    var userId, friends, Fdata, i, suggest, data, Udata;\n    return regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _context12.prev = 0;\n            userId = req.body.userId;\n            _context12.next = 4;\n            return _friend.FriendList.findOne({\n              userId: userId\n            });\n\n          case 4:\n            friends = _context12.sent;\n            Fdata = [];\n\n            for (i = 0; i < friends.friendList.length; i++) {\n              Fdata.push(friends.friendList[i].friendId);\n            }\n\n            suggest = [];\n            _context12.next = 10;\n            return Promise.all(friends.friendList.map( /*#__PURE__*/function () {\n              var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(item) {\n                var findFriendOfFriend;\n                return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                  while (1) {\n                    switch (_context11.prev = _context11.next) {\n                      case 0:\n                        _context11.next = 2;\n                        return _friend.FriendList.findOne({\n                          userId: item.friendId\n                        });\n\n                      case 2:\n                        findFriendOfFriend = _context11.sent;\n                        _context11.next = 5;\n                        return Promise.all(findFriendOfFriend.friendList.map(function (items) {\n                          if (items.friendId != userId) {\n                            suggest.push(items.friendId);\n                          }\n                        }));\n\n                      case 5:\n                      case \"end\":\n                        return _context11.stop();\n                    }\n                  }\n                }, _callee11);\n              }));\n\n              return function (_x25) {\n                return _ref12.apply(this, arguments);\n              };\n            }()));\n\n          case 10:\n            data = suggest.filter(function (i) {\n              return this.indexOf(i) < 0;\n            }, Fdata);\n            _context12.next = 13;\n            return _user.Users.find({\n              _id: {\n                $in: data\n              }\n            }, {\n              _id: 1,\n              name: 1,\n              profileImgURl: 1\n            });\n\n          case 13:\n            Udata = _context12.sent;\n            return _context12.abrupt(\"return\", res.status(200).send({\n              success: true,\n              data: Udata\n            }));\n\n          case 17:\n            _context12.prev = 17;\n            _context12.t0 = _context12[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context12.t0.message\n            });\n\n          case 20:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12, null, [[0, 17]]);\n  }));\n\n  return function suggestedFriend(_x23, _x24) {\n    return _ref11.apply(this, arguments);\n  };\n}(); //show all sentReuest\n\n\nexports.suggestedFriend = suggestedFriend;\n\nvar AllSentRequest = /*#__PURE__*/function () {\n  var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(req, res) {\n    var decoded, data, userId, userFind;\n    return regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _context13.prev = 0;\n            _context13.next = 3;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 3:\n            decoded = _context13.sent;\n            _context13.next = 6;\n            return _user.Users.findOne({\n              emailId: decoded.sub\n            });\n\n          case 6:\n            data = _context13.sent;\n            userId = data._id;\n            console.log(userId);\n            _context13.next = 11;\n            return _friend.FriendList.findOne({\n              userId: userId\n            });\n\n          case 11:\n            userFind = _context13.sent;\n\n            if (userFind) {\n              _context13.next = 15;\n              break;\n            }\n\n            _context13.next = 15;\n            return _friend.FriendList.create({\n              userId: userId,\n              friendList: [],\n              getRequest: [],\n              sentRequest: []\n            });\n\n          case 15:\n            res.status(200).send({\n              success: true,\n              message: \"List found\",\n              list: userFind.sentRequest\n            });\n            _context13.next = 21;\n            break;\n\n          case 18:\n            _context13.prev = 18;\n            _context13.t0 = _context13[\"catch\"](0);\n            res.status(401).send({\n              success: true,\n              message: _context13.t0.message\n            });\n\n          case 21:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13, null, [[0, 18]]);\n  }));\n\n  return function AllSentRequest(_x26, _x27) {\n    return _ref13.apply(this, arguments);\n  };\n}(); //featch all user data that notYourFriend\n\n\nexports.AllSentRequest = AllSentRequest;\n\nvar notYourFriend = /*#__PURE__*/function () {\n  var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(req, res) {\n    var decoded, user, userId, array, friendData, fList, i, data;\n    return regeneratorRuntime.wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            _context14.prev = 0;\n            _context14.next = 3;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 3:\n            decoded = _context14.sent;\n            _context14.next = 6;\n            return _user.Users.findOne({\n              emailId: decoded.sub\n            });\n\n          case 6:\n            user = _context14.sent;\n            userId = user._id; // console.log(userId);\n\n            array = [userId];\n            _context14.next = 11;\n            return _friend.FriendList.findOne({\n              userId: userId\n            });\n\n          case 11:\n            friendData = _context14.sent;\n            fList = friendData.friendList; // console.log(fList);\n\n            for (i = 0; i < fList.length; i++) {\n              //   console.log(fList[i].friendId);\n              array.push(fList[i].friendId);\n            }\n\n            _context14.next = 16;\n            return _user.Users.find({\n              _id: {\n                $nin: array\n              }\n            }, {\n              _id: 1,\n              name: 1,\n              profileImgURl: 1\n            });\n\n          case 16:\n            data = _context14.sent;\n            res.status(201).send({\n              success: true,\n              message: \"List fetched successfully\",\n              AllUser: [data]\n            });\n            _context14.next = 23;\n            break;\n\n          case 20:\n            _context14.prev = 20;\n            _context14.t0 = _context14[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context14.t0.message\n            });\n\n          case 23:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14, null, [[0, 20]]);\n  }));\n\n  return function notYourFriend(_x28, _x29) {\n    return _ref14.apply(this, arguments);\n  };\n}(); //search engin\n\n\nexports.notYourFriend = notYourFriend;\n\nfunction escapeRegex(text) {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n}\n\nvar searchEngine = /*#__PURE__*/function () {\n  var _ref15 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(req, res) {\n    var search, regex, data;\n    return regeneratorRuntime.wrap(function _callee15$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            _context15.prev = 0;\n            search = req.query.search;\n\n            if (!req.query.search) {\n              _context15.next = 8;\n              break;\n            }\n\n            regex = new RegExp(escapeRegex(search), \"gi\"); // Get all campgrounds from DB\n\n            _context15.next = 6;\n            return _user.Users.find({\n              $or: [{\n                name: regex\n              }, {\n                userName: regex\n              }]\n            }, {\n              id: 1,\n              name: 1,\n              userName: 1,\n              profileImgURl: 1\n            }).limit(20);\n\n          case 6:\n            data = _context15.sent;\n\n            if (data.length) {\n              res.status(201).send({\n                success: true,\n                data: data\n              });\n            } else {\n              res.status(401).send({\n                code: 400,\n                success: false,\n                data: 'No user found'\n              });\n            }\n\n          case 8:\n            _context15.next = 14;\n            break;\n\n          case 10:\n            _context15.prev = 10;\n            _context15.t0 = _context15[\"catch\"](0);\n            console.log(\"-=-=-=-=-=-=- error code\");\n            res.status(401).send({\n              success: false,\n              data: _context15.t0.message\n            });\n\n          case 14:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, _callee15, null, [[0, 10]]);\n  }));\n\n  return function searchEngine(_x30, _x31) {\n    return _ref15.apply(this, arguments);\n  };\n}();\n\nexports.searchEngine = searchEngine;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "friend.controller.js"
      ],
      "names": [
        "pullQuery",
        "matchId",
        "branchMatchId",
        "branchName",
        "FriendList",
        "updateOne",
        "userId",
        "$pull",
        "friendId",
        "pushQuery",
        "$push",
        "$each",
        "date",
        "Date",
        "allUser",
        "req",
        "res",
        "jwt",
        "verify",
        "headers",
        "token",
        "configKey",
        "secrets",
        "JWT_SECRET",
        "decoded",
        "Users",
        "findOne",
        "emailId",
        "sub",
        "user",
        "_id",
        "console",
        "log",
        "find",
        "$not",
        "$eq",
        "name",
        "profileImgURl",
        "data",
        "status",
        "send",
        "success",
        "message",
        "AllUser",
        "getFriendList",
        "query",
        "array",
        "list",
        "friendList",
        "i",
        "length",
        "userData",
        "push",
        "userInfo",
        "sentFriendRequest",
        "body",
        "requestId",
        "userFind",
        "requestUserFind",
        "create",
        "getRequest",
        "sentRequest",
        "findRequest",
        "map",
        "item",
        "removeSendRequest",
        "friendRequestAccept",
        "findById",
        "requestedUser",
        "requestExist",
        "userName",
        "showFriendRequetList",
        "id",
        "reverse",
        "showRequestedFriEndData",
        "dataR",
        "Friend",
        "fList",
        "d",
        "rejectFriendRequest",
        "suggestedFriend",
        "friends",
        "Fdata",
        "suggest",
        "Promise",
        "all",
        "findFriendOfFriend",
        "items",
        "filter",
        "indexOf",
        "$in",
        "Udata",
        "AllSentRequest",
        "notYourFriend",
        "friendData",
        "$nin",
        "escapeRegex",
        "text",
        "replace",
        "searchEngine",
        "search",
        "regex",
        "RegExp",
        "$or",
        "limit",
        "code"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\Friends\\",
      "sourcesContent": [
        "import { FriendList } from \"./friend.modal\";\nimport { Users } from \"../users/user.modal\";\n// import {notificationList} from '../notification/notification.modal'\nimport jwt from \"jsonwebtoken\";\nimport configKey from \"../../config\";\n//push and query\nconst pullQuery = async (matchId, branchMatchId, branchName) => {\n  await FriendList.updateOne(\n    { userId: matchId },\n    {\n      $pull: {\n        [branchName]: {\n          friendId: branchMatchId,\n        },\n      },\n    }\n  );\n};\nconst pushQuery = async (matchId, branchMatchId, branchName) => {\n  await FriendList.updateOne(\n    { userId: matchId },\n    {\n      $push: {\n        [branchName]: {\n          $each: [\n            {\n              friendId: branchMatchId,\n              date: new Date(),\n            },\n          ],\n        },\n      },\n    }\n  );\n};\n\n//featch all user data\nexport const allUser = async (req, res) => {\n  try {\n    const decoded = await jwt.verify(\n      req.headers.token,\n      configKey.secrets.JWT_SECRET\n    );\n    const user = await Users.findOne({ emailId: decoded.sub });\n    const userId = user._id;\n    console.log(userId);\n    const data = await Users.find(\n      { _id: { $not: { $eq: userId } } },\n      { _id: 1, name: 1, profileImgURl: 1 }\n    );\n\n    if (!data) {\n      console.log(\"data not found\");\n    }\n    res.status(201).send({\n      success: true,\n      message: \"List fetched successfully\",\n      AllUser: [data],\n    });\n  } catch (err) {\n    res.status(401).send({\n      success: false,\n      message: err.message,\n    });\n  }\n};\n\n//get friend list\nexport const getFriendList = async (req, res) => {\n  try {\n    const userId = req.query.userId;\n    //fetch the data of friendList\n    const data = await FriendList.findOne({ userId: userId });\n    //check data fetched successfull or not\n    console.log(data);\n    if (!data) {\n      return res.status(401).send({\n        success: false,\n        message: \"No friends to show\",\n      });\n    }\n    var array = [];\n    var list = data.friendList;\n    for (var i = 0; i < list.length; i++) {\n      //   console.log(fList[i].friendId);\n      const userData = await Users.findOne(\n        { _id: list[i].friendId },\n        { _id: 1, name: 1, profileImgURl: 1 }\n      );\n      array.push(userData);\n    }\n    console.log(array);\n\n    //send fetched data list\n    res.status(201).send({\n      success: true,\n      message: \"List fetched successfully\",\n      userInfo: array,\n    });\n  } catch (err) {\n    res.status(401).send({\n      success: false,\n      message: err.message,\n    });\n  }\n};\n\n//when user send friend request\n\nexport const sentFriendRequest = async (req, res) => {\n  try {\n    const { userId, requestId } = req.body;\n\n    const userFind = await FriendList.find({ userId: userId });\n\n    const requestUserFind = await FriendList.find({ userId: requestId });\n    //check user  and requestUser document, available or not! , if not then genrate it\n    if (userFind <= 0) {\n      await FriendList.create({\n        userId: userId,\n        friendList: [],\n        getRequest: [],\n        sentRequest: [],\n      });\n    }\n    if (requestUserFind <= 0) {\n      await FriendList.create({\n        userId: requestId,\n        friendList: [],\n        getRequest: [],\n        sentRequest: [],\n      });\n    }\n    //find request inside datbase if found than send response false\n    var findRequest = false;\n    if (!userFind.length <= 0) {\n      await userFind[0].getRequest.map((item) => {\n        if (item.friendId == requestId) {\n          findRequest = true;\n        }\n      });\n      await userFind[0].sentRequest.map((item) => {\n        if (item.friendId == requestId) {\n          findRequest = true;\n        }\n      });\n      await userFind[0].friendList.map((item) => {\n        if (item.friendId == requestId) {\n          findRequest = true;\n        }\n      });\n    }\n    if (findRequest) {\n      return res.status(401).send({\n        success: false,\n        message:\n          \"friend request already sent or recive either you are already friends\",\n      });\n    }\n    //set request in database and send positive response\n    //pushQuery(matchId,BranchMatchId,BranchName);\n    pushQuery(userId, requestId, \"sentRequest\");\n    pushQuery(requestId, userId, \"getRequest\");\n\n    // const data = await Users.findById({_id:userId})\n    // console.log(data);\n    // const usernotification = await notificationList.findOne({userId:requestId})\n    //     if(!usernotification){\n    //         await notificationList.create({\n    //             userId:requestId,\n    //             notificaton:[]\n    //         })\n    //     }\n    // await notificationList.findOneAndUpdate({userId:requestId},{\n    //     $push:{notification : {\n    //         type : \"friend request\",\n    //         user: userId,\n    //         userprofile: data.profileImgURL,\n    //         content :data.userName + \" sent you friend Request\" ,\n    //         date : Date()\n    //     }}\n    // })\n\n    res.status(201).send({\n      success: true,\n      message: \"request sent successfully\",\n    });\n  } catch (err) {\n    res.status(401).send({\n      success: false,\n      message: err.message,\n    });\n  }\n};\n\n// delete sendrequest\nexport const removeSendRequest = async (req, res) => {\n  try {\n    const { userId, requestId } = req.body;\n    pullQuery(userId, requestId, \"sentRequest\");\n    pullQuery(requestId, userId, \"getRequest\");\n    return res.status(201).send({\n      success: true,\n      message: \"remove request\",\n    });\n  } catch (err) {\n    res.status(401).send({\n      success: false,\n      message: err.message,\n    });\n  }\n};\n\n//when approve friend request\n\nexport const friendRequestAccept = async (req, res) => {\n  try {\n    const { userId, requestId } = req.body;\n    const userFind = await FriendList.find({ userId: userId }); //check the user exist or not\n    const requestedUser = await Users.findById({ _id: requestId });\n    //console.log('user', requestedUser)\n    //find request exist or not if not then send negative response\n    var requestExist = false;\n    userFind[0].getRequest.map((item) => {\n      if (item.friendId == requestId) {\n        requestExist = true;\n      }\n    });\n    if (!requestExist) {\n      return res.status(401).send({\n        success: false,\n        message: \"Request are not exist\",\n      });\n    }\n    pushQuery(userId, requestId, \"friendList\");\n    pullQuery(userId, requestId, \"getRequest\");\n    pushQuery(requestId, userId, \"friendList\");\n    pullQuery(requestId, userId, \"sentRequest\");\n\n    // const data = await Users.findById({_id:userId})\n    // console.log(data);\n    // const usernotification = await notificationList.findOne({userId:requestId})\n    //     if(!usernotification){\n    //         await notificationList.create({\n    //             userId:requestId,\n    //             notificaton:[]\n    //         })\n    //     }\n    // await notificationList.findOneAndUpdate({userId:requestId},{\n    //     $push:{notification : {\n    //         type : \"accept request\",\n    //         user: userId,\n    //         content :data.userName + \" accept friend Request\" ,\n    //         userprofile: data.profileImgURL,\n    //         date : Date()\n    //     }}\n    // })\n\n    return res.status(200).send({\n      success: true,\n      message: \"you and \" + [requestedUser.userName] + \" are friend's now\",\n    });\n  } catch (err) {\n    res.status(401).send({\n      success: true,\n      message: err.message,\n    });\n  }\n};\n\n//when user want friend request List\nexport const showFriendRequetList = async (req, res) => {\n  try {\n    const userId = req.query.id;\n    console.log(userId);\n    const userFind = await FriendList.findOne({ userId: userId });\n    //check user is exist yes then fetch data else send nagative response\n    if (!userFind) {\n      await FriendList.create({\n        userId: userId,\n        friendList: [],\n        getRequest: [],\n        sentRequest: [],\n      });\n    }\n    if (userFind.getRequest.length <= 0) {\n      res.status(401).send({\n        success: false,\n        message: \"Not any friend request avilable\",\n      });\n    } else {\n      res.status(200).send({\n        success: true,\n        message: \"List found\",\n        list: userFind.getRequest.reverse(),\n      });\n    }\n  } catch (err) {\n    res.status(401).send({\n      success: true,\n      message: err.message,\n    });\n  }\n};\n//data of requested user data\nexport const showRequestedFriEndData = async (req, res) => {\n  try {\n    const userId = req.query.id;\n    console.log(userId);\n    var dataR = [];\n    const Friend = await FriendList.findOne({ userId: userId });\n    var fList = Friend.getRequest;\n    console.log(fList);\n    for (var i = 0; i < fList.length; i++) {\n      var d = await Users.findById(\n        { _id: fList[i].friendId },\n        { name: 1, profileImgURl: 1 }\n      );\n      // console.log(d);\n      dataR.push(d);\n    }\n    console.log(dataR);\n    res.status(200).send({ success: true, message: \"List found\", list: dataR });\n  } catch (err) {\n    res.status(401).send({\n      success: true,\n      message: err.message,\n    });\n  }\n};\n\n//when user reject friend request\nexport const rejectFriendRequest = async (req, res) => {\n  try {\n    const { userId, requestId } = req.body;\n    pullQuery(userId, requestId, \"getRequest\"); //remove request from user account\n    pullQuery(requestId, userId, \"sentRequest\"); //remove request from requested account\n    return res.status(201).send({\n      success: true,\n      message: \"reject successfully\",\n    });\n  } catch (err) {\n    res.status(401).send({\n      success: false,\n      message: err.message,\n    });\n  }\n};\n\n//suggested friends\n// const getSuggestFriend = (friend) =>{\n\n// }\nexport const suggestedFriend = async (req, res) => {\n  try {\n    const { userId } = req.body;\n    const friends = await FriendList.findOne({ userId: userId });\n    const Fdata = [];\n    for (var i = 0; i < friends.friendList.length; i++) {\n      Fdata.push(friends.friendList[i].friendId);\n    }\n    const suggest = [];\n    await Promise.all(\n      friends.friendList.map(async (item) => {\n        const findFriendOfFriend = await FriendList.findOne({\n          userId: item.friendId,\n        });\n        await Promise.all(\n          findFriendOfFriend.friendList.map((items) => {\n            if (items.friendId != userId) {\n              suggest.push(items.friendId);\n            }\n          })\n        );\n      })\n    );\n\n    var data = suggest.filter(function (i) {\n      return this.indexOf(i) < 0;\n    }, Fdata);\n\n    const Udata = await Users.find(\n      { _id: { $in: data } },\n      { _id: 1, name: 1, profileImgURl: 1 }\n    );\n\n    return res.status(200).send({\n      success: true,\n      data: Udata,\n    });\n  } catch (err) {\n    res.status(401).send({\n      success: false,\n      message: err.message,\n    });\n  }\n};\n\n//show all sentReuest\nexport const AllSentRequest = async (req, res) => {\n  try {\n    const decoded = await jwt.verify(\n      req.headers.token,\n      configKey.secrets.JWT_SECRET\n    );\n    const data = await Users.findOne({ emailId: decoded.sub });\n    const userId = data._id;\n    console.log(userId);\n    const userFind = await FriendList.findOne({ userId: userId });\n\n    if (!userFind) {\n      await FriendList.create({\n        userId: userId,\n        friendList: [],\n        getRequest: [],\n        sentRequest: [],\n      });\n    }\n    res.status(200).send({\n      success: true,\n      message: \"List found\",\n      list: userFind.sentRequest,\n    });\n  } catch (err) {\n    res.status(401).send({\n      success: true,\n      message: err.message,\n    });\n  }\n};\n\n//featch all user data that notYourFriend\nexport const notYourFriend = async (req, res) => {\n  try {\n    const decoded = await jwt.verify(\n      req.headers.token,\n      configKey.secrets.JWT_SECRET\n    );\n    const user = await Users.findOne({ emailId: decoded.sub });\n    const userId = user._id;\n    // console.log(userId);\n    var array = [userId];\n    const friendData = await FriendList.findOne({ userId: userId });\n    var fList = friendData.friendList;\n    // console.log(fList);\n    for (var i = 0; i < fList.length; i++) {\n      //   console.log(fList[i].friendId);\n      array.push(fList[i].friendId);\n    }\n    const data = await Users.find(\n      { _id: { $nin: array } },\n      { _id: 1, name: 1, profileImgURl: 1 }\n    );\n\n    res.status(201).send({\n      success: true,\n      message: \"List fetched successfully\",\n      AllUser: [data],\n    });\n  } catch (err) {\n    res.status(401).send({\n      success: false,\n      message: err.message,\n    });\n  }\n};\n\n//search engin\nfunction escapeRegex(text) {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n}\n\nexport const searchEngine = async (req, res) => {\n  try {\n    const { search } = req.query;\n    if (req.query.search) {\n      const regex = new RegExp(escapeRegex(search), \"gi\");\n      // Get all campgrounds from DB\n      const data = await Users.find(\n        { $or: [{ name: regex }, { userName: regex }] },\n        { id: 1, name: 1, userName: 1, profileImgURl: 1 },\n      ).limit(20);\n      if(data.length) {\n        res.status(201).send({\n          success: true,\n          data: data,\n        });\n      }\n      else {\n        res.status(401).send({\n          code: 400,\n          success: false,\n          data: 'No user found'\n        });\n      }\n    }\n  } catch (err) {\n    console.log(\"-=-=-=-=-=-=- error code\");\n    res.status(401).send({\n      success: false,\n      data: err.message\n    });\n  }\n};\n\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1599044105895
  },
  "{\"sourceRoot\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\photos\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"filename\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\photos\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\photos\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\harsh\\social-share-backend-nikund",
      "filename": "D:\\harsh\\social-share-backend-nikund\\api\\photos\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\harsh\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\harsh\\social-share-backend-nikund\\api\\photos\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\harsh\\social-share-backend-nikund\\api\\photos\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\photos\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _photos = require(\"./photos.modal\");\n\nObject.keys(_photos).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _photos[key];\n    }\n  });\n});\n\nvar _photos2 = require(\"./photos.restRoute\");\n\nObject.keys(_photos2).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _photos2[key];\n    }\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFDQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEiLCJzb3VyY2VSb290IjoiRDpcXGhhcnNoXFxzb2NpYWwtc2hhcmUtYmFja2VuZC1uaWt1bmRcXGFwaVxccGhvdG9zXFwiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICcuL3Bob3Rvcy5tb2RhbCc7XHJcbmV4cG9ydCAqIGZyb20gJy4vcGhvdG9zLnJlc3RSb3V0ZSc7Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [],
      "mappings": ";;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA",
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\photos\\",
      "sourcesContent": [
        "export * from './photos.modal';\r\nexport * from './photos.restRoute';"
      ]
    },
    "sourceType": "script",
    "mtime": 1594265366000
  },
  "{\"sourceRoot\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\photos\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"filename\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\photos\\\\photos.modal.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\photos\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\harsh\\social-share-backend-nikund",
      "filename": "D:\\harsh\\social-share-backend-nikund\\api\\photos\\photos.modal.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\harsh\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\harsh\\social-share-backend-nikund\\api\\photos\\photos.modal.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\harsh\\social-share-backend-nikund\\api\\photos\\photos.modal.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\photos\\",
        "sourceFileName": "photos.modal.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.photosList = void 0;\n\nvar _mongoose = _interopRequireWildcard(require(\"mongoose\"));\n\nvar _mongooseTimestamp = _interopRequireDefault(require(\"mongoose-timestamp\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar photosSchema = (0, _mongoose.Schema)({\n  userId: String,\n  location: String,\n  description: String,\n  imageUrl: Array,\n  askingPrice: Number,\n  currentBid: Array,\n  like: Array,\n  comment: Array,\n  share: Array,\n  category: String,\n  highBid: Number\n}, {\n  timestamps: {\n    createdAt: 'created_at'\n  }\n});\n\nvar photosList = _mongoose[\"default\"].model('photosDocument', photosSchema);\n\nexports.photosList = photosList;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBob3Rvcy5tb2RhbC5qcyJdLCJuYW1lcyI6WyJwaG90b3NTY2hlbWEiLCJ1c2VySWQiLCJTdHJpbmciLCJsb2NhdGlvbiIsImRlc2NyaXB0aW9uIiwiaW1hZ2VVcmwiLCJBcnJheSIsImFza2luZ1ByaWNlIiwiTnVtYmVyIiwiY3VycmVudEJpZCIsImxpa2UiLCJjb21tZW50Iiwic2hhcmUiLCJjYXRlZ29yeSIsImhpZ2hCaWQiLCJ0aW1lc3RhbXBzIiwiY3JlYXRlZEF0IiwicGhvdG9zTGlzdCIsIm1vbmdvb3NlIiwibW9kZWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7OztBQUVBLElBQU1BLFlBQVksR0FBRyxzQkFBTztBQUN4QkMsRUFBQUEsTUFBTSxFQUFDQyxNQURpQjtBQUV4QkMsRUFBQUEsUUFBUSxFQUFDRCxNQUZlO0FBR3hCRSxFQUFBQSxXQUFXLEVBQUNGLE1BSFk7QUFJeEJHLEVBQUFBLFFBQVEsRUFBQ0MsS0FKZTtBQUt4QkMsRUFBQUEsV0FBVyxFQUFDQyxNQUxZO0FBTXhCQyxFQUFBQSxVQUFVLEVBQUNILEtBTmE7QUFPeEJJLEVBQUFBLElBQUksRUFBQ0osS0FQbUI7QUFReEJLLEVBQUFBLE9BQU8sRUFBQ0wsS0FSZ0I7QUFTeEJNLEVBQUFBLEtBQUssRUFBQ04sS0FUa0I7QUFVeEJPLEVBQUFBLFFBQVEsRUFBQ1gsTUFWZTtBQVd4QlksRUFBQUEsT0FBTyxFQUFDTjtBQVhnQixDQUFQLEVBWWxCO0FBQUVPLEVBQUFBLFVBQVUsRUFBRTtBQUFDQyxJQUFBQSxTQUFTLEVBQUM7QUFBWDtBQUFkLENBWmtCLENBQXJCOztBQWNPLElBQU1DLFVBQVUsR0FBR0MscUJBQVNDLEtBQVQsQ0FBZSxnQkFBZixFQUFnQ25CLFlBQWhDLENBQW5CIiwic291cmNlUm9vdCI6IkQ6XFxoYXJzaFxcc29jaWFsLXNoYXJlLWJhY2tlbmQtbmlrdW5kXFxhcGlcXHBob3Rvc1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlLCB7U2NoZW1hfSBmcm9tICdtb25nb29zZSc7XHJcbmltcG9ydCB0aW1lc3RhbXBzIGZyb20gXCJtb25nb29zZS10aW1lc3RhbXBcIjtcclxuXHJcbmNvbnN0IHBob3Rvc1NjaGVtYSA9IFNjaGVtYSh7XHJcbiAgICB1c2VySWQ6U3RyaW5nLFxyXG4gICAgbG9jYXRpb246U3RyaW5nLFxyXG4gICAgZGVzY3JpcHRpb246U3RyaW5nLFxyXG4gICAgaW1hZ2VVcmw6QXJyYXksXHJcbiAgICBhc2tpbmdQcmljZTpOdW1iZXIsXHJcbiAgICBjdXJyZW50QmlkOkFycmF5LFxyXG4gICAgbGlrZTpBcnJheSxcclxuICAgIGNvbW1lbnQ6QXJyYXksXHJcbiAgICBzaGFyZTpBcnJheSxcclxuICAgIGNhdGVnb3J5OlN0cmluZyxcclxuICAgIGhpZ2hCaWQ6TnVtYmVyLFxyXG59LCB7IHRpbWVzdGFtcHM6IHtjcmVhdGVkQXQ6J2NyZWF0ZWRfYXQnfSB9KVxyXG5cclxuZXhwb3J0IGNvbnN0IHBob3Rvc0xpc3QgPSBtb25nb29zZS5tb2RlbCgncGhvdG9zRG9jdW1lbnQnLHBob3Rvc1NjaGVtYSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "photos.modal.js"
      ],
      "names": [
        "photosSchema",
        "userId",
        "String",
        "location",
        "description",
        "imageUrl",
        "Array",
        "askingPrice",
        "Number",
        "currentBid",
        "like",
        "comment",
        "share",
        "category",
        "highBid",
        "timestamps",
        "createdAt",
        "photosList",
        "mongoose",
        "model"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;;;;;;;AAEA,IAAMA,YAAY,GAAG,sBAAO;AACxBC,EAAAA,MAAM,EAACC,MADiB;AAExBC,EAAAA,QAAQ,EAACD,MAFe;AAGxBE,EAAAA,WAAW,EAACF,MAHY;AAIxBG,EAAAA,QAAQ,EAACC,KAJe;AAKxBC,EAAAA,WAAW,EAACC,MALY;AAMxBC,EAAAA,UAAU,EAACH,KANa;AAOxBI,EAAAA,IAAI,EAACJ,KAPmB;AAQxBK,EAAAA,OAAO,EAACL,KARgB;AASxBM,EAAAA,KAAK,EAACN,KATkB;AAUxBO,EAAAA,QAAQ,EAACX,MAVe;AAWxBY,EAAAA,OAAO,EAACN;AAXgB,CAAP,EAYlB;AAAEO,EAAAA,UAAU,EAAE;AAACC,IAAAA,SAAS,EAAC;AAAX;AAAd,CAZkB,CAArB;;AAcO,IAAMC,UAAU,GAAGC,qBAASC,KAAT,CAAe,gBAAf,EAAgCnB,YAAhC,CAAnB",
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\photos\\",
      "sourcesContent": [
        "import mongoose, {Schema} from 'mongoose';\r\nimport timestamps from \"mongoose-timestamp\";\r\n\r\nconst photosSchema = Schema({\r\n    userId:String,\r\n    location:String,\r\n    description:String,\r\n    imageUrl:Array,\r\n    askingPrice:Number,\r\n    currentBid:Array,\r\n    like:Array,\r\n    comment:Array,\r\n    share:Array,\r\n    category:String,\r\n    highBid:Number,\r\n}, { timestamps: {createdAt:'created_at'} })\r\n\r\nexport const photosList = mongoose.model('photosDocument',photosSchema);"
      ]
    },
    "sourceType": "script",
    "mtime": 1595303302000
  },
  "{\"sourceRoot\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\photos\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"filename\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\photos\\\\photos.restRoute.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\photos\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\harsh\\social-share-backend-nikund",
      "filename": "D:\\harsh\\social-share-backend-nikund\\api\\photos\\photos.restRoute.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\harsh\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\harsh\\social-share-backend-nikund\\api\\photos\\photos.restRoute.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\harsh\\social-share-backend-nikund\\api\\photos\\photos.restRoute.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\photos\\",
        "sourceFileName": "photos.restRoute.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.photosRouter = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _photos = require(\"./photos.controller\");\n\nvar _multer = _interopRequireDefault(require(\"multer\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _config = _interopRequireDefault(require(\"../../config\"));\n\nvar _users = require(\"../users\");\n\nvar _photos2 = require(\"./photos.modal\");\n\nvar _mimeNode = _interopRequireDefault(require(\"nodemailer/lib/mime-node\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar photosRouter = _express[\"default\"].Router();\n\nexports.photosRouter = photosRouter;\n\nvar postStorage = _multer[\"default\"].diskStorage({\n  destination: function () {\n    var _destination = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, file, cb) {\n      var postuploadDir;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              postuploadDir = _path[\"default\"].join(__dirname, '..', '..', 'public', 'post');\n\n              if (_fs[\"default\"].existsSync(postuploadDir)) {\n                cb(null, postuploadDir);\n              } else {\n                _fs[\"default\"].mkdirSync(postuploadDir);\n\n                cb(null, postuploadDir);\n              }\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function destination(_x, _x2, _x3) {\n      return _destination.apply(this, arguments);\n    }\n\n    return destination;\n  }(),\n  filename: function () {\n    var _filename = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, file, cb) {\n      var decoded, data;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n            case 2:\n              decoded = _context2.sent;\n              _context2.next = 5;\n              return _users.Users.findOne({\n                emailId: decoded.sub\n              });\n\n            case 5:\n              data = _context2.sent;\n              cb(null, data._id + \"_\" + Date.now() + \"_\" + file.originalname);\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function filename(_x4, _x5, _x6) {\n      return _filename.apply(this, arguments);\n    }\n\n    return filename;\n  }()\n});\n\nvar uploadPostImg = (0, _multer[\"default\"])({\n  storage: postStorage,\n  fileFilter: function fileFilter(req, file, cb) {\n    var fileType = /jpeg|jpg|png|gif|mp4|/;\n    var extension = file.originalname.substring(file.originalname.lastIndexOf('.') + 1);\n    var mimetype = fileType.test(file.mimetype);\n\n    if (mimetype && extension) {\n      return cb(null, true);\n    } else {\n      cb('Error:you can upload only Image file');\n    }\n  }\n});\nphotosRouter.post('/newPosts', uploadPostImg.array('Url', 12), _photos.newPosts);\nphotosRouter.post('/comment', _photos.Addcomment);\nphotosRouter.post(\"/bid\", _photos.newBid);\nphotosRouter.post(\"/like\", _photos.AddLike);\nphotosRouter.post(\"/share\", _photos.sharing);\nphotosRouter.post(\"/delete\", _photos.deletePost);\nphotosRouter.get(\"/show\", _photos.showphotos);\nphotosRouter.get(\"/userPhoto\", _photos.userUploadedPhotos);\nphotosRouter.get(\"/showpost\", _photos.showphotosprofile);\nphotosRouter.get(\"/homePost\", _photos.homePagePost);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBob3Rvcy5yZXN0Um91dGUuanMiXSwibmFtZXMiOlsicGhvdG9zUm91dGVyIiwiZXhwcmVzcyIsIlJvdXRlciIsInBvc3RTdG9yYWdlIiwibXVsdGVyIiwiZGlza1N0b3JhZ2UiLCJkZXN0aW5hdGlvbiIsInJlcSIsImZpbGUiLCJjYiIsInBvc3R1cGxvYWREaXIiLCJwYXRoIiwiam9pbiIsIl9fZGlybmFtZSIsImZzIiwiZXhpc3RzU3luYyIsIm1rZGlyU3luYyIsImZpbGVuYW1lIiwiand0IiwidmVyaWZ5IiwiaGVhZGVycyIsInRva2VuIiwiY29uZmlnS2V5Iiwic2VjcmV0cyIsIkpXVF9TRUNSRVQiLCJkZWNvZGVkIiwiVXNlcnMiLCJmaW5kT25lIiwiZW1haWxJZCIsInN1YiIsImRhdGEiLCJfaWQiLCJEYXRlIiwibm93Iiwib3JpZ2luYWxuYW1lIiwidXBsb2FkUG9zdEltZyIsInN0b3JhZ2UiLCJmaWxlRmlsdGVyIiwiZmlsZVR5cGUiLCJleHRlbnNpb24iLCJzdWJzdHJpbmciLCJsYXN0SW5kZXhPZiIsIm1pbWV0eXBlIiwidGVzdCIsInBvc3QiLCJhcnJheSIsIm5ld1Bvc3RzIiwiQWRkY29tbWVudCIsIm5ld0JpZCIsIkFkZExpa2UiLCJzaGFyaW5nIiwiZGVsZXRlUG9zdCIsImdldCIsInNob3dwaG90b3MiLCJ1c2VyVXBsb2FkZWRQaG90b3MiLCJzaG93cGhvdG9zcHJvZmlsZSIsImhvbWVQYWdlUG9zdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQWNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7OztBQUVPLElBQU1BLFlBQVksR0FBR0Msb0JBQVFDLE1BQVIsRUFBckI7Ozs7QUFFUCxJQUFJQyxXQUFXLEdBQUdDLG1CQUFPQyxXQUFQLENBQW1CO0FBQ2pDQyxFQUFBQSxXQUFXO0FBQUEsK0VBQUUsaUJBQWVDLEdBQWYsRUFBbUJDLElBQW5CLEVBQXdCQyxFQUF4QjtBQUFBO0FB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QixFQUF5QkMsa0JBQXpCO0FBQ0FyRCxZQUFZLENBQUNvRCxHQUFiLENBQWlCLFlBQWpCLEVBQThCRSwwQkFBOUI7QUFDQXRELFlBQVksQ0FBQ29ELEdBQWIsQ0FBaUIsV0FBakIsRUFBNkJHLHlCQUE3QjtBQUNBdkQsWUFBWSxDQUFDb0QsR0FBYixDQUFpQixXQUFqQixFQUE2Qkksb0JBQTdCIiwic291cmNlUm9vdCI6IkQ6XFxoYXJzaFxcc29jaWFsLXNoYXJlLWJhY2tlbmQtbmlrdW5kXFxhcGlcXHBob3Rvc1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSBcImV4cHJlc3NcIjtcclxuaW1wb3J0IHtcclxuICAgIHNob3dwaG90b3MsXHJcbiAgICBuZXdQb3N0cyxcclxuICAgIEFkZGNvbW1lbnQsXHJcbiAgICBuZXdCaWQsXHJcbiAgICBBZGRMaWtlLFxyXG4gICAgc2hhcmluZyxcclxuICAgIHVzZXJVcGxvYWRlZFBob3RvcyxcclxuICAgIGRlbGV0ZVBvc3QsXHJcbiAgICBzaG93cGhvdG9zcHJvZmlsZSxcclxuICAgIGhvbWVQYWdlUG9zdCxcclxufVxyXG5cclxuZnJvbSAnLi9waG90b3MuY29udHJvbGxlcidcclxuaW1wb3J0IG11bHRlciBmcm9tICdtdWx0ZXInO1xyXG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcclxuaW1wb3J0IGZzIGZyb20gJ2ZzJztcclxuaW1wb3J0IGp3dCBmcm9tICdqc29ud2VidG9rZW4nO1xyXG5pbXBvcnQgY29uZmlnS2V5IGZyb20gJy4uLy4uL2NvbmZpZydcclxuaW1wb3J0IHtVc2Vyc30gZnJvbSAnLi4vdXNlcnMnXHJcbmltcG9ydCB7IHBob3Rvc0xpc3QgfSBmcm9tIFwiLi9waG90b3MubW9kYWxcIjtcclxuaW1wb3J0IE1pbWVOb2RlIGZyb20gXCJub2RlbWFpbGVyL2xpYi9taW1lLW5vZGVcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBwaG90b3NSb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xyXG5cclxudmFyIHBvc3RTdG9yYWdlID0gbXVsdGVyLmRpc2tTdG9yYWdlKHtcclxuICAgIGRlc3RpbmF0aW9uOiBhc3luYyBmdW5jdGlvbihyZXEsZmlsZSxjYil7XHJcbiAgICAgICAgXHJcbiAgICAgICAgY29uc3QgcG9zdHVwbG9hZERpciA9IHBhdGguam9pbihfX2Rpcm5hbWUsJy4uJywnLi4nLCdwdWJsaWMnLCdwb3N0Jyk7XHJcbiAgICAgICAgaWYoZnMuZXhpc3RzU3luYyhwb3N0dXBsb2FkRGlyKSl7XHJcbiAgICAgICAgICAgIGNiKG51bGwscG9zdHVwbG9hZERpcilcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgZnMubWtkaXJTeW5jKHBvc3R1cGxvYWREaXIpXHJcbiAgICAgICAgICAgIGNiKG51bGwscG9zdHVwbG9hZERpcilcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG5cclxuICAgIGZpbGVuYW1lOmFzeW5jIGZ1bmN0aW9uKHJlcSxmaWxlLGNiKXtcclxuICAgICAgICBjb25zdCBkZWNvZGVkID0gYXdhaXQgand0LnZlcmlmeShyZXEuaGVhZGVycy50b2tlbiwgY29uZmlnS2V5LnNlY3JldHMuSldUX1NFQ1JFVCk7XHJcbiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IFVzZXJzLmZpbmRPbmUoe2VtYWlsSWQ6ZGVjb2RlZC5zdWJ9KVxyXG5cclxuICAgICAgICBjYihudWxsLGRhdGEuX2lkK1wiX1wiK0RhdGUubm93KCkrXCJfXCIrZmlsZS5vcmlnaW5hbG5hbWUpXHJcbiAgICB9XHJcblxyXG59KVxyXG5cclxuY29uc3QgdXBsb2FkUG9zdEltZyA9IG11bHRlciAoe1xyXG4gICAgc3RvcmFnZTpwb3N0U3RvcmFnZSxcclxuICAgIGZpbGVGaWx0ZXI6ZnVuY3Rpb24ocmVxLGZpbGUsY2Ipe1xyXG4gICAgICAgIGNvbnN0IGZpbGVUeXBlID0gL2pwZWd8anBnfHBuZ3xnaWZ8bXA0fC87XHJcbiAgICAgICAgY29uc3QgZXh0ZW5zaW9uID0gZmlsZS5vcmlnaW5hbG5hbWUuc3Vic3RyaW5nKGZpbGUub3JpZ2luYWxuYW1lLmxhc3RJbmRleE9mKCcuJykgKyAxKTtcclxuICAgICAgICBjb25zdCBtaW1ldHlwZSA9IGZpbGVUeXBlLnRlc3QoZmlsZS5taW1ldHlwZSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgaWYobWltZXR5cGUgJiYgZXh0ZW5zaW9uKXtcclxuICAgICAgICAgICAgcmV0dXJuIGNiKG51bGwsdHJ1ZSk7XHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgIGNiKCdFcnJvcjp5b3UgY2FuIHVwbG9hZCBvbmx5IEltYWdlIGZpbGUnKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG59KVxyXG5cclxucGhvdG9zUm91dGVyLnBvc3QoJy9uZXdQb3N0cycsdXBsb2FkUG9zdEltZy5hcnJheSgnVXJsJywxMiksbmV3UG9zdHMpXHJcbnBob3Rvc1JvdXRlci5wb3N0KCcvY29tbWVudCcsQWRkY29tbWVudClcclxucGhvdG9zUm91dGVyLnBvc3QoXCIvYmlkXCIsbmV3QmlkKVxyXG5waG90b3NSb3V0ZXIucG9zdChcIi9saWtlXCIsQWRkTGlrZSlcclxucGhvdG9zUm91dGVyLnBvc3QoXCIvc2hhcmVcIixzaGFyaW5nKVxyXG5waG90b3NSb3V0ZXIucG9zdChcIi9kZWxldGVcIixkZWxldGVQb3N0KVxyXG5waG90b3NSb3V0ZXIuZ2V0KFwiL3Nob3dcIixzaG93cGhvdG9zKVxyXG5waG90b3NSb3V0ZXIuZ2V0KFwiL3VzZXJQaG90b1wiLHVzZXJVcGxvYWRlZFBob3RvcylcclxucGhvdG9zUm91dGVyLmdldChcIi9zaG93cG9zdFwiLHNob3dwaG90b3Nwcm9maWxlKVxyXG5waG90b3NSb3V0ZXIuZ2V0KFwiL2hvbWVQb3N0XCIsaG9tZVBhZ2VQb3N0KSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "photos.restRoute.js"
      ],
      "names": [
        "photosRouter",
        "express",
        "Router",
        "postStorage",
        "multer",
        "diskStorage",
        "destination",
        "req",
        "file",
        "cb",
        "postuploadDir",
        "path",
        "join",
        "__dirname",
        "fs",
        "existsSync",
        "mkdirSync",
        "filename",
        "jwt",
        "verify",
        "headers",
        "token",
        "configKey",
        "secrets",
        "JWT_SECRET",
        "decoded",
        "Users",
        "findOne",
        "emailId",
        "sub",
        "data",
        "_id",
        "Date",
        "now",
        "originalname",
        "uploadPostImg",
        "storage",
        "fileFilter",
        "fileType",
        "extension",
        "substring",
        "lastIndexOf",
        "mimetype",
        "test",
        "post",
        "array",
        "newPosts",
        "Addcomment",
        "newBid",
        "AddLike",
        "sharing",
        "deletePost",
        "get",
        "showphotos",
        "userUploadedPhotos",
        "showphotosprofile",
        "homePagePost"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\photos\\",
      "sourcesContent": [
        "import express from \"express\";\r\nimport {\r\n    showphotos,\r\n    newPosts,\r\n    Addcomment,\r\n    newBid,\r\n    AddLike,\r\n    sharing,\r\n    userUploadedPhotos,\r\n    deletePost,\r\n    showphotosprofile,\r\n    homePagePost,\r\n}\r\n\r\nfrom './photos.controller'\r\nimport multer from 'multer';\r\nimport path from 'path';\r\nimport fs from 'fs';\r\nimport jwt from 'jsonwebtoken';\r\nimport configKey from '../../config'\r\nimport {Users} from '../users'\r\nimport { photosList } from \"./photos.modal\";\r\nimport MimeNode from \"nodemailer/lib/mime-node\";\r\n\r\nexport const photosRouter = express.Router();\r\n\r\nvar postStorage = multer.diskStorage({\r\n    destination: async function(req,file,cb){\r\n        \r\n        const postuploadDir = path.join(__dirname,'..','..','public','post');\r\n        if(fs.existsSync(postuploadDir)){\r\n            cb(null,postuploadDir)\r\n        }\r\n        else{\r\n            fs.mkdirSync(postuploadDir)\r\n            cb(null,postuploadDir)\r\n        }\r\n    },\r\n\r\n    filename:async function(req,file,cb){\r\n        const decoded = await jwt.verify(req.headers.token, configKey.secrets.JWT_SECRET);\r\n        const data = await Users.findOne({emailId:decoded.sub})\r\n\r\n        cb(null,data._id+\"_\"+Date.now()+\"_\"+file.originalname)\r\n    }\r\n\r\n})\r\n\r\nconst uploadPostImg = multer ({\r\n    storage:postStorage,\r\n    fileFilter:function(req,file,cb){\r\n        const fileType = /jpeg|jpg|png|gif|mp4|/;\r\n        const extension = file.originalname.substring(file.originalname.lastIndexOf('.') + 1);\r\n        const mimetype = fileType.test(file.mimetype);\r\n        \r\n        if(mimetype && extension){\r\n            return cb(null,true);\r\n        }else{\r\n            cb('Error:you can upload only Image file');\r\n        }\r\n\r\n    }\r\n})\r\n\r\nphotosRouter.post('/newPosts',uploadPostImg.array('Url',12),newPosts)\r\nphotosRouter.post('/comment',Addcomment)\r\nphotosRouter.post(\"/bid\",newBid)\r\nphotosRouter.post(\"/like\",AddLike)\r\nphotosRouter.post(\"/share\",sharing)\r\nphotosRouter.post(\"/delete\",deletePost)\r\nphotosRouter.get(\"/show\",showphotos)\r\nphotosRouter.get(\"/userPhoto\",userUploadedPhotos)\r\nphotosRouter.get(\"/showpost\",showphotosprofile)\r\nphotosRouter.get(\"/homePost\",homePagePost)"
      ]
    },
    "sourceType": "script",
    "mtime": 1597922546000
  },
  "{\"sourceRoot\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\photos\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"filename\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\photos\\\\photos.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\photos\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\harsh\\social-share-backend-nikund",
      "filename": "D:\\harsh\\social-share-backend-nikund\\api\\photos\\photos.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\harsh\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\harsh\\social-share-backend-nikund\\api\\photos\\photos.controller.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\harsh\\social-share-backend-nikund\\api\\photos\\photos.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\photos\\",
        "sourceFileName": "photos.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.homePagePost = exports.deletePost = exports.userUploadedPhotos = exports.sharing = exports.AddLike = exports.newBid = exports.Addcomment = exports.newPosts = exports.showphotosprofile = exports.showphotos = void 0;\n\nvar _photos = require(\"./photos.modal\");\n\nvar _user = require(\"../users/user.modal\");\n\nvar _friend = require(\"../Friends/friend.modal\");\n\nvar _notification = require(\"../notification/notification.modal\");\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _config = _interopRequireDefault(require(\"../../config\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// import { photosRouter } from './photos.restRoute';\n// import { isValidObjectId } from 'mongoose';\nfunction fname(_x) {\n  return _fname.apply(this, arguments);\n} //----------------------------------------------------showphotos\n\n\nfunction _fname() {\n  _fname = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(data) {\n    var usernotification;\n    return regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _context12.next = 2;\n            return _notification.notificationList.findOne({\n              userId: data\n            });\n\n          case 2:\n            usernotification = _context12.sent;\n\n            if (usernotification) {\n              _context12.next = 6;\n              break;\n            }\n\n            _context12.next = 6;\n            return _notification.notificationList.create({\n              userId: data,\n              notificaton: []\n            });\n\n          case 6:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12);\n  }));\n  return _fname.apply(this, arguments);\n}\n\nvar showphotos = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var decoded, data, userId, postData;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 3:\n            decoded = _context.sent;\n            _context.next = 6;\n            return _user.Users.findOne({\n              emailId: decoded.sub\n            });\n\n          case 6:\n            data = _context.sent;\n            userId = data._id;\n            _context.next = 10;\n            return _photos.photosList.find({\n              userId: userId\n            });\n\n          case 10:\n            postData = _context.sent;\n\n            if (!postData) {\n              console.log(\"post data not found\");\n            } else {\n              res.send(postData.reverse());\n            }\n\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context.t0.message\n            });\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 14]]);\n  }));\n\n  return function showphotos(_x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.showphotos = showphotos;\n\nvar showphotosprofile = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var userId, postData;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            userId = req.query.id;\n            _context2.next = 4;\n            return _photos.photosList.find({\n              userId: userId\n            });\n\n          case 4:\n            postData = _context2.sent;\n\n            if (!postData) {\n              console.log(\"post data not found\");\n            } else {\n              res.send(postData.reverse());\n            }\n\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context2.t0.message\n            });\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 8]]);\n  }));\n\n  return function showphotosprofile(_x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}(); //-------------------------------------------------- add new post\n\n\nexports.showphotosprofile = showphotosprofile;\n\nvar newPosts = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var _req$body, location, description, askingPrice, category, imgFilesArray, img, decoded, data, userId, highBid, now, friendData, fList, i, usernotification;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            // console.log(req.files)\n            _req$body = req.body, location = _req$body.location, description = _req$body.description, askingPrice = _req$body.askingPrice, category = _req$body.category;\n            imgFilesArray = [];\n            img = req.files;\n            img.forEach(function (element) {\n              // console.log(element.filename)\n              var Ur = \"http://localhost:8000/api/photos/\" + element.filename;\n              imgFilesArray.push(Ur);\n            });\n            console.log(imgFilesArray);\n            _context3.next = 8;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 8:\n            decoded = _context3.sent;\n            _context3.next = 11;\n            return _user.Users.findOne({\n              emailId: decoded.sub\n            });\n\n          case 11:\n            data = _context3.sent;\n            userId = data._id; // const userId =req.body.userId\n\n            highBid = 0;\n            now = new Date();\n            _context3.next = 17;\n            return _photos.photosList.create({\n              userId: userId,\n              location: location,\n              description: description,\n              askingPrice: askingPrice,\n              category: category,\n              highBid: highBid,\n              imageUrl: imgFilesArray\n            });\n\n          case 17:\n            _context3.next = 19;\n            return _friend.FriendList.findOne({\n              userId: userId\n            });\n\n          case 19:\n            friendData = _context3.sent;\n\n            if (!friendData) {\n              _context3.next = 36;\n              break;\n            }\n\n            fList = friendData.friendList; // console.log(fList);\n            // console.log(fList.length);\n\n            i = 0;\n\n          case 23:\n            if (!(i < fList.length)) {\n              _context3.next = 36;\n              break;\n            }\n\n            console.log();\n            _context3.next = 27;\n            return _notification.notificationList.findOne({\n              userId: fList[i].friendId\n            });\n\n          case 27:\n            usernotification = _context3.sent;\n\n            if (usernotification) {\n              _context3.next = 31;\n              break;\n            }\n\n            _context3.next = 31;\n            return _notification.notificationList.create({\n              userId: fList[i].friendId,\n              notificaton: []\n            });\n\n          case 31:\n            _context3.next = 33;\n            return _notification.notificationList.findOneAndUpdate({\n              userId: fList[i].friendId\n            }, {\n              $push: {\n                notification: {\n                  type: \"new post\",\n                  userPostId: userId,\n                  userprofile: data.profileImgURL,\n                  content: data.name + \"has created new post\",\n                  phostImg: imgFilesArray,\n                  date: now\n                }\n              }\n            });\n\n          case 33:\n            i++;\n            _context3.next = 23;\n            break;\n\n          case 36:\n            return _context3.abrupt(\"return\", res.status(201).send({\n              success: true,\n              message: \"post created successfully.\"\n            }));\n\n          case 39:\n            _context3.prev = 39;\n            _context3.t0 = _context3[\"catch\"](0);\n            res.status(422).send({\n              success: false,\n              message: _context3.t0.message\n            });\n\n          case 42:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 39]]);\n  }));\n\n  return function newPosts(_x6, _x7) {\n    return _ref3.apply(this, arguments);\n  };\n}(); //---------------------------------------------------- add comment\n\n\nexports.newPosts = newPosts;\n\nvar Addcomment = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var postId, newcomment, Pdata, decoded, data, userId, now, notNeed;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            postId = req.body.postId;\n            newcomment = req.body.newcomment;\n            _context4.next = 5;\n            return _photos.photosList.findOne({\n              _id: postId\n            });\n\n          case 5:\n            Pdata = _context4.sent;\n            _context4.next = 8;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 8:\n            decoded = _context4.sent;\n            _context4.next = 11;\n            return _user.Users.findOne({\n              emailId: decoded.sub\n            });\n\n          case 11:\n            data = _context4.sent;\n            userId = data._id;\n            console.log(Pdata.userId);\n            now = new Date();\n            _context4.next = 17;\n            return _photos.photosList.findByIdAndUpdate({\n              _id: postId\n            }, {\n              $push: {\n                comment: {\n                  _id: _mongoose[\"default\"].Types.ObjectId(),\n                  userId: userId,\n                  newcomment: newcomment,\n                  date: now\n                }\n              }\n            });\n\n          case 17:\n            fname(Pdata.userId);\n            _context4.next = 20;\n            return _notification.notificationList.findOne({\n              userId: Pdata.userId\n            });\n\n          case 20:\n            notNeed = _context4.sent;\n\n            if (!(userId != Pdata.userId)) {\n              _context4.next = 28;\n              break;\n            }\n\n            console.log(\"next step\");\n            _context4.next = 25;\n            return _notification.notificationList.findOneAndUpdate({\n              userId: Pdata.userId\n            }, {\n              $push: {\n                notification: {\n                  type: \"comment\",\n                  userCommentId: userId,\n                  userprofile: data.profileImgURL,\n                  content: data.name + ' make comment: \"' + newcomment + '\" on your phost',\n                  phostImg: Pdata.imageUrl,\n                  date: now\n                }\n              }\n            });\n\n          case 25:\n            console.log(\"last\");\n            _context4.next = 29;\n            break;\n\n          case 28:\n            console.log(\"self comment\");\n\n          case 29:\n            return _context4.abrupt(\"return\", res.status(201).send({\n              success: true,\n              message: \"comment successfully added\"\n            }));\n\n          case 32:\n            _context4.prev = 32;\n            _context4.t0 = _context4[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context4.t0.message\n            });\n\n          case 35:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 32]]);\n  }));\n\n  return function Addcomment(_x8, _x9) {\n    return _ref4.apply(this, arguments);\n  };\n}(); //------------------------------------------------------- add bid in post\n\n\nexports.Addcomment = Addcomment;\n\nvar newBid = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var notis, postId, _newBid, Pdata, decoded, data, userId, now, hbid, current;\n\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n\n            notis = /*#__PURE__*/function () {\n              var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n                var notNeed;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        fname(Pdata.userId);\n                        _context5.next = 3;\n                        return _notification.notificationList.findOne({\n                          userId: Pdata.userId\n                        });\n\n                      case 3:\n                        notNeed = _context5.sent;\n                        _context5.next = 6;\n                        return _notification.notificationList.findOneAndUpdate({\n                          userId: Pdata.userId\n                        }, {\n                          $push: {\n                            notification: {\n                              type: \"bid\",\n                              userBidId: userId,\n                              userprofile: data.profileImgURL,\n                              content: data.name + 'has bidded \"$' + _newBid + '\" on your post',\n                              phostImg: Pdata.imageUrl,\n                              date: now\n                            }\n                          }\n                        });\n\n                      case 6:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5);\n              }));\n\n              return function notis() {\n                return _ref6.apply(this, arguments);\n              };\n            }();\n\n            postId = req.body.postId;\n            _newBid = req.body.newBid;\n            _context6.next = 6;\n            return _photos.photosList.findOne({\n              _id: postId\n            });\n\n          case 6:\n            Pdata = _context6.sent;\n            _context6.next = 9;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 9:\n            decoded = _context6.sent;\n            _context6.next = 12;\n            return _user.Users.findOne({\n              emailId: decoded.sub\n            });\n\n          case 12:\n            data = _context6.sent;\n            userId = data._id;\n            now = new Date();\n            _context6.next = 17;\n            return _photos.photosList.findOne({\n              _id: postId\n            });\n\n          case 17:\n            hbid = _context6.sent;\n            current = hbid.highBid;\n\n            if (!(userId != Pdata.userId)) {\n              _context6.next = 34;\n              break;\n            }\n\n            if (!(current < _newBid)) {\n              _context6.next = 28;\n              break;\n            }\n\n            _context6.next = 23;\n            return _photos.photosList.findByIdAndUpdate({\n              _id: postId\n            }, {\n              $push: {\n                currentBid: {\n                  userId: userId,\n                  Bid: _newBid,\n                  date: now\n                }\n              }\n            });\n\n          case 23:\n            _context6.next = 25;\n            return _photos.photosList.findByIdAndUpdate({\n              _id: postId\n            }, {\n              highBid: _newBid\n            });\n\n          case 25:\n            notis();\n            _context6.next = 31;\n            break;\n\n          case 28:\n            _context6.next = 30;\n            return _photos.photosList.findByIdAndUpdate({\n              _id: postId\n            }, {\n              $push: {\n                currentBid: {\n                  userId: userId,\n                  Bid: _newBid,\n                  date: now\n                }\n              }\n            });\n\n          case 30:\n            notis();\n\n          case 31:\n            return _context6.abrupt(\"return\", res.status(201).send({\n              success: true,\n              message: \"bid added successfully\"\n            }));\n\n          case 34:\n            res.send(\"you can't big\");\n\n          case 35:\n            _context6.next = 40;\n            break;\n\n          case 37:\n            _context6.prev = 37;\n            _context6.t0 = _context6[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context6.t0.message\n            });\n\n          case 40:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[0, 37]]);\n  }));\n\n  return function newBid(_x10, _x11) {\n    return _ref5.apply(this, arguments);\n  };\n}(); //------------------------------------------------------------- like\n\n\nexports.newBid = newBid;\n\nvar AddLike = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n    var postId, Pdata, decoded, data, userId, now, postData, temp, notNeed;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.prev = 0;\n            postId = req.body.postId;\n            _context7.next = 4;\n            return _photos.photosList.findOne({\n              _id: postId\n            });\n\n          case 4:\n            Pdata = _context7.sent;\n            _context7.next = 7;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 7:\n            decoded = _context7.sent;\n            _context7.next = 10;\n            return _user.Users.findOne({\n              emailId: decoded.sub\n            });\n\n          case 10:\n            data = _context7.sent;\n            userId = data._id;\n            now = new Date();\n            _context7.next = 15;\n            return _photos.photosList.findOne({\n              _id: postId\n            });\n\n          case 15:\n            postData = _context7.sent;\n            temp = 0;\n            postData.like.forEach(function (element) {\n              if (element.userId == userId.toString()) {\n                temp = 1;\n              }\n            });\n\n            if (!(temp == 1)) {\n              _context7.next = 25;\n              break;\n            }\n\n            console.log(\"already LIKEED\");\n            _context7.next = 22;\n            return _photos.photosList.findByIdAndUpdate({\n              _id: postId\n            }, {\n              $pull: {\n                like: {\n                  userId: userId\n                }\n              }\n            });\n\n          case 22:\n            if (!(userId != Pdata.userId)) {\n              _context7.next = 25;\n              break;\n            }\n\n            _context7.next = 25;\n            return _notification.notificationList.findOneAndUpdate({\n              userId: Pdata.userId\n            }, {\n              $pull: {\n                notification: {\n                  userLikedId: userId\n                }\n              }\n            });\n\n          case 25:\n            if (!(temp == 0)) {\n              _context7.next = 39;\n              break;\n            }\n\n            console.log(\"like done\");\n            _context7.next = 29;\n            return _photos.photosList.findByIdAndUpdate({\n              _id: postId\n            }, {\n              $push: {\n                like: {\n                  userId: userId,\n                  date: now\n                }\n              }\n            });\n\n          case 29:\n            if (!(userId != Pdata.userId)) {\n              _context7.next = 38;\n              break;\n            }\n\n            fname(Pdata.userId);\n            _context7.next = 33;\n            return _notification.notificationList.findOne({\n              userId: Pdata.userId\n            });\n\n          case 33:\n            notNeed = _context7.sent;\n            _context7.next = 36;\n            return _notification.notificationList.findOneAndUpdate({\n              userId: Pdata.userId\n            }, {\n              $push: {\n                notification: {\n                  type: \"like\",\n                  userLikedId: userId,\n                  userprofile: data.profileImgURL,\n                  content: data.name + \" has liked your photo\",\n                  phostImg: Pdata.imageUrl,\n                  date: now\n                }\n              }\n            });\n\n          case 36:\n            _context7.next = 39;\n            break;\n\n          case 38:\n            console.log(\"self like\");\n\n          case 39:\n            return _context7.abrupt(\"return\", res.status(201).send({\n              success: true,\n              message: \" successfully added\"\n            }));\n\n          case 42:\n            _context7.prev = 42;\n            _context7.t0 = _context7[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context7.t0.message\n            });\n\n          case 45:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[0, 42]]);\n  }));\n\n  return function AddLike(_x12, _x13) {\n    return _ref7.apply(this, arguments);\n  };\n}(); //----------------------------------------------------------share\n\n\nexports.AddLike = AddLike;\n\nvar sharing = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(req, res) {\n    var postId, sharedUserId, Pdata, Rdata, decoded, data, userId, now, friendData, notNeed, notNeeded;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.prev = 0;\n            postId = req.body.postId;\n            sharedUserId = req.body.receiverId;\n            _context8.next = 5;\n            return _photos.photosList.findOne({\n              _id: postId\n            });\n\n          case 5:\n            Pdata = _context8.sent;\n            _context8.next = 8;\n            return _user.Users.findOne({\n              _id: sharedUserId\n            });\n\n          case 8:\n            Rdata = _context8.sent;\n            _context8.next = 11;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 11:\n            decoded = _context8.sent;\n            _context8.next = 14;\n            return _user.Users.findOne({\n              emailId: decoded.sub\n            });\n\n          case 14:\n            data = _context8.sent;\n            userId = data._id;\n            now = new Date();\n            _context8.next = 19;\n            return _friend.FriendList.findOne({\n              userId: userId\n            });\n\n          case 19:\n            friendData = _context8.sent;\n\n            if (!friendData) {\n              console.log(\"friend list not found\");\n            } else {\n              console.log(friendData.friendList);\n            }\n\n            _context8.next = 23;\n            return _photos.photosList.findByIdAndUpdate({\n              _id: postId\n            }, {\n              $push: {\n                share: {\n                  userId: userId,\n                  sharedUser: sharedUserId,\n                  date: now\n                }\n              }\n            });\n\n          case 23:\n            if (!(userId != Pdata.userId)) {\n              _context8.next = 32;\n              break;\n            }\n\n            fname(Pdata.userId);\n            _context8.next = 27;\n            return _notification.notificationList.findOne({\n              userId: Pdata.userId\n            });\n\n          case 27:\n            notNeed = _context8.sent;\n            _context8.next = 30;\n            return _notification.notificationList.findOneAndUpdate({\n              userId: Pdata.userId\n            }, {\n              $push: {\n                notification: {\n                  type: \"share\",\n                  usershareId: userId,\n                  receiver: Rdata._id,\n                  content: data.name + ' make share your post with: \"' + Rdata.name + '\"',\n                  phostImg: Pdata.imageUrl,\n                  date: now\n                }\n              }\n            });\n\n          case 30:\n            _context8.next = 33;\n            break;\n\n          case 32:\n            console.log(\"self share\");\n\n          case 33:\n            fname(Pdata.sharedUserId);\n            _context8.next = 36;\n            return _notification.notificationList.findOne({\n              userId: sharedUserId\n            });\n\n          case 36:\n            notNeeded = _context8.sent;\n            _context8.next = 39;\n            return _notification.notificationList.findOneAndUpdate({\n              userId: Rdata._id\n            }, {\n              $push: {\n                notification: {\n                  type: \"share\",\n                  usershareId: userId,\n                  postId: Pdata._id,\n                  content: data.name + \" recommend to see this post\",\n                  phostImg: Pdata.imageUrl,\n                  date: now\n                }\n              }\n            });\n\n          case 39:\n            return _context8.abrupt(\"return\", res.status(201).send({\n              success: true,\n              message: \"share successfully\"\n            }));\n\n          case 42:\n            _context8.prev = 42;\n            _context8.t0 = _context8[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context8.t0.message\n            });\n\n          case 45:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[0, 42]]);\n  }));\n\n  return function sharing(_x14, _x15) {\n    return _ref8.apply(this, arguments);\n  };\n}(); //------------------------------------------------------------------user uploaded photos\n\n\nexports.sharing = sharing;\n\nvar userUploadedPhotos = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(req, res) {\n    var decoded, data, userId, postData;\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.prev = 0;\n            _context9.next = 3;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 3:\n            decoded = _context9.sent;\n            _context9.next = 6;\n            return _user.Users.findOne({\n              emailId: decoded.sub\n            });\n\n          case 6:\n            data = _context9.sent;\n            userId = data._id;\n            _context9.next = 10;\n            return _photos.photosList.find({\n              userId: userId\n            });\n\n          case 10:\n            postData = _context9.sent;\n\n            if (!postData) {\n              console.log(\"post data not found\");\n            } else {\n              postData.forEach(function (element) {\n                console.log(element.category);\n                console.log(element.imageUrl);\n              });\n            }\n\n            return _context9.abrupt(\"return\", res.status(201).send({\n              success: true,\n              message: \"successfully.\"\n            }));\n\n          case 15:\n            _context9.prev = 15;\n            _context9.t0 = _context9[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context9.t0.message\n            });\n\n          case 18:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9, null, [[0, 15]]);\n  }));\n\n  return function userUploadedPhotos(_x16, _x17) {\n    return _ref9.apply(this, arguments);\n  };\n}(); //------------------------------------------------------------delete post\n\n\nexports.userUploadedPhotos = userUploadedPhotos;\n\nvar deletePost = /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(req, res) {\n    var decoded, user, userId, postId, post;\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.prev = 0;\n            _context10.next = 3;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 3:\n            decoded = _context10.sent;\n            _context10.next = 6;\n            return _user.Users.findOne({\n              emailId: decoded.sub\n            });\n\n          case 6:\n            user = _context10.sent;\n            userId = user._id;\n            postId = req.body.postId;\n            _context10.next = 11;\n            return _photos.photosList.findById({\n              _id: postId\n            });\n\n          case 11:\n            post = _context10.sent;\n\n            if (!post) {\n              _context10.next = 21;\n              break;\n            }\n\n            if (!(post.userId == userId)) {\n              _context10.next = 18;\n              break;\n            }\n\n            _context10.next = 16;\n            return _photos.photosList.deleteOne({\n              _id: postId\n            });\n\n          case 16:\n            _context10.next = 19;\n            break;\n\n          case 18:\n            console.log(\"you can't delete post\");\n\n          case 19:\n            _context10.next = 22;\n            break;\n\n          case 21:\n            console.log(\"post not found\");\n\n          case 22:\n            res.status(201).send({\n              success: true,\n              message: \"post remove successsully\"\n            });\n            _context10.next = 28;\n            break;\n\n          case 25:\n            _context10.prev = 25;\n            _context10.t0 = _context10[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context10.t0.message\n            });\n\n          case 28:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10, null, [[0, 25]]);\n  }));\n\n  return function deletePost(_x18, _x19) {\n    return _ref10.apply(this, arguments);\n  };\n}(); //-------------------------------------------------------home page post\n\n\nexports.deletePost = deletePost;\n\nvar homePagePost = /*#__PURE__*/function () {\n  var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(req, res) {\n    var decoded, user, userId, homePost, Friend, fList, i, post, j, userPost, sortedpost;\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.prev = 0;\n            _context11.next = 3;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 3:\n            decoded = _context11.sent;\n            _context11.next = 6;\n            return _user.Users.findOne({\n              emailId: decoded.sub\n            });\n\n          case 6:\n            user = _context11.sent;\n            userId = user._id;\n            console.log(userId);\n            homePost = [];\n            _context11.next = 12;\n            return _friend.FriendList.findOne({\n              userId: userId\n            });\n\n          case 12:\n            Friend = _context11.sent;\n            fList = Friend.friendList;\n\n            if (Friend == null) {\n              res.status(201).send({\n                success: true,\n                message: \"You are not any friend\"\n              });\n            }\n\n            console.log(fList);\n            i = 0;\n\n          case 17:\n            if (!(i < fList.length)) {\n              _context11.next = 26;\n              break;\n            }\n\n            console.log(fList[i].friendId);\n            _context11.next = 21;\n            return _photos.photosList.find({\n              userId: fList[i].friendId\n            });\n\n          case 21:\n            post = _context11.sent;\n\n            for (j = 0; j < post.length; j++) {\n              homePost.push(post[j]);\n            }\n\n          case 23:\n            i++;\n            _context11.next = 17;\n            break;\n\n          case 26:\n            _context11.next = 28;\n            return _photos.photosList.find({\n              userId: userId\n            });\n\n          case 28:\n            userPost = _context11.sent;\n\n            for (j = 0; j < userPost.length; j++) {\n              homePost.push(userPost[j]);\n            }\n\n            sortedpost = homePost.sort(function (var1, var2) {\n              var a = new Date(var1.createdAt),\n                  b = new Date(var2.createdAt);\n              if (a > b) return -1;\n              if (a < b) return 1;\n              return 0;\n            });\n            console.log(sortedpost);\n            return _context11.abrupt(\"return\", res.status(201).send({\n              success: true,\n              message: \"successfully.\",\n              list: sortedpost\n            }));\n\n          case 35:\n            _context11.prev = 35;\n            _context11.t0 = _context11[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context11.t0.message\n            });\n\n          case 38:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11, null, [[0, 35]]);\n  }));\n\n  return function homePagePost(_x20, _x21) {\n    return _ref11.apply(this, arguments);\n  };\n}();\n\nexports.homePagePost = homePagePost;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "photos.controller.js"
      ],
      "names": [
        "fname",
        "data",
        "notificationList",
        "findOne",
        "userId",
        "usernotification",
        "create",
        "notificaton",
        "showphotos",
        "req",
        "res",
        "jwt",
        "verify",
        "headers",
        "token",
        "configKey",
        "secrets",
        "JWT_SECRET",
        "decoded",
        "Users",
        "emailId",
        "sub",
        "_id",
        "photosList",
        "find",
        "postData",
        "console",
        "log",
        "send",
        "reverse",
        "status",
        "success",
        "message",
        "showphotosprofile",
        "query",
        "id",
        "newPosts",
        "body",
        "location",
        "description",
        "askingPrice",
        "category",
        "imgFilesArray",
        "img",
        "files",
        "forEach",
        "element",
        "Ur",
        "filename",
        "push",
        "highBid",
        "now",
        "Date",
        "imageUrl",
        "FriendList",
        "friendData",
        "fList",
        "friendList",
        "i",
        "length",
        "friendId",
        "findOneAndUpdate",
        "$push",
        "notification",
        "type",
        "userPostId",
        "userprofile",
        "profileImgURL",
        "content",
        "name",
        "phostImg",
        "date",
        "Addcomment",
        "postId",
        "newcomment",
        "Pdata",
        "findByIdAndUpdate",
        "comment",
        "mongoose",
        "Types",
        "ObjectId",
        "notNeed",
        "userCommentId",
        "newBid",
        "notis",
        "userBidId",
        "hbid",
        "current",
        "currentBid",
        "Bid",
        "AddLike",
        "temp",
        "like",
        "toString",
        "$pull",
        "userLikedId",
        "sharing",
        "sharedUserId",
        "receiverId",
        "Rdata",
        "share",
        "sharedUser",
        "usershareId",
        "receiver",
        "notNeeded",
        "userUploadedPhotos",
        "deletePost",
        "user",
        "findById",
        "post",
        "deleteOne",
        "homePagePost",
        "homePost",
        "Friend",
        "j",
        "userPost",
        "sortedpost",
        "sort",
        "var1",
        "var2",
        "a",
        "createdAt",
        "b",
        "list"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\photos\\",
      "sourcesContent": [
        "import { photosList } from \"./photos.modal\";\r\nimport { Users } from \"../users/user.modal\";\r\nimport { FriendList } from \"../Friends/friend.modal\";\r\nimport { notificationList } from \"../notification/notification.modal\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport configKey from \"../../config\";\r\nimport mongoose from \"mongoose\";\r\n// import { photosRouter } from './photos.restRoute';\r\n// import { isValidObjectId } from 'mongoose';\r\n\r\nasync function fname(data) {\r\n  const usernotification = await notificationList.findOne({ userId: data });\r\n  if (!usernotification) {\r\n    await notificationList.create({\r\n      userId: data,\r\n      notificaton: [],\r\n    });\r\n  }\r\n}\r\n//----------------------------------------------------showphotos\r\nexport const showphotos = async (req, res) => {\r\n  try {\r\n    const decoded = await jwt.verify(\r\n      req.headers.token,\r\n      configKey.secrets.JWT_SECRET\r\n    );\r\n    const data = await Users.findOne({ emailId: decoded.sub });\r\n    const userId = data._id;\r\n\r\n    const postData = await photosList.find({ userId: userId });\r\n    if (!postData) {\r\n      console.log(\"post data not found\");\r\n    } else {\r\n      res.send(postData.reverse());\r\n    }\r\n  } catch (err) {\r\n    res.status(401).send({\r\n      success: false,\r\n      message: err.message,\r\n    });\r\n  }\r\n};\r\nexport const showphotosprofile = async (req, res) => {\r\n  try {\r\n    const userId = req.query.id;\r\n\r\n    const postData = await photosList.find({ userId: userId });\r\n    if (!postData) {\r\n      console.log(\"post data not found\");\r\n    } else {\r\n      res.send(postData.reverse());\r\n    }\r\n  } catch (err) {\r\n    res.status(401).send({\r\n      success: false,\r\n      message: err.message,\r\n    });\r\n  }\r\n};\r\n\r\n//-------------------------------------------------- add new post\r\n\r\nexport const newPosts = async (req, res) => {\r\n  try {\r\n    // console.log(req.files)\r\n    const { location, description, askingPrice, category } = req.body;\r\n    var imgFilesArray = [];\r\n    const img = req.files;\r\n    img.forEach((element) => {\r\n      // console.log(element.filename)\r\n      var Ur = \"http://localhost:8000/api/photos/\" + element.filename;\r\n      imgFilesArray.push(Ur);\r\n    });\r\n    console.log(imgFilesArray);\r\n\r\n    const decoded = await jwt.verify(\r\n      req.headers.token,\r\n      configKey.secrets.JWT_SECRET\r\n    );\r\n    const data = await Users.findOne({ emailId: decoded.sub });\r\n    const userId = data._id;\r\n    // const userId =req.body.userId\r\n    var highBid = 0;\r\n    var now = new Date();\r\n\r\n    await photosList.create({\r\n      userId,\r\n      location,\r\n      description,\r\n      askingPrice,\r\n      category,\r\n      highBid,\r\n      imageUrl: imgFilesArray,\r\n    });\r\n\r\n    const friendData = await FriendList.findOne({ userId: userId });\r\n    if (friendData) {\r\n      const fList = friendData.friendList;\r\n      // console.log(fList);\r\n      // console.log(fList.length);\r\n\r\n      for (var i = 0; i < fList.length; i++) {\r\n        console.log();\r\n        const usernotification = await notificationList.findOne({\r\n          userId: fList[i].friendId,\r\n        });\r\n        if (!usernotification) {\r\n          await notificationList.create({\r\n            userId: fList[i].friendId,\r\n            notificaton: [],\r\n          });\r\n        }\r\n        await notificationList.findOneAndUpdate(\r\n          { userId: fList[i].friendId },\r\n          {\r\n            $push: {\r\n              notification: {\r\n                type: \"new post\",\r\n                userPostId: userId,\r\n                userprofile: data.profileImgURL,\r\n                content: data.name + \"has created new post\",\r\n                phostImg: imgFilesArray,\r\n                date: now,\r\n              },\r\n            },\r\n          }\r\n        );\r\n      }\r\n    }\r\n    return res.status(201).send({\r\n      success: true,\r\n      message: \"post created successfully.\",\r\n    });\r\n  } catch (err) {\r\n    res.status(422).send({ success: false, message: err.message });\r\n  }\r\n};\r\n\r\n//---------------------------------------------------- add comment\r\n\r\nexport const Addcomment = async (req, res) => {\r\n  try {\r\n    const postId = req.body.postId;\r\n    const newcomment = req.body.newcomment;\r\n\r\n    const Pdata = await photosList.findOne({ _id: postId });\r\n    const decoded = await jwt.verify(\r\n      req.headers.token,\r\n      configKey.secrets.JWT_SECRET\r\n    );\r\n    const data = await Users.findOne({ emailId: decoded.sub });\r\n    const userId = data._id;\r\n\r\n    console.log(Pdata.userId);\r\n    var now = new Date();\r\n\r\n    await photosList.findByIdAndUpdate(\r\n      { _id: postId },\r\n      {\r\n        $push: {\r\n          comment: {\r\n            _id: mongoose.Types.ObjectId(),\r\n            userId: userId,\r\n            newcomment: newcomment,\r\n            date: now,\r\n          },\r\n        },\r\n      }\r\n    );\r\n\r\n    fname(Pdata.userId);\r\n    const notNeed = await notificationList.findOne({ userId: Pdata.userId });\r\n    if (userId != Pdata.userId) {\r\n      console.log(\"next step\");\r\n      await notificationList.findOneAndUpdate(\r\n        { userId: Pdata.userId },\r\n        {\r\n          $push: {\r\n            notification: {\r\n              type: \"comment\",\r\n              userCommentId: userId,\r\n              userprofile: data.profileImgURL,\r\n              content:\r\n                data.name + ' make comment: \"' + newcomment + '\" on your phost',\r\n              phostImg: Pdata.imageUrl,\r\n              date: now,\r\n            },\r\n          },\r\n        }\r\n      );\r\n      console.log(\"last\");\r\n    } else {\r\n      console.log(\"self comment\");\r\n    }\r\n\r\n    // const total = await photosList.findOne({_id:postId})\r\n    // console.log(total.comment.length)\r\n    // await photosList.findByIdAndUpdate({_id:postId},{\r\n    //     $set : {\"totalComment\":total.comment.length} })\r\n\r\n    return res.status(201).send({\r\n      success: true,\r\n      message: \"comment successfully added\",\r\n    });\r\n  } catch (err) {\r\n    res.status(401).send({\r\n      success: false,\r\n      message: err.message,\r\n    });\r\n  }\r\n};\r\n\r\n//------------------------------------------------------- add bid in post\r\n\r\nexport const newBid = async (req, res) => {\r\n  try {\r\n    const postId = req.body.postId;\r\n    const newBid = req.body.newBid;\r\n\r\n    const Pdata = await photosList.findOne({ _id: postId });\r\n    const decoded = await jwt.verify(\r\n      req.headers.token,\r\n      configKey.secrets.JWT_SECRET\r\n    );\r\n    const data = await Users.findOne({ emailId: decoded.sub });\r\n    const userId = data._id;\r\n    var now = new Date();\r\n\r\n    const hbid = await photosList.findOne({ _id: postId });\r\n    var current = hbid.highBid;\r\n\r\n    async function notis() {\r\n      fname(Pdata.userId);\r\n      const notNeed = await notificationList.findOne({ userId: Pdata.userId });\r\n      await notificationList.findOneAndUpdate(\r\n        { userId: Pdata.userId },\r\n        {\r\n          $push: {\r\n            notification: {\r\n              type: \"bid\",\r\n              userBidId: userId,\r\n              userprofile: data.profileImgURL,\r\n              content: data.name + 'has bidded \"$' + newBid + '\" on your post',\r\n              phostImg: Pdata.imageUrl,\r\n              date: now,\r\n            },\r\n          },\r\n        }\r\n      );\r\n    }\r\n\r\n    if (userId != Pdata.userId) {\r\n      if (current < newBid) {\r\n        await photosList.findByIdAndUpdate(\r\n          { _id: postId },\r\n          {\r\n            $push: { currentBid: { userId: userId, Bid: newBid, date: now } },\r\n          }\r\n        );\r\n        await photosList.findByIdAndUpdate(\r\n          { _id: postId },\r\n          { highBid: newBid }\r\n        );\r\n        notis();\r\n      } else {\r\n        await photosList.findByIdAndUpdate(\r\n          { _id: postId },\r\n          {\r\n            $push: { currentBid: { userId: userId, Bid: newBid, date: now } },\r\n          }\r\n        );\r\n        notis();\r\n      }\r\n      return res.status(201).send({\r\n        success: true,\r\n        message: \"bid added successfully\",\r\n      });\r\n    } else {\r\n      res.send(\"you can't big\");\r\n    }\r\n  } catch (err) {\r\n    res.status(401).send({\r\n      success: false,\r\n      message: err.message,\r\n    });\r\n  }\r\n};\r\n\r\n//------------------------------------------------------------- like\r\n\r\nexport const AddLike = async (req, res) => {\r\n  try {\r\n    const postId = req.body.postId;\r\n    const Pdata = await photosList.findOne({ _id: postId });\r\n\r\n    const decoded = await jwt.verify(\r\n      req.headers.token,\r\n      configKey.secrets.JWT_SECRET\r\n    );\r\n    const data = await Users.findOne({ emailId: decoded.sub });\r\n    const userId = data._id;\r\n    \r\n    var now = new Date();\r\n    const postData = await photosList.findOne({ _id: postId });\r\n\r\n    var temp = 0;\r\n    postData.like.forEach((element) => {\r\n      if ((element.userId == userId.toString())) {\r\n        temp = 1;\r\n      }\r\n    });\r\n    if (temp == 1) {\r\n      console.log(\"already LIKEED\");\r\n      await photosList.findByIdAndUpdate(\r\n        { _id: postId },\r\n        {\r\n          $pull: { like: { userId: userId } },\r\n        }\r\n      );\r\n      if (userId != Pdata.userId) {\r\n        await notificationList.findOneAndUpdate(\r\n          { userId: Pdata.userId },\r\n          {\r\n            $pull: { notification: { userLikedId: userId } },\r\n          }\r\n        );\r\n      }\r\n    }\r\n    if (temp == 0) {\r\n      console.log(\"like done\");\r\n      await photosList.findByIdAndUpdate(\r\n        { _id: postId },\r\n        {\r\n          $push: { like: { userId: userId, date: now } },\r\n        }\r\n      );\r\n      if (userId != Pdata.userId) {\r\n        fname(Pdata.userId);\r\n        const notNeed = await notificationList.findOne({\r\n          userId: Pdata.userId,\r\n        });\r\n        await notificationList.findOneAndUpdate(\r\n          { userId: Pdata.userId },\r\n          {\r\n            $push: {\r\n              notification: {\r\n                type: \"like\",\r\n                userLikedId: userId,\r\n                userprofile: data.profileImgURL,\r\n                content: data.name + \" has liked your photo\",\r\n                phostImg: Pdata.imageUrl,\r\n                date: now,\r\n              },\r\n            },\r\n          }\r\n        );\r\n      } else {\r\n        console.log(\"self like\");\r\n      }\r\n    }\r\n    return res.status(201).send({\r\n      success: true,\r\n      message: \" successfully added\",\r\n    });\r\n\r\n    // const total = await photosList.findOne({_id:postId})\r\n    // console.log(total.like.length)\r\n  } catch (err) {\r\n    res.status(401).send({\r\n      success: false,\r\n      message: err.message,\r\n    });\r\n  }\r\n};\r\n\r\n//----------------------------------------------------------share\r\nexport const sharing = async (req, res) => {\r\n  try {\r\n    const postId = req.body.postId;\r\n    const sharedUserId = req.body.receiverId;\r\n\r\n    const Pdata = await photosList.findOne({ _id: postId });\r\n    const Rdata = await Users.findOne({ _id: sharedUserId });\r\n    const decoded = await jwt.verify(\r\n      req.headers.token,\r\n      configKey.secrets.JWT_SECRET\r\n    );\r\n    const data = await Users.findOne({ emailId: decoded.sub });\r\n    const userId = data._id;\r\n    var now = new Date();\r\n\r\n    const friendData = await FriendList.findOne({ userId: userId });\r\n    if (!friendData) {\r\n      console.log(\"friend list not found\");\r\n    } else {\r\n      console.log(friendData.friendList);\r\n    }\r\n\r\n    await photosList.findByIdAndUpdate(\r\n      { _id: postId },\r\n      {\r\n        $push: {\r\n          share: { userId: userId, sharedUser: sharedUserId, date: now },\r\n        },\r\n      }\r\n    );\r\n    if (userId != Pdata.userId) {\r\n      fname(Pdata.userId);\r\n      const notNeed = await notificationList.findOne({ userId: Pdata.userId });\r\n      await notificationList.findOneAndUpdate(\r\n        { userId: Pdata.userId },\r\n        {\r\n          $push: {\r\n            notification: {\r\n              type: \"share\",\r\n              usershareId: userId,\r\n              receiver: Rdata._id,\r\n              content:\r\n                data.name + ' make share your post with: \"' + Rdata.name + '\"',\r\n              phostImg: Pdata.imageUrl,\r\n              date: now,\r\n            },\r\n          },\r\n        }\r\n      );\r\n    } else {\r\n      console.log(\"self share\");\r\n    }\r\n    fname(Pdata.sharedUserId);\r\n    const notNeeded = await notificationList.findOne({ userId: sharedUserId });\r\n    await notificationList.findOneAndUpdate(\r\n      { userId: Rdata._id },\r\n      {\r\n        $push: {\r\n          notification: {\r\n            type: \"share\",\r\n            usershareId: userId,\r\n            postId: Pdata._id,\r\n            content: data.name + \" recommend to see this post\",\r\n            phostImg: Pdata.imageUrl,\r\n            date: now,\r\n          },\r\n        },\r\n      }\r\n    );\r\n    // const total = await photosList.findOne({_id:postId})\r\n    // console.log(total.share.length)\r\n    return res.status(201).send({\r\n      success: true,\r\n      message: \"share successfully\",\r\n    });\r\n  } catch (err) {\r\n    res.status(401).send({\r\n      success: false,\r\n      message: err.message,\r\n    });\r\n  }\r\n};\r\n\r\n//------------------------------------------------------------------user uploaded photos\r\nexport const userUploadedPhotos = async (req, res) => {\r\n  try {\r\n    const decoded = await jwt.verify(\r\n      req.headers.token,\r\n      configKey.secrets.JWT_SECRET\r\n    );\r\n    const data = await Users.findOne({ emailId: decoded.sub });\r\n    const userId = data._id;\r\n\r\n    const postData = await photosList.find({ userId: userId });\r\n    if (!postData) {\r\n      console.log(\"post data not found\");\r\n    } else {\r\n      postData.forEach((element) => {\r\n        console.log(element.category);\r\n        console.log(element.imageUrl);\r\n      });\r\n    }\r\n    return res.status(201).send({\r\n      success: true,\r\n      message: \"successfully.\",\r\n    });\r\n  } catch (err) {\r\n    res.status(401).send({\r\n      success: false,\r\n      message: err.message,\r\n    });\r\n  }\r\n};\r\n\r\n//------------------------------------------------------------delete post\r\nexport const deletePost = async (req, res) => {\r\n  try {\r\n    const decoded = await jwt.verify(\r\n      req.headers.token,\r\n      configKey.secrets.JWT_SECRET\r\n    );\r\n    const user = await Users.findOne({ emailId: decoded.sub });\r\n    const userId = user._id;\r\n    const { postId } = req.body;\r\n    const post = await photosList.findById({ _id: postId });\r\n    if (post) {\r\n      if (post.userId == userId) {\r\n        await photosList.deleteOne({ _id: postId });\r\n      } else {\r\n        console.log(\"you can't delete post\");\r\n      }\r\n    } else {\r\n      console.log(\"post not found\");\r\n    }\r\n\r\n    res.status(201).send({\r\n      success: true,\r\n      message: \"post remove successsully\",\r\n    });\r\n  } catch (err) {\r\n    res.status(401).send({\r\n      success: false,\r\n      message: err.message,\r\n    });\r\n  }\r\n};\r\n\r\n//-------------------------------------------------------home page post\r\n\r\nexport const homePagePost = async (req, res) => {\r\n  try {\r\n    const decoded = await jwt.verify(\r\n      req.headers.token,\r\n      configKey.secrets.JWT_SECRET\r\n    );\r\n    const user = await Users.findOne({ emailId: decoded.sub });\r\n    const userId = user._id;\r\n    console.log(userId);\r\n    var homePost = [];\r\n    const Friend = await FriendList.findOne({ userId: userId });\r\n    var fList = Friend.friendList;\r\n    if (Friend == null) {\r\n      res.status(201).send({\r\n        success: true,\r\n        message: \"You are not any friend\",\r\n      });\r\n    }\r\n\r\n    console.log(fList);\r\n    for (var i = 0; i < fList.length; i++) {\r\n      console.log(fList[i].friendId);\r\n\r\n      var post = await photosList.find({ userId: fList[i].friendId });\r\n      for (var j = 0; j < post.length; j++) {\r\n        homePost.push(post[j]);\r\n      }\r\n    }\r\n    var userPost = await photosList.find({ userId: userId });\r\n    for (var j = 0; j < userPost.length; j++) {\r\n      homePost.push(userPost[j]);\r\n    }\r\n\r\n    var sortedpost = homePost.sort(function (var1, var2) {\r\n      var a = new Date(var1.createdAt),\r\n        b = new Date(var2.createdAt);\r\n      if (a > b) return -1;\r\n      if (a < b) return 1;\r\n\r\n      return 0;\r\n    });\r\n    console.log(sortedpost);\r\n\r\n    return res.status(201).send({\r\n      success: true,\r\n      message: \"successfully.\",\r\n      list: sortedpost,\r\n    });\r\n  } catch (err) {\r\n    res.status(401).send({\r\n      success: false,\r\n      message: err.message,\r\n    });\r\n  }\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1599643075367
  },
  "{\"sourceRoot\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\notification\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"filename\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\notification\\\\notification.modal.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\notification\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\harsh\\social-share-backend-nikund",
      "filename": "D:\\harsh\\social-share-backend-nikund\\api\\notification\\notification.modal.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\harsh\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\harsh\\social-share-backend-nikund\\api\\notification\\notification.modal.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\harsh\\social-share-backend-nikund\\api\\notification\\notification.modal.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\notification\\",
        "sourceFileName": "notification.modal.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.notificationList = void 0;\n\nvar _mongoose = _interopRequireWildcard(require(\"mongoose\"));\n\nvar _mongooseTimestamp = _interopRequireDefault(require(\"mongoose-timestamp\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar notificationSchema = (0, _mongoose.Schema)({\n  userId: String,\n  notification: Array\n}, {\n  timestamps: {\n    createdAt: 'created_at'\n  }\n});\n\nvar notificationList = _mongoose[\"default\"].model('notificationDocument', notificationSchema);\n\nexports.notificationList = notificationList;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGlmaWNhdGlvbi5tb2RhbC5qcyJdLCJuYW1lcyI6WyJub3RpZmljYXRpb25TY2hlbWEiLCJ1c2VySWQiLCJTdHJpbmciLCJub3RpZmljYXRpb24iLCJBcnJheSIsInRpbWVzdGFtcHMiLCJjcmVhdGVkQXQiLCJub3RpZmljYXRpb25MaXN0IiwibW9uZ29vc2UiLCJtb2RlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7Ozs7Ozs7O0FBRUEsSUFBTUEsa0JBQWtCLEdBQUcsc0JBQU87QUFDOUJDLEVBQUFBLE1BQU0sRUFBQ0MsTUFEdUI7QUFFOUJDLEVBQUFBLFlBQVksRUFBQ0M7QUFGaUIsQ0FBUCxFQUd4QjtBQUFFQyxFQUFBQSxVQUFVLEVBQUU7QUFBQ0MsSUFBQUEsU0FBUyxFQUFDO0FBQVg7QUFBZCxDQUh3QixDQUEzQjs7QUFLTyxJQUFNQyxnQkFBZ0IsR0FBR0MscUJBQVNDLEtBQVQsQ0FBZSxzQkFBZixFQUFzQ1Qsa0JBQXRDLENBQXpCIiwic291cmNlUm9vdCI6IkQ6XFxoYXJzaFxcc29jaWFsLXNoYXJlLWJhY2tlbmQtbmlrdW5kXFxhcGlcXG5vdGlmaWNhdGlvblxcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlLCB7U2NoZW1hfSBmcm9tICdtb25nb29zZSc7XHJcbmltcG9ydCB0aW1lc3RhbXBzIGZyb20gXCJtb25nb29zZS10aW1lc3RhbXBcIjtcclxuXHJcbmNvbnN0IG5vdGlmaWNhdGlvblNjaGVtYSA9IFNjaGVtYSh7XHJcbiAgICB1c2VySWQ6U3RyaW5nLFxyXG4gICAgbm90aWZpY2F0aW9uOkFycmF5LFxyXG59LCB7IHRpbWVzdGFtcHM6IHtjcmVhdGVkQXQ6J2NyZWF0ZWRfYXQnfSB9KVxyXG5cclxuZXhwb3J0IGNvbnN0IG5vdGlmaWNhdGlvbkxpc3QgPSBtb25nb29zZS5tb2RlbCgnbm90aWZpY2F0aW9uRG9jdW1lbnQnLG5vdGlmaWNhdGlvblNjaGVtYSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "notification.modal.js"
      ],
      "names": [
        "notificationSchema",
        "userId",
        "String",
        "notification",
        "Array",
        "timestamps",
        "createdAt",
        "notificationList",
        "mongoose",
        "model"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;;;;;;;AAEA,IAAMA,kBAAkB,GAAG,sBAAO;AAC9BC,EAAAA,MAAM,EAACC,MADuB;AAE9BC,EAAAA,YAAY,EAACC;AAFiB,CAAP,EAGxB;AAAEC,EAAAA,UAAU,EAAE;AAACC,IAAAA,SAAS,EAAC;AAAX;AAAd,CAHwB,CAA3B;;AAKO,IAAMC,gBAAgB,GAAGC,qBAASC,KAAT,CAAe,sBAAf,EAAsCT,kBAAtC,CAAzB",
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\notification\\",
      "sourcesContent": [
        "import mongoose, {Schema} from 'mongoose';\r\nimport timestamps from \"mongoose-timestamp\";\r\n\r\nconst notificationSchema = Schema({\r\n    userId:String,\r\n    notification:Array,\r\n}, { timestamps: {createdAt:'created_at'} })\r\n\r\nexport const notificationList = mongoose.model('notificationDocument',notificationSchema);"
      ]
    },
    "sourceType": "script",
    "mtime": 1594959278000
  },
  "{\"sourceRoot\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\notification\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"filename\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\notification\\\\notification.restRoute.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\notification\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\harsh\\social-share-backend-nikund",
      "filename": "D:\\harsh\\social-share-backend-nikund\\api\\notification\\notification.restRoute.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\harsh\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\harsh\\social-share-backend-nikund\\api\\notification\\notification.restRoute.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\harsh\\social-share-backend-nikund\\api\\notification\\notification.restRoute.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\notification\\",
        "sourceFileName": "notification.restRoute.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.notificationRouter = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _notification = require(\"./notification.controller\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar notificationRouter = _express[\"default\"].Router();\n\nexports.notificationRouter = notificationRouter;\nnotificationRouter.get(\"/\", _notification.getnotification);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGlmaWNhdGlvbi5yZXN0Um91dGUuanMiXSwibmFtZXMiOlsibm90aWZpY2F0aW9uUm91dGVyIiwiZXhwcmVzcyIsIlJvdXRlciIsImdldCIsImdldG5vdGlmaWNhdGlvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7O0FBR08sSUFBTUEsa0JBQWtCLEdBQUdDLG9CQUFRQyxNQUFSLEVBQTNCOzs7QUFFUEYsa0JBQWtCLENBQUNHLEdBQW5CLENBQXVCLEdBQXZCLEVBQTJCQyw2QkFBM0IiLCJzb3VyY2VSb290IjoiRDpcXGhhcnNoXFxzb2NpYWwtc2hhcmUtYmFja2VuZC1uaWt1bmRcXGFwaVxcbm90aWZpY2F0aW9uXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJ1xyXG5pbXBvcnQge1xyXG4gICAgZ2V0bm90aWZpY2F0aW9uLFxyXG59IGZyb20gJy4vbm90aWZpY2F0aW9uLmNvbnRyb2xsZXInXHJcbmV4cG9ydCBjb25zdCBub3RpZmljYXRpb25Sb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xyXG5cclxubm90aWZpY2F0aW9uUm91dGVyLmdldChcIi9cIixnZXRub3RpZmljYXRpb24pOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "notification.restRoute.js"
      ],
      "names": [
        "notificationRouter",
        "express",
        "Router",
        "get",
        "getnotification"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAGO,IAAMA,kBAAkB,GAAGC,oBAAQC,MAAR,EAA3B;;;AAEPF,kBAAkB,CAACG,GAAnB,CAAuB,GAAvB,EAA2BC,6BAA3B",
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\notification\\",
      "sourcesContent": [
        "import express from 'express'\r\nimport {\r\n    getnotification,\r\n} from './notification.controller'\r\nexport const notificationRouter = express.Router();\r\n\r\nnotificationRouter.get(\"/\",getnotification);"
      ]
    },
    "sourceType": "script",
    "mtime": 1594959356000
  },
  "{\"sourceRoot\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\notification\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"filename\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\notification\\\\notification.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\notification\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\harsh\\social-share-backend-nikund",
      "filename": "D:\\harsh\\social-share-backend-nikund\\api\\notification\\notification.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\harsh\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\harsh\\social-share-backend-nikund\\api\\notification\\notification.controller.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\harsh\\social-share-backend-nikund\\api\\notification\\notification.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\notification\\",
        "sourceFileName": "notification.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getnotification = void 0;\n\nvar _notification = require(\"./notification.modal\");\n\nvar _user = require(\"../users/user.modal\");\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _config = _interopRequireDefault(require(\"../../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//------------------------------------------------------------------show notification\nvar getnotification = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var decoded, data, userId, userData, notificationData, totalNotification, i;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 3:\n            decoded = _context.sent;\n            _context.next = 6;\n            return _user.Users.findOne({\n              emailId: decoded.sub\n            });\n\n          case 6:\n            data = _context.sent;\n            userId = data._id;\n            _context.next = 10;\n            return _notification.notificationList.findOne({\n              userId: userId\n            });\n\n          case 10:\n            userData = _context.sent;\n            notificationData = userData.notification;\n            totalNotification = notificationData.length;\n\n            for (i = totalNotification - 1; i > totalNotification - 11; i--) {\n              if (notificationData[i]) {\n                res.send(notificationData[i]);\n              }\n            }\n\n            _context.next = 19;\n            break;\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context.t0.message\n            });\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 16]]);\n  }));\n\n  return function getnotification(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.getnotification = getnotification;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGlmaWNhdGlvbi5jb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbImdldG5vdGlmaWNhdGlvbiIsInJlcSIsInJlcyIsImp3dCIsInZlcmlmeSIsImhlYWRlcnMiLCJ0b2tlbiIsImNvbmZpZ0tleSIsInNlY3JldHMiLCJKV1RfU0VDUkVUIiwiZGVjb2RlZCIsIlVzZXJzIiwiZmluZE9uZSIsImVtYWlsSWQiLCJzdWIiLCJkYXRhIiwidXNlcklkIiwiX2lkIiwibm90aWZpY2F0aW9uTGlzdCIsInVzZXJEYXRhIiwibm90aWZpY2F0aW9uRGF0YSIsIm5vdGlmaWNhdGlvbiIsInRvdGFsTm90aWZpY2F0aW9uIiwibGVuZ3RoIiwiaSIsInNlbmQiLCJzdGF0dXMiLCJzdWNjZXNzIiwibWVzc2FnZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7OztBQUNBO0FBRU8sSUFBTUEsZUFBZTtBQUFBLHFFQUFHLGlCQUFPQyxHQUFQLEVBQVdDLEdBQVg7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUVMQyx5QkFBSUMsTUFBSixDQUFXSCxHQUFHLENBQUNJLE9BQUosQ0FBWUMsS0FBdkIsRUFBOEJDLG1CQUFVQyxPQUFWLENBQWtCQyxVQUFoRCxDQUZLOztBQUFBO0FBRXJCQyxZQUFBQSxPQUZxQjtBQUFBO0FBQUEsbUJBR1JDLFlBQU1DLE9BQU4sQ0FBYztBQUFDQyxjQUFBQSxPQUFPLEVBQUNILE9BQU8sQ0FBQ0k7QUFBakIsYUFBZCxDQUhROztBQUFBO0FBR3JCQyxZQUFBQSxJQUhxQjtBQUlyQkMsWUFBQUEsTUFKcUIsR0FJWkQsSUFBSSxDQUFDRSxHQUpPO0FBQUE7QUFBQSxtQkFNSkMsK0JBQWlCTixPQUFqQixDQUF5QjtBQUFDSSxjQUFBQSxNQUFNLEVBQUNBO0FBQVIsYUFBekIsQ0FOSTs7QUFBQTtBQU1yQkcsWUFBQUEsUUFOcUI7QUFPckJDLFlBQUFBLGdCQVBxQixHQU9KRCxRQUFRLENBQUNFLFlBUEw7QUFRdkJDLFlBQUFBLGlCQVJ1QixHQVFIRixnQkFBZ0IsQ0FBQ0csTUFSZDs7QUFTM0IsaUJBQVFDLENBQVIsR0FBWUYsaUJBQWlCLEdBQUMsQ0FBOUIsRUFBaUNFLENBQUMsR0FBQ0YsaUJBQWlCLEdBQUMsRUFBckQsRUFBd0RFLENBQUMsRUFBekQsRUFBNEQ7QUFDeEQsa0JBQUdKLGdCQUFnQixDQUFDSSxDQUFELENBQW5CLEVBQXVCO0FBQ25CdEIsZ0JBQUFBLEdBQUcsQ0FBQ3VCLElBQUosQ0FBU0wsZ0JBQWdCLENBQUNJLENBQUQsQ0FBekI7QUFDSDtBQUNKOztBQWIwQjtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQWV2QnRCLFlBQUFBLEdBQUcsQ0FBQ3dCLE1BQUosQ0FBVyxHQUFYLEVBQWdCRCxJQUFoQixDQUFxQjtBQUNqQkUsY0FBQUEsT0FBTyxFQUFDLEtBRFM7QUFFakJDLGNBQUFBLE9BQU8sRUFBQyxZQUFJQTtBQUZLLGFBQXJCOztBQWZ1QjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFIOztBQUFBLGtCQUFmNUIsZUFBZTtBQUFBO0FBQUE7QUFBQSxHQUFyQiIsInNvdXJjZVJvb3QiOiJEOlxcaGFyc2hcXHNvY2lhbC1zaGFyZS1iYWNrZW5kLW5pa3VuZFxcYXBpXFxub3RpZmljYXRpb25cXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7bm90aWZpY2F0aW9uTGlzdH0gZnJvbSAnLi9ub3RpZmljYXRpb24ubW9kYWwnXHJcbmltcG9ydCB7VXNlcnN9IGZyb20gJy4uL3VzZXJzL3VzZXIubW9kYWwnXHJcbmltcG9ydCBqd3QgZnJvbSAnanNvbndlYnRva2VuJztcclxuaW1wb3J0IGNvbmZpZ0tleSBmcm9tICcuLi8uLi9jb25maWcnXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tc2hvdyBub3RpZmljYXRpb25cclxuXHJcbmV4cG9ydCBjb25zdCBnZXRub3RpZmljYXRpb24gPSBhc3luYyAocmVxLHJlcykgPT57XHJcbiAgICB0cnl7XHJcbiAgICBjb25zdCBkZWNvZGVkID0gYXdhaXQgand0LnZlcmlmeShyZXEuaGVhZGVycy50b2tlbiwgY29uZmlnS2V5LnNlY3JldHMuSldUX1NFQ1JFVCk7XHJcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgVXNlcnMuZmluZE9uZSh7ZW1haWxJZDpkZWNvZGVkLnN1Yn0pXHJcbiAgICBjb25zdCB1c2VySWQgPSBkYXRhLl9pZFxyXG5cclxuICAgIGNvbnN0IHVzZXJEYXRhID0gYXdhaXQgbm90aWZpY2F0aW9uTGlzdC5maW5kT25lKHt1c2VySWQ6dXNlcklkfSlcclxuICAgIGNvbnN0IG5vdGlmaWNhdGlvbkRhdGE9dXNlckRhdGEubm90aWZpY2F0aW9uXHJcbiAgICB2YXIgdG90YWxOb3RpZmljYXRpb24gPSBub3RpZmljYXRpb25EYXRhLmxlbmd0aDtcclxuICAgIGZvcih2YXIgaSA9IHRvdGFsTm90aWZpY2F0aW9uLTEgO2k+dG90YWxOb3RpZmljYXRpb24tMTE7aS0tKXtcclxuICAgICAgICBpZihub3RpZmljYXRpb25EYXRhW2ldKXtcclxuICAgICAgICAgICAgcmVzLnNlbmQobm90aWZpY2F0aW9uRGF0YVtpXSk7XHJcbiAgICAgICAgfSAgICAgICAgXHJcbiAgICB9XHJcbiAgICB9Y2F0Y2goZXJyKXtcclxuICAgICAgICByZXMuc3RhdHVzKDQwMSkuc2VuZCh7XHJcbiAgICAgICAgICAgIHN1Y2Nlc3M6ZmFsc2UsXHJcbiAgICAgICAgICAgIG1lc3NhZ2U6ZXJyLm1lc3NhZ2VcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "notification.controller.js"
      ],
      "names": [
        "getnotification",
        "req",
        "res",
        "jwt",
        "verify",
        "headers",
        "token",
        "configKey",
        "secrets",
        "JWT_SECRET",
        "decoded",
        "Users",
        "findOne",
        "emailId",
        "sub",
        "data",
        "userId",
        "_id",
        "notificationList",
        "userData",
        "notificationData",
        "notification",
        "totalNotification",
        "length",
        "i",
        "send",
        "status",
        "success",
        "message"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;AACA;AAEO,IAAMA,eAAe;AAAA,qEAAG,iBAAOC,GAAP,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAELC,yBAAIC,MAAJ,CAAWH,GAAG,CAACI,OAAJ,CAAYC,KAAvB,EAA8BC,mBAAUC,OAAV,CAAkBC,UAAhD,CAFK;;AAAA;AAErBC,YAAAA,OAFqB;AAAA;AAAA,mBAGRC,YAAMC,OAAN,CAAc;AAACC,cAAAA,OAAO,EAACH,OAAO,CAACI;AAAjB,aAAd,CAHQ;;AAAA;AAGrBC,YAAAA,IAHqB;AAIrBC,YAAAA,MAJqB,GAIZD,IAAI,CAACE,GAJO;AAAA;AAAA,mBAMJC,+BAAiBN,OAAjB,CAAyB;AAACI,cAAAA,MAAM,EAACA;AAAR,aAAzB,CANI;;AAAA;AAMrBG,YAAAA,QANqB;AAOrBC,YAAAA,gBAPqB,GAOJD,QAAQ,CAACE,YAPL;AAQvBC,YAAAA,iBARuB,GAQHF,gBAAgB,CAACG,MARd;;AAS3B,iBAAQC,CAAR,GAAYF,iBAAiB,GAAC,CAA9B,EAAiCE,CAAC,GAACF,iBAAiB,GAAC,EAArD,EAAwDE,CAAC,EAAzD,EAA4D;AACxD,kBAAGJ,gBAAgB,CAACI,CAAD,CAAnB,EAAuB;AACnBtB,gBAAAA,GAAG,CAACuB,IAAJ,CAASL,gBAAgB,CAACI,CAAD,CAAzB;AACH;AACJ;;AAb0B;AAAA;;AAAA;AAAA;AAAA;AAevBtB,YAAAA,GAAG,CAACwB,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AACjBE,cAAAA,OAAO,EAAC,KADS;AAEjBC,cAAAA,OAAO,EAAC,YAAIA;AAFK,aAArB;;AAfuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAf5B,eAAe;AAAA;AAAA;AAAA,GAArB",
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\notification\\",
      "sourcesContent": [
        "import {notificationList} from './notification.modal'\r\nimport {Users} from '../users/user.modal'\r\nimport jwt from 'jsonwebtoken';\r\nimport configKey from '../../config'\r\n//------------------------------------------------------------------show notification\r\n\r\nexport const getnotification = async (req,res) =>{\r\n    try{\r\n    const decoded = await jwt.verify(req.headers.token, configKey.secrets.JWT_SECRET);\r\n    const data = await Users.findOne({emailId:decoded.sub})\r\n    const userId = data._id\r\n\r\n    const userData = await notificationList.findOne({userId:userId})\r\n    const notificationData=userData.notification\r\n    var totalNotification = notificationData.length;\r\n    for(var i = totalNotification-1 ;i>totalNotification-11;i--){\r\n        if(notificationData[i]){\r\n            res.send(notificationData[i]);\r\n        }        \r\n    }\r\n    }catch(err){\r\n        res.status(401).send({\r\n            success:false,\r\n            message:err.message\r\n        })\r\n    }\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1594973718000
  },
  "{\"sourceRoot\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\about\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"filename\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\about\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\about\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\harsh\\social-share-backend-nikund",
      "filename": "D:\\harsh\\social-share-backend-nikund\\api\\about\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\harsh\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\harsh\\social-share-backend-nikund\\api\\about\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\harsh\\social-share-backend-nikund\\api\\about\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\about\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _about = require(\"./about.modal\");\n\nObject.keys(_about).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _about[key];\n    }\n  });\n});\n\nvar _about2 = require(\"./about.restRoute\");\n\nObject.keys(_about2).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _about2[key];\n    }\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFDQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEiLCJzb3VyY2VSb290IjoiRDpcXGhhcnNoXFxzb2NpYWwtc2hhcmUtYmFja2VuZC1uaWt1bmRcXGFwaVxcYWJvdXRcXCIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vYWJvdXQubW9kYWwnO1xyXG5leHBvcnQgKiBmcm9tICcuL2Fib3V0LnJlc3RSb3V0ZSciXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [],
      "mappings": ";;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA",
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\about\\",
      "sourcesContent": [
        "export * from './about.modal';\r\nexport * from './about.restRoute'"
      ]
    },
    "sourceType": "script",
    "mtime": 1596605714000
  },
  "{\"sourceRoot\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\about\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"filename\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\about\\\\about.modal.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\about\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\harsh\\social-share-backend-nikund",
      "filename": "D:\\harsh\\social-share-backend-nikund\\api\\about\\about.modal.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\harsh\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\harsh\\social-share-backend-nikund\\api\\about\\about.modal.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\harsh\\social-share-backend-nikund\\api\\about\\about.modal.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\about\\",
        "sourceFileName": "about.modal.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.about = void 0;\n\nvar _mongoose = _interopRequireWildcard(require(\"mongoose\"));\n\nvar _mongooseTimestamp = _interopRequireDefault(require(\"mongoose-timestamp\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar aboutSchema = (0, _mongoose.Schema)({\n  userId: String,\n  work: Array,\n  university: Array,\n  highSchool: Array,\n  mobileNumber: Number,\n  address: String,\n  website: String,\n  socialLink: String,\n  basicInfo: String,\n  relationshipStatus: String,\n  family: Array,\n  aboutYourself: String,\n  pronunciation: String,\n  otherName: String,\n  quote: String,\n  bloodDonations: String,\n  lifeEvents: Array\n}, {\n  timestamps: {\n    createdAt: 'created_at'\n  }\n});\n\nvar about = _mongoose[\"default\"].model('about', aboutSchema);\n\nexports.about = about;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFib3V0Lm1vZGFsLmpzIl0sIm5hbWVzIjpbImFib3V0U2NoZW1hIiwidXNlcklkIiwiU3RyaW5nIiwid29yayIsIkFycmF5IiwidW5pdmVyc2l0eSIsImhpZ2hTY2hvb2wiLCJtb2JpbGVOdW1iZXIiLCJOdW1iZXIiLCJhZGRyZXNzIiwid2Vic2l0ZSIsInNvY2lhbExpbmsiLCJiYXNpY0luZm8iLCJyZWxhdGlvbnNoaXBTdGF0dXMiLCJmYW1pbHkiLCJhYm91dFlvdXJzZWxmIiwicHJvbnVuY2lhdGlvbiIsIm90aGVyTmFtZSIsInF1b3RlIiwiYmxvb2REb25hdGlvbnMiLCJsaWZlRXZlbnRzIiwidGltZXN0YW1wcyIsImNyZWF0ZWRBdCIsImFib3V0IiwibW9uZ29vc2UiLCJtb2RlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7Ozs7Ozs7O0FBRUEsSUFBTUEsV0FBVyxHQUFHLHNCQUFPO0FBQ3ZCQyxFQUFBQSxNQUFNLEVBQUNDLE1BRGdCO0FBRXZCQyxFQUFBQSxJQUFJLEVBQUNDLEtBRmtCO0FBR3ZCQyxFQUFBQSxVQUFVLEVBQUNELEtBSFk7QUFJdkJFLEVBQUFBLFVBQVUsRUFBQ0YsS0FKWTtBQUt2QkcsRUFBQUEsWUFBWSxFQUFDQyxNQUxVO0FBTXZCQyxFQUFBQSxPQUFPLEVBQUNQLE1BTmU7QUFPdkJRLEVBQUFBLE9BQU8sRUFBQ1IsTUFQZTtBQVF2QlMsRUFBQUEsVUFBVSxFQUFDVCxNQVJZO0FBU3ZCVSxFQUFBQSxTQUFTLEVBQUNWLE1BVGE7QUFVdkJXLEVBQUFBLGtCQUFrQixFQUFDWCxNQVZJO0FBV3ZCWSxFQUFBQSxNQUFNLEVBQUNWLEtBWGdCO0FBWXZCVyxFQUFBQSxhQUFhLEVBQUNiLE1BWlM7QUFhdkJjLEVBQUFBLGFBQWEsRUFBQ2QsTUFiUztBQWN2QmUsRUFBQUEsU0FBUyxFQUFDZixNQWRhO0FBZXZCZ0IsRUFBQUEsS0FBSyxFQUFDaEIsTUFmaUI7QUFnQnZCaUIsRUFBQUEsY0FBYyxFQUFDakIsTUFoQlE7QUFpQnZCa0IsRUFBQUEsVUFBVSxFQUFDaEI7QUFqQlksQ0FBUCxFQW1CakI7QUFBRWlCLEVBQUFBLFVBQVUsRUFBRTtBQUFDQyxJQUFBQSxTQUFTLEVBQUM7QUFBWDtBQUFkLENBbkJpQixDQUFwQjs7QUFxQk8sSUFBTUMsS0FBSyxHQUFHQyxxQkFBU0MsS0FBVCxDQUFlLE9BQWYsRUFBdUJ6QixXQUF2QixDQUFkIiwic291cmNlUm9vdCI6IkQ6XFxoYXJzaFxcc29jaWFsLXNoYXJlLWJhY2tlbmQtbmlrdW5kXFxhcGlcXGFib3V0XFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UsIHtTY2hlbWF9IGZyb20gJ21vbmdvb3NlJztcclxuaW1wb3J0IHRpbWVzdGFtcHMgZnJvbSBcIm1vbmdvb3NlLXRpbWVzdGFtcFwiO1xyXG5cclxuY29uc3QgYWJvdXRTY2hlbWEgPSBTY2hlbWEoe1xyXG4gICAgdXNlcklkOlN0cmluZyxcclxuICAgIHdvcms6QXJyYXksXHJcbiAgICB1bml2ZXJzaXR5OkFycmF5LFxyXG4gICAgaGlnaFNjaG9vbDpBcnJheSxcclxuICAgIG1vYmlsZU51bWJlcjpOdW1iZXIsXHJcbiAgICBhZGRyZXNzOlN0cmluZyxcclxuICAgIHdlYnNpdGU6U3RyaW5nLFxyXG4gICAgc29jaWFsTGluazpTdHJpbmcsXHJcbiAgICBiYXNpY0luZm86U3RyaW5nLFxyXG4gICAgcmVsYXRpb25zaGlwU3RhdHVzOlN0cmluZyxcclxuICAgIGZhbWlseTpBcnJheSxcclxuICAgIGFib3V0WW91cnNlbGY6U3RyaW5nLFxyXG4gICAgcHJvbnVuY2lhdGlvbjpTdHJpbmcsXHJcbiAgICBvdGhlck5hbWU6U3RyaW5nLFxyXG4gICAgcXVvdGU6U3RyaW5nLFxyXG4gICAgYmxvb2REb25hdGlvbnM6U3RyaW5nLFxyXG4gICAgbGlmZUV2ZW50czpBcnJheVxyXG5cclxufSwgeyB0aW1lc3RhbXBzOiB7Y3JlYXRlZEF0OidjcmVhdGVkX2F0J30gfSlcclxuXHJcbmV4cG9ydCBjb25zdCBhYm91dCA9IG1vbmdvb3NlLm1vZGVsKCdhYm91dCcsYWJvdXRTY2hlbWEpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "about.modal.js"
      ],
      "names": [
        "aboutSchema",
        "userId",
        "String",
        "work",
        "Array",
        "university",
        "highSchool",
        "mobileNumber",
        "Number",
        "address",
        "website",
        "socialLink",
        "basicInfo",
        "relationshipStatus",
        "family",
        "aboutYourself",
        "pronunciation",
        "otherName",
        "quote",
        "bloodDonations",
        "lifeEvents",
        "timestamps",
        "createdAt",
        "about",
        "mongoose",
        "model"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;;;;;;;AAEA,IAAMA,WAAW,GAAG,sBAAO;AACvBC,EAAAA,MAAM,EAACC,MADgB;AAEvBC,EAAAA,IAAI,EAACC,KAFkB;AAGvBC,EAAAA,UAAU,EAACD,KAHY;AAIvBE,EAAAA,UAAU,EAACF,KAJY;AAKvBG,EAAAA,YAAY,EAACC,MALU;AAMvBC,EAAAA,OAAO,EAACP,MANe;AAOvBQ,EAAAA,OAAO,EAACR,MAPe;AAQvBS,EAAAA,UAAU,EAACT,MARY;AASvBU,EAAAA,SAAS,EAACV,MATa;AAUvBW,EAAAA,kBAAkB,EAACX,MAVI;AAWvBY,EAAAA,MAAM,EAACV,KAXgB;AAYvBW,EAAAA,aAAa,EAACb,MAZS;AAavBc,EAAAA,aAAa,EAACd,MAbS;AAcvBe,EAAAA,SAAS,EAACf,MAda;AAevBgB,EAAAA,KAAK,EAAChB,MAfiB;AAgBvBiB,EAAAA,cAAc,EAACjB,MAhBQ;AAiBvBkB,EAAAA,UAAU,EAAChB;AAjBY,CAAP,EAmBjB;AAAEiB,EAAAA,UAAU,EAAE;AAACC,IAAAA,SAAS,EAAC;AAAX;AAAd,CAnBiB,CAApB;;AAqBO,IAAMC,KAAK,GAAGC,qBAASC,KAAT,CAAe,OAAf,EAAuBzB,WAAvB,CAAd",
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\about\\",
      "sourcesContent": [
        "import mongoose, {Schema} from 'mongoose';\r\nimport timestamps from \"mongoose-timestamp\";\r\n\r\nconst aboutSchema = Schema({\r\n    userId:String,\r\n    work:Array,\r\n    university:Array,\r\n    highSchool:Array,\r\n    mobileNumber:Number,\r\n    address:String,\r\n    website:String,\r\n    socialLink:String,\r\n    basicInfo:String,\r\n    relationshipStatus:String,\r\n    family:Array,\r\n    aboutYourself:String,\r\n    pronunciation:String,\r\n    otherName:String,\r\n    quote:String,\r\n    bloodDonations:String,\r\n    lifeEvents:Array\r\n\r\n}, { timestamps: {createdAt:'created_at'} })\r\n\r\nexport const about = mongoose.model('about',aboutSchema);"
      ]
    },
    "sourceType": "script",
    "mtime": 1596626408000
  },
  "{\"sourceRoot\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\about\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"filename\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\about\\\\about.restRoute.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\about\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\harsh\\social-share-backend-nikund",
      "filename": "D:\\harsh\\social-share-backend-nikund\\api\\about\\about.restRoute.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\harsh\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\harsh\\social-share-backend-nikund\\api\\about\\about.restRoute.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\harsh\\social-share-backend-nikund\\api\\about\\about.restRoute.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\about\\",
        "sourceFileName": "about.restRoute.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.aboutRouter = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _about = require(\"./about.controller\");\n\nvar _about2 = require(\"./about.modal\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar aboutRouter = _express[\"default\"].Router();\n\nexports.aboutRouter = aboutRouter;\naboutRouter.post(\"/addWork\", _about.addWork);\naboutRouter.post(\"/updateWork\", _about.updateWork);\naboutRouter.post(\"/deleteWork\", _about.deleteWork);\naboutRouter.post(\"/addHighSchool\", _about.addHighSchool);\naboutRouter.post(\"/updateHighSchool\", _about.updateHighSchool);\naboutRouter.post(\"/deleteHighSchool\", _about.deleteHighSchool);\naboutRouter.post(\"/updateAbout\", _about.updateAbout);\naboutRouter.post(\"/deleteAbout\", _about.deleteAbout);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFib3V0LnJlc3RSb3V0ZS5qcyJdLCJuYW1lcyI6WyJhYm91dFJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJwb3N0IiwiYWRkV29yayIsInVwZGF0ZVdvcmsiLCJkZWxldGVXb3JrIiwiYWRkSGlnaFNjaG9vbCIsInVwZGF0ZUhpZ2hTY2hvb2wiLCJkZWxldGVIaWdoU2Nob29sIiwidXBkYXRlQWJvdXQiLCJkZWxldGVBYm91dCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQVdBOzs7O0FBQ08sSUFBTUEsV0FBVyxHQUFHQyxvQkFBUUMsTUFBUixFQUFwQjs7O0FBRVBGLFdBQVcsQ0FBQ0csSUFBWixDQUFpQixVQUFqQixFQUE0QkMsY0FBNUI7QUFDQUosV0FBVyxDQUFDRyxJQUFaLENBQWlCLGFBQWpCLEVBQStCRSxpQkFBL0I7QUFDQUwsV0FBVyxDQUFDRyxJQUFaLENBQWlCLGFBQWpCLEVBQStCRyxpQkFBL0I7QUFFQU4sV0FBVyxDQUFDRyxJQUFaLENBQWlCLGdCQUFqQixFQUFrQ0ksb0JBQWxDO0FBQ0FQLFdBQVcsQ0FBQ0csSUFBWixDQUFpQixtQkFBakIsRUFBcUNLLHVCQUFyQztBQUNBUixXQUFXLENBQUNHLElBQVosQ0FBaUIsbUJBQWpCLEVBQXFDTSx1QkFBckM7QUFFQVQsV0FBVyxDQUFDRyxJQUFaLENBQWlCLGNBQWpCLEVBQWdDTyxrQkFBaEM7QUFDQVYsV0FBVyxDQUFDRyxJQUFaLENBQWlCLGNBQWpCLEVBQWdDUSxrQkFBaEMiLCJzb3VyY2VSb290IjoiRDpcXGhhcnNoXFxzb2NpYWwtc2hhcmUtYmFja2VuZC1uaWt1bmRcXGFwaVxcYWJvdXRcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnXHJcbmltcG9ydCB7XHJcbiAgICBhZGRXb3JrLFxyXG4gICAgdXBkYXRlV29yayxcclxuICAgIGRlbGV0ZVdvcmssXHJcbiAgICBhZGRIaWdoU2Nob29sLFxyXG4gICAgdXBkYXRlSGlnaFNjaG9vbCxcclxuICAgIGRlbGV0ZUhpZ2hTY2hvb2wsXHJcbiAgICBkZWxldGVBYm91dCxcclxuICAgIHVwZGF0ZUFib3V0XHJcblxyXG59IGZyb20gJy4vYWJvdXQuY29udHJvbGxlcidcclxuaW1wb3J0IHsgYWJvdXQgfSBmcm9tICcuL2Fib3V0Lm1vZGFsJztcclxuZXhwb3J0IGNvbnN0IGFib3V0Um91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcclxuXHJcbmFib3V0Um91dGVyLnBvc3QoXCIvYWRkV29ya1wiLGFkZFdvcmspO1xyXG5hYm91dFJvdXRlci5wb3N0KFwiL3VwZGF0ZVdvcmtcIix1cGRhdGVXb3JrKTtcclxuYWJvdXRSb3V0ZXIucG9zdChcIi9kZWxldGVXb3JrXCIsZGVsZXRlV29yayk7XHJcblxyXG5hYm91dFJvdXRlci5wb3N0KFwiL2FkZEhpZ2hTY2hvb2xcIixhZGRIaWdoU2Nob29sKTtcclxuYWJvdXRSb3V0ZXIucG9zdChcIi91cGRhdGVIaWdoU2Nob29sXCIsdXBkYXRlSGlnaFNjaG9vbCk7XHJcbmFib3V0Um91dGVyLnBvc3QoXCIvZGVsZXRlSGlnaFNjaG9vbFwiLGRlbGV0ZUhpZ2hTY2hvb2wpO1xyXG5cclxuYWJvdXRSb3V0ZXIucG9zdChcIi91cGRhdGVBYm91dFwiLHVwZGF0ZUFib3V0KVxyXG5hYm91dFJvdXRlci5wb3N0KFwiL2RlbGV0ZUFib3V0XCIsZGVsZXRlQWJvdXQpIl19",
    "map": {
      "version": 3,
      "sources": [
        "about.restRoute.js"
      ],
      "names": [
        "aboutRouter",
        "express",
        "Router",
        "post",
        "addWork",
        "updateWork",
        "deleteWork",
        "addHighSchool",
        "updateHighSchool",
        "deleteHighSchool",
        "updateAbout",
        "deleteAbout"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAWA;;;;AACO,IAAMA,WAAW,GAAGC,oBAAQC,MAAR,EAApB;;;AAEPF,WAAW,CAACG,IAAZ,CAAiB,UAAjB,EAA4BC,cAA5B;AACAJ,WAAW,CAACG,IAAZ,CAAiB,aAAjB,EAA+BE,iBAA/B;AACAL,WAAW,CAACG,IAAZ,CAAiB,aAAjB,EAA+BG,iBAA/B;AAEAN,WAAW,CAACG,IAAZ,CAAiB,gBAAjB,EAAkCI,oBAAlC;AACAP,WAAW,CAACG,IAAZ,CAAiB,mBAAjB,EAAqCK,uBAArC;AACAR,WAAW,CAACG,IAAZ,CAAiB,mBAAjB,EAAqCM,uBAArC;AAEAT,WAAW,CAACG,IAAZ,CAAiB,cAAjB,EAAgCO,kBAAhC;AACAV,WAAW,CAACG,IAAZ,CAAiB,cAAjB,EAAgCQ,kBAAhC",
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\about\\",
      "sourcesContent": [
        "import express from 'express'\r\nimport {\r\n    addWork,\r\n    updateWork,\r\n    deleteWork,\r\n    addHighSchool,\r\n    updateHighSchool,\r\n    deleteHighSchool,\r\n    deleteAbout,\r\n    updateAbout\r\n\r\n} from './about.controller'\r\nimport { about } from './about.modal';\r\nexport const aboutRouter = express.Router();\r\n\r\naboutRouter.post(\"/addWork\",addWork);\r\naboutRouter.post(\"/updateWork\",updateWork);\r\naboutRouter.post(\"/deleteWork\",deleteWork);\r\n\r\naboutRouter.post(\"/addHighSchool\",addHighSchool);\r\naboutRouter.post(\"/updateHighSchool\",updateHighSchool);\r\naboutRouter.post(\"/deleteHighSchool\",deleteHighSchool);\r\n\r\naboutRouter.post(\"/updateAbout\",updateAbout)\r\naboutRouter.post(\"/deleteAbout\",deleteAbout)"
      ]
    },
    "sourceType": "script",
    "mtime": 1596626354000
  },
  "{\"sourceRoot\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\about\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"filename\":\"D:\\\\harsh\\\\social-share-backend-nikund\\\\api\\\\about\\\\about.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\harsh\\\\social-share-backend-nikund\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\about\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\harsh\\social-share-backend-nikund",
      "filename": "D:\\harsh\\social-share-backend-nikund\\api\\about\\about.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\harsh\\social-share-backend-nikund",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\harsh\\social-share-backend-nikund\\api\\about\\about.controller.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\harsh\\social-share-backend-nikund\\api\\about\\about.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\about\\",
        "sourceFileName": "about.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteAbout = exports.updateAbout = exports.deleteHighSchool = exports.updateHighSchool = exports.addHighSchool = exports.deleteWork = exports.updateWork = exports.addWork = void 0;\n\nvar _about = require(\"./about.modal\");\n\nvar _user = require(\"../users/user.modal\");\n\nvar _notification = require(\"../notification/notification.modal\");\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _config = _interopRequireDefault(require(\"../../config\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar checkUserData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(user) {\n    var userFind;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _about.about.find({\n              userId: user\n            });\n\n          case 2:\n            userFind = _context.sent;\n\n            if (!(userFind <= 0)) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 6;\n            return _about.about.create({\n              userId: user\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function checkUserData(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar addData = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(user, data, column) {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _about.about.findOneAndUpdate({\n              userId: user\n            }, {\n              $push: _defineProperty({}, column, data)\n            });\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function addData(_x2, _x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar updateData = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(user, dataId, data, updateId) {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _about.about.updateOne(_defineProperty({\n              userId: user\n            }, updateId, _mongoose[\"default\"].Types.ObjectId(dataId)), {\n              $set: data\n            });\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function updateData(_x5, _x6, _x7, _x8) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar deleteData = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(user, column, dataId) {\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _about.about.findOneAndUpdate({\n              userId: user\n            }, {\n              $pull: _defineProperty({}, column, {\n                _id: _mongoose[\"default\"].Types.ObjectId(dataId)\n              })\n            });\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function deleteData(_x9, _x10, _x11) {\n    return _ref4.apply(this, arguments);\n  };\n}(); //-------------------------------------------------------------------work--------------------------------------------------------------------\n//add work in user about\n\n\nvar addWork = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var userId, _req$body, company, position, city, description, fromdate, todate, data, userdata;\n\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            userId = req.body.userId;\n            _req$body = req.body, company = _req$body.company, position = _req$body.position, city = _req$body.city, description = _req$body.description, fromdate = _req$body.fromdate, todate = _req$body.todate;\n            data = {\n              _id: _mongoose[\"default\"].Types.ObjectId(),\n              company: company,\n              position: position,\n              city: city,\n              description: description,\n              fromdate: fromdate,\n              todate: todate\n            };\n            checkUserData(userId);\n            _context5.next = 7;\n            return _about.about.findOne({\n              userId: userId\n            });\n\n          case 7:\n            userdata = _context5.sent;\n            addData(userId, data, \"work\");\n            res.status(201).send({\n              success: true,\n              message: 'work add successfully'\n            });\n            _context5.next = 15;\n            break;\n\n          case 12:\n            _context5.prev = 12;\n            _context5.t0 = _context5[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context5.t0.message\n            });\n\n          case 15:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 12]]);\n  }));\n\n  return function addWork(_x12, _x13) {\n    return _ref5.apply(this, arguments);\n  };\n}(); //update work in user about\n\n\nexports.addWork = addWork;\n\nvar updateWork = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var _req$body2, userId, dataId, _req$body3, company, position, city, description, fromdate, todate, data;\n\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            try {\n              _req$body2 = req.body, userId = _req$body2.userId, dataId = _req$body2.dataId;\n              _req$body3 = req.body, company = _req$body3.company, position = _req$body3.position, city = _req$body3.city, description = _req$body3.description, fromdate = _req$body3.fromdate, todate = _req$body3.todate;\n              data = {\n                'work.$.company': company,\n                'work.$.position': position,\n                'work.$.city': city,\n                'work.$.description': description,\n                'work.$.fromdate': fromdate,\n                'work.$.todate': todate\n              };\n              updateData(userId, dataId, data, 'work._id');\n              res.status(201).send({\n                success: true,\n                message: 'update work successfully'\n              });\n            } catch (err) {\n              res.status(401).send({\n                success: false,\n                message: err.message\n              });\n            }\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function updateWork(_x14, _x15) {\n    return _ref6.apply(this, arguments);\n  };\n}(); //delete work in user about\n\n\nexports.updateWork = updateWork;\n\nvar deleteWork = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n    var _req$body4, userId, dataId;\n\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            try {\n              _req$body4 = req.body, userId = _req$body4.userId, dataId = _req$body4.dataId;\n              deleteData(userId, \"work\", dataId);\n              res.status(201).send({\n                success: true,\n                message: 'delete work successfully'\n              });\n            } catch (err) {\n              res.status(401).send({\n                success: false,\n                message: err.message\n              });\n            }\n\n          case 1:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function deleteWork(_x16, _x17) {\n    return _ref7.apply(this, arguments);\n  };\n}(); //------------------------------------------------high school---------------------------------------------------------------------------------\n//add HighSchool in user about\n\n\nexports.deleteWork = deleteWork;\n\nvar addHighSchool = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(req, res) {\n    var userId, _req$body5, name, description, fromdate, todate, data, userdata;\n\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.prev = 0;\n            userId = req.body.userId;\n            _req$body5 = req.body, name = _req$body5.name, description = _req$body5.description, fromdate = _req$body5.fromdate, todate = _req$body5.todate;\n            data = {\n              _id: _mongoose[\"default\"].Types.ObjectId(),\n              name: name,\n              description: description,\n              fromdate: fromdate,\n              todate: todate\n            };\n            checkUserData(userId);\n            _context8.next = 7;\n            return _about.about.findOne({\n              userId: userId\n            });\n\n          case 7:\n            userdata = _context8.sent;\n            addData(userId, data, \"highSchool\");\n            res.status(201).send({\n              success: true,\n              message: 'highSchool data add successfully'\n            });\n            _context8.next = 15;\n            break;\n\n          case 12:\n            _context8.prev = 12;\n            _context8.t0 = _context8[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context8.t0.message\n            });\n\n          case 15:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[0, 12]]);\n  }));\n\n  return function addHighSchool(_x18, _x19) {\n    return _ref8.apply(this, arguments);\n  };\n}(); //update work in user about\n\n\nexports.addHighSchool = addHighSchool;\n\nvar updateHighSchool = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(req, res) {\n    var _req$body6, userId, dataId, _req$body7, name, description, fromdate, todate, data;\n\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            try {\n              _req$body6 = req.body, userId = _req$body6.userId, dataId = _req$body6.dataId;\n              _req$body7 = req.body, name = _req$body7.name, description = _req$body7.description, fromdate = _req$body7.fromdate, todate = _req$body7.todate;\n              data = {\n                'highSchool.$.name': name,\n                'highSchool.$.description': description,\n                'highSchool.$.fromdate': fromdate,\n                'highSchool.$.todate': todate\n              };\n              updateData(userId, dataId, data, 'highSchool._id');\n              res.status(201).send({\n                success: true,\n                message: 'update highSchool data successfully'\n              });\n            } catch (err) {\n              res.status(401).send({\n                success: false,\n                message: err.message\n              });\n            }\n\n          case 1:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n\n  return function updateHighSchool(_x20, _x21) {\n    return _ref9.apply(this, arguments);\n  };\n}(); //delete work in user about\n\n\nexports.updateHighSchool = updateHighSchool;\n\nvar deleteHighSchool = /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(req, res) {\n    var _req$body8, userId, dataId;\n\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            try {\n              _req$body8 = req.body, userId = _req$body8.userId, dataId = _req$body8.dataId;\n              deleteData(userId, \"highSchool\", dataId);\n              res.status(201).send({\n                success: true,\n                message: 'delete highSchool data successfully'\n              });\n            } catch (err) {\n              res.status(401).send({\n                success: false,\n                message: err.message\n              });\n            }\n\n          case 1:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n\n  return function deleteHighSchool(_x22, _x23) {\n    return _ref10.apply(this, arguments);\n  };\n}(); //-------------------------------------------------------single String add -----------------------------------------------------------------------\n\n\nexports.deleteHighSchool = deleteHighSchool;\n\nfunction aboutMe(_x24, _x25, _x26) {\n  return _aboutMe.apply(this, arguments);\n}\n\nfunction _aboutMe() {\n  _aboutMe = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(userid, key, value) {\n    return regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            console.log(key);\n            _context13.next = 3;\n            return _about.about.findOneAndUpdate({\n              userId: userid\n            }, {\n              $set: _defineProperty({}, key, value)\n            });\n\n          case 3:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13);\n  }));\n  return _aboutMe.apply(this, arguments);\n}\n\nfunction deleteAboutMe(_x27, _x28, _x29) {\n  return _deleteAboutMe.apply(this, arguments);\n}\n\nfunction _deleteAboutMe() {\n  _deleteAboutMe = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(userid, key, value) {\n    return regeneratorRuntime.wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            console.log(key);\n            _context14.next = 3;\n            return _about.about.findOneAndUpdate({\n              userId: userid\n            }, {\n              $unset: _defineProperty({}, key, value)\n            });\n\n          case 3:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14);\n  }));\n  return _deleteAboutMe.apply(this, arguments);\n}\n\nvar updateAbout = /*#__PURE__*/function () {\n  var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(req, res) {\n    var decoded, user, userId, info, key, value;\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.prev = 0;\n            _context11.next = 3;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 3:\n            decoded = _context11.sent;\n            _context11.next = 6;\n            return _user.Users.findOne({\n              emailId: decoded.sub\n            });\n\n          case 6:\n            user = _context11.sent;\n            userId = user._id;\n            console.log(user._id);\n            info = req.body;\n            console.log(userId);\n            key = Object.keys(info)[0];\n            value = Object.values(info)[0];\n            console.log(key, value);\n            aboutMe(userId, key, value);\n            res.status(201).send({\n              success: true,\n              message: 'data update successsully'\n            });\n            _context11.next = 21;\n            break;\n\n          case 18:\n            _context11.prev = 18;\n            _context11.t0 = _context11[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context11.t0.message\n            });\n\n          case 21:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11, null, [[0, 18]]);\n  }));\n\n  return function updateAbout(_x30, _x31) {\n    return _ref11.apply(this, arguments);\n  };\n}();\n\nexports.updateAbout = updateAbout;\n\nvar deleteAbout = /*#__PURE__*/function () {\n  var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(req, res) {\n    var decoded, user, userId, info, key, value;\n    return regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _context12.prev = 0;\n            _context12.next = 3;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 3:\n            decoded = _context12.sent;\n            _context12.next = 6;\n            return _user.Users.findOne({\n              emailId: decoded.sub\n            });\n\n          case 6:\n            user = _context12.sent;\n            userId = user._id;\n            info = req.body;\n            console.log(userId);\n            key = Object.keys(info)[0];\n            value = Object.values(info)[0];\n            deleteAboutMe(userId, key, key, value);\n            res.status(201).send({\n              success: true,\n              message: 'data update successsully'\n            });\n            _context12.next = 19;\n            break;\n\n          case 16:\n            _context12.prev = 16;\n            _context12.t0 = _context12[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context12.t0.message\n            });\n\n          case 19:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12, null, [[0, 16]]);\n  }));\n\n  return function deleteAbout(_x32, _x33) {\n    return _ref12.apply(this, arguments);\n  };\n}();\n\nexports.deleteAbout = deleteAbout;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "about.controller.js"
      ],
      "names": [
        "checkUserData",
        "user",
        "about",
        "find",
        "userId",
        "userFind",
        "create",
        "addData",
        "data",
        "column",
        "findOneAndUpdate",
        "$push",
        "updateData",
        "dataId",
        "updateId",
        "updateOne",
        "mongoose",
        "Types",
        "ObjectId",
        "$set",
        "deleteData",
        "$pull",
        "_id",
        "addWork",
        "req",
        "res",
        "body",
        "company",
        "position",
        "city",
        "description",
        "fromdate",
        "todate",
        "findOne",
        "userdata",
        "status",
        "send",
        "success",
        "message",
        "updateWork",
        "err",
        "deleteWork",
        "addHighSchool",
        "name",
        "updateHighSchool",
        "deleteHighSchool",
        "aboutMe",
        "userid",
        "key",
        "value",
        "console",
        "log",
        "deleteAboutMe",
        "$unset",
        "updateAbout",
        "jwt",
        "verify",
        "headers",
        "token",
        "configKey",
        "secrets",
        "JWT_SECRET",
        "decoded",
        "Users",
        "emailId",
        "sub",
        "info",
        "Object",
        "keys",
        "values",
        "deleteAbout"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\harsh\\social-share-backend-nikund\\api\\about\\",
      "sourcesContent": [
        "import {about} from './about.modal'\r\nimport {Users} from '../users/user.modal'\r\nimport {notificationList} from '../notification/notification.modal'\r\nimport jwt from 'jsonwebtoken';\r\nimport configKey from '../../config'\r\nimport mongoose from 'mongoose'\r\n\r\nconst checkUserData = async(user) =>{\r\n    const userFind = await about.find({userId:user});\r\n    if(userFind<=0){                                                       \r\n        await about.create({\r\n            userId:user\r\n        })\r\n    }\r\n}\r\nconst addData = async(user,data,column) =>{\r\n    await about.findOneAndUpdate({userId:user},{\r\n        $push:{[column] : data} \r\n    })\r\n}\r\nconst updateData = async(user,dataId,data,updateId) =>{\r\n    await about.updateOne({userId:user,[updateId] :mongoose.Types.ObjectId(dataId)},{   \r\n        $set: data\r\n    })\r\n}\r\nconst deleteData = async(user,column,dataId) =>{\r\n    await about.findOneAndUpdate({userId:user},{\r\n        $pull:{[column] : { _id : mongoose.Types.ObjectId(dataId) }} \r\n    })\r\n}\r\n//-------------------------------------------------------------------work--------------------------------------------------------------------\r\n//add work in user about\r\nexport const addWork = async (req,res) =>{\r\n    try{\r\n        const {userId} = req.body;\r\n        const {company,position,city,description,fromdate,todate}=req.body\r\n        var data ={_id: mongoose.Types.ObjectId(),company:company,position:position,city:city,description:description,fromdate:fromdate,todate:todate};\r\n\r\n        checkUserData(userId);\r\n        const userdata= await about.findOne({userId:userId}) \r\n        addData(userId,data,\"work\");\r\n\r\n        res.status(201).send({\r\n            success:true,\r\n            message:'work add successfully',\r\n        })\r\n    }\r\n    catch(err){\r\n        res.status(401).send({\r\n            success:false,message:err.message\r\n        });\r\n    }\r\n}\r\n//update work in user about\r\nexport const updateWork = async (req,res) =>{\r\n    try{\r\n        const {userId,dataId} = req.body;\r\n        const {company,position,city,description,fromdate,todate}=req.body\r\n        var data ={'work.$.company':company,'work.$.position':position,'work.$.city':city,'work.$.description':description,'work.$.fromdate':fromdate,'work.$.todate':todate};\r\n        updateData(userId,dataId,data,'work._id')\r\n        res.status(201).send({\r\n            success:true,\r\n            message:'update work successfully',\r\n        })\r\n    }\r\n    catch(err){\r\n        res.status(401).send({\r\n            success:false,message:err.message\r\n        });\r\n    }\r\n}\r\n//delete work in user about\r\nexport const deleteWork = async (req,res) =>{\r\n    try{\r\n        const {userId,dataId} = req.body;\r\n        deleteData(userId,\"work\",dataId)\r\n        res.status(201).send({\r\n            success:true,\r\n            message:'delete work successfully',\r\n        })\r\n    }\r\n    catch(err){\r\n        res.status(401).send({\r\n            success:false,message:err.message\r\n        });\r\n    }\r\n}\r\n//------------------------------------------------high school---------------------------------------------------------------------------------\r\n//add HighSchool in user about\r\nexport const addHighSchool = async (req,res) =>{\r\n    try{\r\n        const {userId} = req.body;\r\n        const {name,description,fromdate,todate}=req.body\r\n        var data ={_id: mongoose.Types.ObjectId(),name:name,description:description,fromdate:fromdate,todate:todate};\r\n\r\n        checkUserData(userId);\r\n        const userdata= await about.findOne({userId:userId}) \r\n        addData(userId,data,\"highSchool\");\r\n\r\n        res.status(201).send({\r\n            success:true,\r\n            message:'highSchool data add successfully',\r\n        })\r\n    }\r\n    catch(err){\r\n        res.status(401).send({\r\n            success:false,message:err.message\r\n        });\r\n    }\r\n}\r\n//update work in user about\r\nexport const updateHighSchool = async (req,res) =>{\r\n    try{\r\n        const {userId,dataId} = req.body;\r\n        const {name,description,fromdate,todate}=req.body\r\n        var data ={'highSchool.$.name':name,'highSchool.$.description':description,'highSchool.$.fromdate':fromdate,'highSchool.$.todate':todate};\r\n        updateData(userId,dataId,data,'highSchool._id')\r\n        res.status(201).send({\r\n            success:true,\r\n            message:'update highSchool data successfully',\r\n        })\r\n    }\r\n    catch(err){\r\n        res.status(401).send({\r\n            success:false,message:err.message\r\n        });\r\n    }\r\n}\r\n//delete work in user about\r\nexport const deleteHighSchool = async (req,res) =>{\r\n    try{\r\n        const {userId,dataId} = req.body;\r\n        deleteData(userId,\"highSchool\",dataId)\r\n        res.status(201).send({\r\n            success:true,\r\n            message:'delete highSchool data successfully',\r\n        })\r\n    }\r\n    catch(err){\r\n        res.status(401).send({\r\n            success:false,message:err.message\r\n        });\r\n    }\r\n}\r\n\r\n//-------------------------------------------------------single String add -----------------------------------------------------------------------\r\nasync function aboutMe(userid,key,value){\r\n    console.log(key);\r\n    await about.findOneAndUpdate({userId:userid},{\r\n        $set:{[key] : value} \r\n    })\r\n}\r\nasync function deleteAboutMe(userid,key,value){\r\n    console.log(key);\r\n    await about.findOneAndUpdate({userId:userid},{\r\n        $unset:{[key] : value} \r\n    })\r\n}\r\n\r\nexport const updateAbout = async(req,res) =>{\r\n    try{\r\n        const decoded = await jwt.verify(req.headers.token, configKey.secrets.JWT_SECRET);\r\n        const user = await Users.findOne({emailId:decoded.sub})\r\n        const userId = user._id;\r\n        console.log(user._id);\r\n        const info = req.body;\r\n        console.log(userId);\r\n        var key=Object.keys(info)[0]\r\n        var value=Object.values(info)[0]\r\n        console.log(key,value);\r\n\r\n        aboutMe(userId,key,value);\r\n\r\n        res.status(201).send({\r\n            success:true,\r\n            message:'data update successsully'\r\n        })\r\n    }\r\n    catch(err){\r\n        res.status(401).send({\r\n            success:false,\r\n            message:err.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteAbout = async(req,res) =>{\r\n    try{\r\n        const decoded = await jwt.verify(req.headers.token, configKey.secrets.JWT_SECRET);\r\n        const user = await Users.findOne({emailId:decoded.sub})\r\n        const userId = user._id;\r\n        const info = req.body;\r\n        console.log(userId);\r\n        var key=Object.keys(info)[0]\r\n        var value=Object.values(info)[0]\r\n        deleteAboutMe(userId,key,key,value);\r\n        res.status(201).send({\r\n            success:true,\r\n            message:'data update successsully'\r\n        })\r\n    }\r\n    catch(err){\r\n        res.status(401).send({\r\n            success:false,\r\n            message:err.message\r\n        })\r\n    }\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1596627488000
  },
  "{\"sourceRoot\":\"D:\\\\authentication\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\authentication\",\"filename\":\"D:\\\\authentication\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\authentication\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\authentication\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\authentication",
      "filename": "D:\\authentication\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\authentication",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\authentication\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\authentication\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\authentication\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _http = _interopRequireDefault(require(\"http\"));\n\nvar _server = _interopRequireDefault(require(\"./server\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar server = null;\n\nif (process.env.NODE_ENV === \"development\") {\n  server = _http[\"default\"].createServer(_server[\"default\"]);\n} else {\n  console.log(\"This is the production environment\");\n  server = _server[\"default\"];\n}\n\n_server[\"default\"].get('/', function (req, res) {\n  res.send('welcome');\n});\n\nvar PORT = process.env.PORT || 8000;\nserver.listen(PORT, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n  return regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          try {\n            console.log(\"Server listening on port \".concat(PORT));\n          } catch (err) {\n            console.log(\"Server init error\", err);\n          }\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n})));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInNlcnZlciIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsImh0dHAiLCJjcmVhdGVTZXJ2ZXIiLCJhcHAiLCJjb25zb2xlIiwibG9nIiwiZ2V0IiwicmVxIiwicmVzIiwic2VuZCIsIlBPUlQiLCJsaXN0ZW4iLCJlcnIiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBRUE7Ozs7Ozs7O0FBRUEsSUFBSUEsTUFBTSxHQUFHLElBQWI7O0FBRUEsSUFBSUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFFBQVosS0FBeUIsYUFBN0IsRUFBNEM7QUFDeENILEVBQUFBLE1BQU0sR0FBR0ksaUJBQUtDLFlBQUwsQ0FBa0JDLGtCQUFsQixDQUFUO0FBQ0QsQ0FGSCxNQUVTO0FBQ0xDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLG9DQUFaO0FBQ0FSLEVBQUFBLE1BQU0sR0FBR00sa0JBQVQ7QUFDRDs7QUFFREEsbUJBQUlHLEdBQUosQ0FBUSxHQUFSLEVBQWEsVUFBQ0MsR0FBRCxFQUFLQyxHQUFMLEVBQWE7QUFDeEJBLEVBQUFBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTLFNBQVQ7QUFDRCxDQUZEOztBQUlGLElBQU1DLElBQUksR0FBR1osT0FBTyxDQUFDQyxHQUFSLENBQVlXLElBQVosSUFBb0IsSUFBakM7QUFFQWIsTUFBTSxDQUFDYyxNQUFQLENBQWNELElBQWQsdUVBQW9CO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDbEIsY0FBSTtBQUNGTixZQUFBQSxPQUFPLENBQUNDLEdBQVIsb0NBQXdDSyxJQUF4QztBQUNELFdBRkQsQ0FFRSxPQUFPRSxHQUFQLEVBQVk7QUFDWlIsWUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksbUJBQVosRUFBaUNPLEdBQWpDO0FBQ0Q7O0FBTGlCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLENBQXBCIiwic291cmNlUm9vdCI6IkQ6XFxhdXRoZW50aWNhdGlvblxcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGh0dHAgZnJvbSBcImh0dHBcIlxuXG5pbXBvcnQgYXBwIGZyb20gXCIuL3NlcnZlclwiXG5cbmxldCBzZXJ2ZXIgPSBudWxsO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwiZGV2ZWxvcG1lbnRcIikge1xuICAgIHNlcnZlciA9IGh0dHAuY3JlYXRlU2VydmVyKGFwcClcbiAgfSBlbHNlIHtcbiAgICBjb25zb2xlLmxvZyhcIlRoaXMgaXMgdGhlIHByb2R1Y3Rpb24gZW52aXJvbm1lbnRcIilcbiAgICBzZXJ2ZXIgPSBhcHBcbiAgfVxuXG4gIGFwcC5nZXQoJy8nLCAocmVxLHJlcykgPT4ge1xuICAgIHJlcy5zZW5kKCd3ZWxjb21lJyk7XG4gIH0pXG5cbmNvbnN0IFBPUlQgPSBwcm9jZXNzLmVudi5QT1JUIHx8IDgwMDBcblxuc2VydmVyLmxpc3RlbihQT1JULCBhc3luYyAoKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc29sZS5sb2coYFNlcnZlciBsaXN0ZW5pbmcgb24gcG9ydCAke1BPUlR9YClcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgY29uc29sZS5sb2coXCJTZXJ2ZXIgaW5pdCBlcnJvclwiLCBlcnIpXG4gIH1cbn0pXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "server",
        "process",
        "env",
        "NODE_ENV",
        "http",
        "createServer",
        "app",
        "console",
        "log",
        "get",
        "req",
        "res",
        "send",
        "PORT",
        "listen",
        "err"
      ],
      "mappings": ";;AAAA;;AAEA;;;;;;;;AAEA,IAAIA,MAAM,GAAG,IAAb;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxCH,EAAAA,MAAM,GAAGI,iBAAKC,YAAL,CAAkBC,kBAAlB,CAAT;AACD,CAFH,MAES;AACLC,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACAR,EAAAA,MAAM,GAAGM,kBAAT;AACD;;AAEDA,mBAAIG,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAKC,GAAL,EAAa;AACxBA,EAAAA,GAAG,CAACC,IAAJ,CAAS,SAAT;AACD,CAFD;;AAIF,IAAMC,IAAI,GAAGZ,OAAO,CAACC,GAAR,CAAYW,IAAZ,IAAoB,IAAjC;AAEAb,MAAM,CAACc,MAAP,CAAcD,IAAd,uEAAoB;AAAA;AAAA;AAAA;AAAA;AAClB,cAAI;AACFN,YAAAA,OAAO,CAACC,GAAR,oCAAwCK,IAAxC;AACD,WAFD,CAEE,OAAOE,GAAP,EAAY;AACZR,YAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCO,GAAjC;AACD;;AALiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB",
      "sourceRoot": "D:\\authentication\\",
      "sourcesContent": [
        "import http from \"http\"\n\nimport app from \"./server\"\n\nlet server = null;\n\nif (process.env.NODE_ENV === \"development\") {\n    server = http.createServer(app)\n  } else {\n    console.log(\"This is the production environment\")\n    server = app\n  }\n\n  app.get('/', (req,res) => {\n    res.send('welcome');\n  })\n\nconst PORT = process.env.PORT || 8000\n\nserver.listen(PORT, async () => {\n  try {\n    console.log(`Server listening on port ${PORT}`)\n  } catch (err) {\n    console.log(\"Server init error\", err)\n  }\n})\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1594986598000
  },
  "{\"sourceRoot\":\"D:\\\\authentication\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\authentication\",\"filename\":\"D:\\\\authentication\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\authentication\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\authentication\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\authentication",
      "filename": "D:\\authentication\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\authentication",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\authentication\\server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\authentication\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\authentication\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _db = require(\"./db\");\n\nvar _middlewares = _interopRequireDefault(require(\"./middlewares\"));\n\nvar _aurthorization = require(\"./aurthorization\");\n\nvar _restRouter = require(\"./api/restRouter\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\n\nrequire(\"dotenv\").config();\n\n(0, _middlewares[\"default\"])(app);\n(0, _db.connect)();\napp.use((0, _cors[\"default\"])());\napp.use('/auth', function (req, res, next) {\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  res.header(\"Access-Control-Allow-Methods\", \"POST, GET, PUT, DELETE, OPTIONS\");\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Authorization, Accept, Access-Control-Al\" + \"low-Methods\");\n  res.header(\"X-Frame-Options\", \"deny\");\n  res.header(\"X-Content-Type-Options\", \"nosniff\");\n  next();\n});\napp.use('/auth', _aurthorization.authRouter);\napp.use(_express[\"default\"][\"static\"]('public'));\napp.use('/api', function (req, res, next) {\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  res.header(\"Access-Control-Allow-Methods\", \"POST, GET, PUT, DELETE, OPTIONS\");\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Authorization, Accept, Access-Control-Al\" + \"low-Methods\");\n  res.header(\"X-Frame-Options\", \"deny\");\n  res.header(\"X-Content-Type-Options\", \"nosniff\");\n  next();\n});\napp.use('/api', _restRouter.restRouter);\nvar _default = app;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJyZXF1aXJlIiwiY29uZmlnIiwidXNlIiwicmVxIiwicmVzIiwibmV4dCIsImhlYWRlciIsImF1dGhSb3V0ZXIiLCJleHByZXNzIiwicmVzdFJvdXRlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBQ0EsSUFBTUEsR0FBRyxHQUFHLDBCQUFaOztBQUVBQyxPQUFPLENBQUMsUUFBRCxDQUFQLENBQWtCQyxNQUFsQjs7QUFFQSw2QkFBY0YsR0FBZDtBQUVBO0FBRUFBLEdBQUcsQ0FBQ0csR0FBSixDQUFRLHVCQUFSO0FBQ0FILEdBQUcsQ0FBQ0csR0FBSixDQUFRLE9BQVIsRUFBZ0IsVUFBQ0MsR0FBRCxFQUFLQyxHQUFMLEVBQVNDLElBQVQsRUFBZ0I7QUFDOUJELEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXLDZCQUFYLEVBQTBDLEdBQTFDO0FBQ0FGLEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXLDhCQUFYLEVBQTJDLGlDQUEzQztBQUNBRixFQUFBQSxHQUFHLENBQUNFLE1BQUosQ0FDSSw4QkFESixFQUVJLHFGQUNFLGFBSE47QUFLQUYsRUFBQUEsR0FBRyxDQUFDRSxNQUFKLENBQVcsaUJBQVgsRUFBOEIsTUFBOUI7QUFDQUYsRUFBQUEsR0FBRyxDQUFDRSxNQUFKLENBQVcsd0JBQVgsRUFBcUMsU0FBckM7QUFDQUQsRUFBQUEsSUFBSTtBQUNMLENBWEQ7QUFZQU4sR0FBRyxDQUFDRyxHQUFKLENBQVEsT0FBUixFQUFnQkssMEJBQWhCO0FBQ0FSLEdBQUcsQ0FBQ0csR0FBSixDQUFRTSw4QkFBZSxRQUFmLENBQVI7QUFDQVQsR0FBRyxDQUFDRyxHQUFKLENBQVEsTUFBUixFQUFlLFVBQUNDLEdBQUQsRUFBS0MsR0FBTCxFQUFTQyxJQUFULEVBQWdCO0FBQzdCRCxFQUFBQSxHQUFHLENBQUNFLE1BQUosQ0FBVyw2QkFBWCxFQUEwQyxHQUExQztBQUNBRixFQUFBQSxHQUFHLENBQUNFLE1BQUosQ0FBVyw4QkFBWCxFQUEyQyxpQ0FBM0M7QUFDQUYsRUFBQUEsR0FBRyxDQUFDRSxNQUFKLENBQ0ksOEJBREosRUFFSSxxRkFDRSxhQUhOO0FBS0FGLEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXLGlCQUFYLEVBQThCLE1BQTlCO0FBQ0FGLEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXLHdCQUFYLEVBQXFDLFNBQXJDO0FBQ0FELEVBQUFBLElBQUk7QUFDTCxDQVhEO0FBWUFOLEdBQUcsQ0FBQ0csR0FBSixDQUFRLE1BQVIsRUFBZU8sc0JBQWY7ZUFDZVYsRyIsInNvdXJjZVJvb3QiOiJEOlxcYXV0aGVudGljYXRpb25cXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XG5pbXBvcnQgY29ycyBmcm9tIFwiY29yc1wiO1xuaW1wb3J0IHtjb25uZWN0fSBmcm9tICcuL2RiJ1xuaW1wb3J0IHNldHVwTWlkZHdhcmUgZnJvbSAnLi9taWRkbGV3YXJlcydcbmltcG9ydCB7YXV0aFJvdXRlcn0gZnJvbSAnLi9hdXJ0aG9yaXphdGlvbidcbmltcG9ydCB7cmVzdFJvdXRlcn0gZnJvbSAnLi9hcGkvcmVzdFJvdXRlcidcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxucmVxdWlyZShcImRvdGVudlwiKS5jb25maWcoKVxuXG5zZXR1cE1pZGR3YXJlKGFwcClcblxuY29ubmVjdCgpO1xuXG5hcHAudXNlKGNvcnMoKSk7XG5hcHAudXNlKCcvYXV0aCcsKHJlcSxyZXMsbmV4dCk9PntcbiAgcmVzLmhlYWRlcihcIkFjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpblwiLCBcIipcIilcbiAgcmVzLmhlYWRlcihcIkFjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHNcIiwgXCJQT1NULCBHRVQsIFBVVCwgREVMRVRFLCBPUFRJT05TXCIpXG4gIHJlcy5oZWFkZXIoXG4gICAgICBcIkFjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnNcIixcbiAgICAgIFwiT3JpZ2luLCBYLVJlcXVlc3RlZC1XaXRoLCBDb250ZW50LVR5cGUsIEF1dGhvcml6YXRpb24sIEFjY2VwdCwgQWNjZXNzLUNvbnRyb2wtQWxcIiArXG4gICAgICAgIFwibG93LU1ldGhvZHNcIlxuICAgIClcbiAgcmVzLmhlYWRlcihcIlgtRnJhbWUtT3B0aW9uc1wiLCBcImRlbnlcIilcbiAgcmVzLmhlYWRlcihcIlgtQ29udGVudC1UeXBlLU9wdGlvbnNcIiwgXCJub3NuaWZmXCIpXG4gIG5leHQoKTtcbn0pXG5hcHAudXNlKCcvYXV0aCcsYXV0aFJvdXRlcilcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMoJ3B1YmxpYycpKVxuYXBwLnVzZSgnL2FwaScsKHJlcSxyZXMsbmV4dCk9PntcbiAgcmVzLmhlYWRlcihcIkFjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpblwiLCBcIipcIilcbiAgcmVzLmhlYWRlcihcIkFjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHNcIiwgXCJQT1NULCBHRVQsIFBVVCwgREVMRVRFLCBPUFRJT05TXCIpXG4gIHJlcy5oZWFkZXIoXG4gICAgICBcIkFjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnNcIixcbiAgICAgIFwiT3JpZ2luLCBYLVJlcXVlc3RlZC1XaXRoLCBDb250ZW50LVR5cGUsIEF1dGhvcml6YXRpb24sIEFjY2VwdCwgQWNjZXNzLUNvbnRyb2wtQWxcIiArXG4gICAgICAgIFwibG93LU1ldGhvZHNcIlxuICAgIClcbiAgcmVzLmhlYWRlcihcIlgtRnJhbWUtT3B0aW9uc1wiLCBcImRlbnlcIilcbiAgcmVzLmhlYWRlcihcIlgtQ29udGVudC1UeXBlLU9wdGlvbnNcIiwgXCJub3NuaWZmXCIpXG4gIG5leHQoKTtcbn0pXG5hcHAudXNlKCcvYXBpJyxyZXN0Um91dGVyKVxuZXhwb3J0IGRlZmF1bHQgYXBwO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "require",
        "config",
        "use",
        "req",
        "res",
        "next",
        "header",
        "authRouter",
        "express",
        "restRouter"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AACA,IAAMA,GAAG,GAAG,0BAAZ;;AAEAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,6BAAcF,GAAd;AAEA;AAEAA,GAAG,CAACG,GAAJ,CAAQ,uBAAR;AACAH,GAAG,CAACG,GAAJ,CAAQ,OAAR,EAAgB,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAgB;AAC9BD,EAAAA,GAAG,CAACE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA2C,iCAA3C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CACI,8BADJ,EAEI,qFACE,aAHN;AAKAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,iBAAX,EAA8B,MAA9B;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,wBAAX,EAAqC,SAArC;AACAD,EAAAA,IAAI;AACL,CAXD;AAYAN,GAAG,CAACG,GAAJ,CAAQ,OAAR,EAAgBK,0BAAhB;AACAR,GAAG,CAACG,GAAJ,CAAQM,8BAAe,QAAf,CAAR;AACAT,GAAG,CAACG,GAAJ,CAAQ,MAAR,EAAe,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAgB;AAC7BD,EAAAA,GAAG,CAACE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA2C,iCAA3C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CACI,8BADJ,EAEI,qFACE,aAHN;AAKAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,iBAAX,EAA8B,MAA9B;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,wBAAX,EAAqC,SAArC;AACAD,EAAAA,IAAI;AACL,CAXD;AAYAN,GAAG,CAACG,GAAJ,CAAQ,MAAR,EAAeO,sBAAf;eACeV,G",
      "sourceRoot": "D:\\authentication\\",
      "sourcesContent": [
        "import express from \"express\";\nimport cors from \"cors\";\nimport {connect} from './db'\nimport setupMiddware from './middlewares'\nimport {authRouter} from './aurthorization'\nimport {restRouter} from './api/restRouter'\nconst app = express();\n\nrequire(\"dotenv\").config()\n\nsetupMiddware(app)\n\nconnect();\n\napp.use(cors());\napp.use('/auth',(req,res,next)=>{\n  res.header(\"Access-Control-Allow-Origin\", \"*\")\n  res.header(\"Access-Control-Allow-Methods\", \"POST, GET, PUT, DELETE, OPTIONS\")\n  res.header(\n      \"Access-Control-Allow-Headers\",\n      \"Origin, X-Requested-With, Content-Type, Authorization, Accept, Access-Control-Al\" +\n        \"low-Methods\"\n    )\n  res.header(\"X-Frame-Options\", \"deny\")\n  res.header(\"X-Content-Type-Options\", \"nosniff\")\n  next();\n})\napp.use('/auth',authRouter)\napp.use(express.static('public'))\napp.use('/api',(req,res,next)=>{\n  res.header(\"Access-Control-Allow-Origin\", \"*\")\n  res.header(\"Access-Control-Allow-Methods\", \"POST, GET, PUT, DELETE, OPTIONS\")\n  res.header(\n      \"Access-Control-Allow-Headers\",\n      \"Origin, X-Requested-With, Content-Type, Authorization, Accept, Access-Control-Al\" +\n        \"low-Methods\"\n    )\n  res.header(\"X-Frame-Options\", \"deny\")\n  res.header(\"X-Content-Type-Options\", \"nosniff\")\n  next();\n})\napp.use('/api',restRouter)\nexport default app;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1594986598000
  },
  "{\"sourceRoot\":\"D:\\\\authentication\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\authentication\",\"filename\":\"D:\\\\authentication\\\\db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\authentication\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\authentication\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\authentication",
      "filename": "D:\\authentication\\db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\authentication",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\authentication\\db.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\authentication\\db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\authentication\\",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.connect = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _mongooseTimestamp = _interopRequireDefault(require(\"mongoose-timestamp\"));\n\nvar _config = _interopRequireDefault(require(\"./config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_mongoose[\"default\"].Promise = global.Promise;\n\n_mongoose[\"default\"].plugin(_mongooseTimestamp[\"default\"]);\n\nvar connect = function connect() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _config[\"default\"];\n\n  _mongoose[\"default\"].set(\"useCreateIndex\", true);\n\n  _mongoose[\"default\"].set(\"useNewUrlParser\", true);\n\n  _mongoose[\"default\"].set(\"useFindAndModify\", false);\n\n  _mongoose[\"default\"].connect(_config[\"default\"].db.url, {\n    useUnifiedTopology: true,\n    useNewUrlParser: true\n  }).then(function () {\n    console.log(\"db connected\");\n  })[\"catch\"](function (err) {\n    console.log(err);\n  });\n};\n\nexports.connect = connect;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwiUHJvbWlzZSIsImdsb2JhbCIsInBsdWdpbiIsInRpbWVzdGFtcHMiLCJjb25uZWN0IiwiY29uZmlnIiwiYXBwQ29uZmlnIiwic2V0IiwiZGIiLCJ1cmwiLCJ1c2VVbmlmaWVkVG9wb2xvZ3kiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ0aGVuIiwiY29uc29sZSIsImxvZyIsImVyciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOzs7O0FBRUFBLHFCQUFTQyxPQUFULEdBQW1CQyxNQUFNLENBQUNELE9BQTFCOztBQUNBRCxxQkFBU0csTUFBVCxDQUFnQkMsNkJBQWhCOztBQUVPLElBQU1DLE9BQU8sR0FBRyxTQUFWQSxPQUFVLEdBQXdCO0FBQUEsTUFBdkJDLE1BQXVCLHVFQUFkQyxrQkFBYzs7QUFDM0NQLHVCQUFTUSxHQUFULENBQWEsZ0JBQWIsRUFBK0IsSUFBL0I7O0FBQ0FSLHVCQUFTUSxHQUFULENBQWEsaUJBQWIsRUFBZ0MsSUFBaEM7O0FBQ0FSLHVCQUFTUSxHQUFULENBQWEsa0JBQWIsRUFBaUMsS0FBakM7O0FBQ0FSLHVCQUFTSyxPQUFULENBQ0VFLG1CQUFVRSxFQUFWLENBQWFDLEdBRGYsRUFFRTtBQUFFQyxJQUFBQSxrQkFBa0IsRUFBRSxJQUF0QjtBQUNFQyxJQUFBQSxlQUFlLEVBQUU7QUFEbkIsR0FGRixFQUtFQyxJQUxGLENBS08sWUFBSTtBQUFDQyxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxjQUFaO0FBQTRCLEdBTHhDLFdBTU8sVUFBQ0MsR0FBRCxFQUFPO0FBQUNGLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxHQUFaO0FBQWlCLEdBTmhDO0FBUUQsQ0FaSSIsInNvdXJjZVJvb3QiOiJEOlxcYXV0aGVudGljYXRpb25cXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSdcbmltcG9ydCB0aW1lc3RhbXBzIGZyb20gJ21vbmdvb3NlLXRpbWVzdGFtcCdcbmltcG9ydCBhcHBDb25maWcgZnJvbSBcIi4vY29uZmlnXCI7XG5cbm1vbmdvb3NlLlByb21pc2UgPSBnbG9iYWwuUHJvbWlzZTtcbm1vbmdvb3NlLnBsdWdpbih0aW1lc3RhbXBzKTtcblxuZXhwb3J0IGNvbnN0IGNvbm5lY3QgPSAoY29uZmlnID0gYXBwQ29uZmlnKSA9PiB7XG4gICAgbW9uZ29vc2Uuc2V0KFwidXNlQ3JlYXRlSW5kZXhcIiwgdHJ1ZSk7XG4gICAgbW9uZ29vc2Uuc2V0KFwidXNlTmV3VXJsUGFyc2VyXCIsIHRydWUpO1xuICAgIG1vbmdvb3NlLnNldChcInVzZUZpbmRBbmRNb2RpZnlcIiwgZmFsc2UpO1xuICAgIG1vbmdvb3NlLmNvbm5lY3QoXG4gICAgICBhcHBDb25maWcuZGIudXJsLFxuICAgICAgeyB1c2VVbmlmaWVkVG9wb2xvZ3k6IHRydWUsXG4gICAgICAgIHVzZU5ld1VybFBhcnNlcjogdHJ1ZVxuICAgICAgfVxuICAgICkudGhlbigoKT0+e2NvbnNvbGUubG9nKFwiZGIgY29ubmVjdGVkXCIpfSlcbiAgICAuY2F0Y2goKGVycik9Pntjb25zb2xlLmxvZyhlcnIpfVxuICAgIClcbiAgfTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "mongoose",
        "Promise",
        "global",
        "plugin",
        "timestamps",
        "connect",
        "config",
        "appConfig",
        "set",
        "db",
        "url",
        "useUnifiedTopology",
        "useNewUrlParser",
        "then",
        "console",
        "log",
        "err"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAEAA,qBAASC,OAAT,GAAmBC,MAAM,CAACD,OAA1B;;AACAD,qBAASG,MAAT,CAAgBC,6BAAhB;;AAEO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAwB;AAAA,MAAvBC,MAAuB,uEAAdC,kBAAc;;AAC3CP,uBAASQ,GAAT,CAAa,gBAAb,EAA+B,IAA/B;;AACAR,uBAASQ,GAAT,CAAa,iBAAb,EAAgC,IAAhC;;AACAR,uBAASQ,GAAT,CAAa,kBAAb,EAAiC,KAAjC;;AACAR,uBAASK,OAAT,CACEE,mBAAUE,EAAV,CAAaC,GADf,EAEE;AAAEC,IAAAA,kBAAkB,EAAE,IAAtB;AACEC,IAAAA,eAAe,EAAE;AADnB,GAFF,EAKEC,IALF,CAKO,YAAI;AAACC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAA4B,GALxC,WAMO,UAACC,GAAD,EAAO;AAACF,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AAAiB,GANhC;AAQD,CAZI",
      "sourceRoot": "D:\\authentication\\",
      "sourcesContent": [
        "import mongoose from 'mongoose'\nimport timestamps from 'mongoose-timestamp'\nimport appConfig from \"./config\";\n\nmongoose.Promise = global.Promise;\nmongoose.plugin(timestamps);\n\nexport const connect = (config = appConfig) => {\n    mongoose.set(\"useCreateIndex\", true);\n    mongoose.set(\"useNewUrlParser\", true);\n    mongoose.set(\"useFindAndModify\", false);\n    mongoose.connect(\n      appConfig.db.url,\n      { useUnifiedTopology: true,\n        useNewUrlParser: true\n      }\n    ).then(()=>{console.log(\"db connected\")})\n    .catch((err)=>{console.log(err)}\n    )\n  };"
      ]
    },
    "sourceType": "script",
    "mtime": 1594986598000
  },
  "{\"sourceRoot\":\"D:\\\\authentication\\\\config\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\authentication\",\"filename\":\"D:\\\\authentication\\\\config\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\authentication\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\authentication\\config\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\authentication",
      "filename": "D:\\authentication\\config\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\authentication",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\authentication\\config\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\authentication\\config\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\authentication\\config\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nrequire(\"dotenv\").config();\n\nvar config = {\n  expireTime: process.env.JWTEXPIRE,\n  secrets: {\n    JWT_SECRET: process.env.JWTSECRET\n  },\n  db: {\n    url: process.env.DBURL\n  },\n  port: process.env.PORT\n};\nvar _default = config;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJjb25maWciLCJleHBpcmVUaW1lIiwicHJvY2VzcyIsImVudiIsIkpXVEVYUElSRSIsInNlY3JldHMiLCJKV1RfU0VDUkVUIiwiSldUU0VDUkVUIiwiZGIiLCJ1cmwiLCJEQlVSTCIsInBvcnQiLCJQT1JUIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUFBLE9BQU8sQ0FBQyxRQUFELENBQVAsQ0FBa0JDLE1BQWxCOztBQUNBLElBQU1BLE1BQU0sR0FBRztBQUNYQyxFQUFBQSxVQUFVLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxTQURiO0FBRVhDLEVBQUFBLE9BQU8sRUFBRTtBQUNQQyxJQUFBQSxVQUFVLEVBQUVKLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSTtBQURqQixHQUZFO0FBS1hDLEVBQUFBLEVBQUUsRUFBRTtBQUNGQyxJQUFBQSxHQUFHLEVBQUVQLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTztBQURmLEdBTE87QUFRWEMsRUFBQUEsSUFBSSxFQUFFVCxPQUFPLENBQUNDLEdBQVIsQ0FBWVM7QUFSUCxDQUFmO2VBV2lCWixNIiwic291cmNlUm9vdCI6IkQ6XFxhdXRoZW50aWNhdGlvblxcY29uZmlnXFwiLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKFwiZG90ZW52XCIpLmNvbmZpZygpXG5jb25zdCBjb25maWcgPSB7XG4gICAgZXhwaXJlVGltZTogcHJvY2Vzcy5lbnYuSldURVhQSVJFLFxuICAgIHNlY3JldHM6IHtcbiAgICAgIEpXVF9TRUNSRVQ6IHByb2Nlc3MuZW52LkpXVFNFQ1JFVFxuICAgIH0sXG4gICAgZGI6IHtcbiAgICAgIHVybDogcHJvY2Vzcy5lbnYuREJVUkxcbiAgICB9LFxuICAgIHBvcnQ6IHByb2Nlc3MuZW52LlBPUlQsXG4gIH1cbiAgXG4gIGV4cG9ydCBkZWZhdWx0IGNvbmZpZyAiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "require",
        "config",
        "expireTime",
        "process",
        "env",
        "JWTEXPIRE",
        "secrets",
        "JWT_SECRET",
        "JWTSECRET",
        "db",
        "url",
        "DBURL",
        "port",
        "PORT"
      ],
      "mappings": ";;;;;;;AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,IAAMA,MAAM,GAAG;AACXC,EAAAA,UAAU,EAAEC,OAAO,CAACC,GAAR,CAAYC,SADb;AAEXC,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EAAEJ,OAAO,CAACC,GAAR,CAAYI;AADjB,GAFE;AAKXC,EAAAA,EAAE,EAAE;AACFC,IAAAA,GAAG,EAAEP,OAAO,CAACC,GAAR,CAAYO;AADf,GALO;AAQXC,EAAAA,IAAI,EAAET,OAAO,CAACC,GAAR,CAAYS;AARP,CAAf;eAWiBZ,M",
      "sourceRoot": "D:\\authentication\\config\\",
      "sourcesContent": [
        "require(\"dotenv\").config()\nconst config = {\n    expireTime: process.env.JWTEXPIRE,\n    secrets: {\n      JWT_SECRET: process.env.JWTSECRET\n    },\n    db: {\n      url: process.env.DBURL\n    },\n    port: process.env.PORT,\n  }\n  \n  export default config "
      ]
    },
    "sourceType": "script",
    "mtime": 1594986606000
  },
  "{\"sourceRoot\":\"D:\\\\authentication\\\\middlewares\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\authentication\",\"filename\":\"D:\\\\authentication\\\\middlewares\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\authentication\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\authentication\\middlewares\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\authentication",
      "filename": "D:\\authentication\\middlewares\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\authentication",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\authentication\\middlewares\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\authentication\\middlewares\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\authentication\\middlewares\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _helmet = _interopRequireDefault(require(\"helmet\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar setGlobelMiddleware = function setGlobelMiddleware(app) {\n  app.use(_bodyParser[\"default\"].urlencoded({\n    limit: \"50mb\",\n    extended: true\n  }));\n  app.use(_bodyParser[\"default\"].json({\n    limit: \"50mb\"\n  }));\n  app.use(_bodyParser[\"default\"].text({\n    type: \"application/x-ndjson\"\n  }));\n  app.use((0, _helmet[\"default\"])());\n  app.use(_helmet[\"default\"].xssFilter());\n  app.disable(\"x-powered-by\");\n  var sixtyDaysInSeconds = 5184000;\n  app.use(_helmet[\"default\"].hsts({\n    maxAge: sixtyDaysInSeconds\n  }));\n};\n\nvar _default = setGlobelMiddleware;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInNldEdsb2JlbE1pZGRsZXdhcmUiLCJhcHAiLCJ1c2UiLCJib2R5UGFyc2VyIiwidXJsZW5jb2RlZCIsImxpbWl0IiwiZXh0ZW5kZWQiLCJqc29uIiwidGV4dCIsInR5cGUiLCJoZWxtZXQiLCJ4c3NGaWx0ZXIiLCJkaXNhYmxlIiwic2l4dHlEYXlzSW5TZWNvbmRzIiwiaHN0cyIsIm1heEFnZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7O0FBRUEsSUFBTUEsbUJBQW1CLEdBQUcsU0FBdEJBLG1CQUFzQixDQUFBQyxHQUFHLEVBQUc7QUFDOUJBLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRQyx1QkFBV0MsVUFBWCxDQUFzQjtBQUFFQyxJQUFBQSxLQUFLLEVBQUUsTUFBVDtBQUFpQkMsSUFBQUEsUUFBUSxFQUFFO0FBQTNCLEdBQXRCLENBQVI7QUFDQUwsRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVFDLHVCQUFXSSxJQUFYLENBQWdCO0FBQUVGLElBQUFBLEtBQUssRUFBRTtBQUFULEdBQWhCLENBQVI7QUFDQUosRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVFDLHVCQUFXSyxJQUFYLENBQWdCO0FBQUVDLElBQUFBLElBQUksRUFBRTtBQUFSLEdBQWhCLENBQVI7QUFDQVIsRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEseUJBQVI7QUFDQUQsRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVFRLG1CQUFPQyxTQUFQLEVBQVI7QUFDQVYsRUFBQUEsR0FBRyxDQUFDVyxPQUFKLENBQVksY0FBWjtBQUVBLE1BQU1DLGtCQUFrQixHQUFHLE9BQTNCO0FBQ0FaLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUNFUSxtQkFBT0ksSUFBUCxDQUFZO0FBQ1ZDLElBQUFBLE1BQU0sRUFBRUY7QUFERSxHQUFaLENBREY7QUFLRCxDQWRIOztlQWdCZWIsbUIiLCJzb3VyY2VSb290IjoiRDpcXGF1dGhlbnRpY2F0aW9uXFxtaWRkbGV3YXJlc1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInXG5pbXBvcnQgaGVsbWV0IGZyb20gJ2hlbG1ldCdcblxuY29uc3Qgc2V0R2xvYmVsTWlkZGxld2FyZSA9IGFwcCA9PntcbiAgICBhcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7IGxpbWl0OiBcIjUwbWJcIiwgZXh0ZW5kZWQ6IHRydWUgfSkpO1xuICAgIGFwcC51c2UoYm9keVBhcnNlci5qc29uKHsgbGltaXQ6IFwiNTBtYlwiIH0pKTtcbiAgICBhcHAudXNlKGJvZHlQYXJzZXIudGV4dCh7IHR5cGU6IFwiYXBwbGljYXRpb24veC1uZGpzb25cIiB9KSk7XG4gICAgYXBwLnVzZShoZWxtZXQoKSk7XG4gICAgYXBwLnVzZShoZWxtZXQueHNzRmlsdGVyKCkpXG4gICAgYXBwLmRpc2FibGUoXCJ4LXBvd2VyZWQtYnlcIik7XG5cbiAgICBjb25zdCBzaXh0eURheXNJblNlY29uZHMgPSA1MTg0MDAwO1xuICAgIGFwcC51c2UoXG4gICAgICBoZWxtZXQuaHN0cyh7XG4gICAgICAgIG1heEFnZTogc2l4dHlEYXlzSW5TZWNvbmRzXG4gICAgICB9KVxuICAgICk7XG4gIH07XG5cbmV4cG9ydCBkZWZhdWx0IHNldEdsb2JlbE1pZGRsZXdhcmU7Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "setGlobelMiddleware",
        "app",
        "use",
        "bodyParser",
        "urlencoded",
        "limit",
        "extended",
        "json",
        "text",
        "type",
        "helmet",
        "xssFilter",
        "disable",
        "sixtyDaysInSeconds",
        "hsts",
        "maxAge"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,GAAG,EAAG;AAC9BA,EAAAA,GAAG,CAACC,GAAJ,CAAQC,uBAAWC,UAAX,CAAsB;AAAEC,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,QAAQ,EAAE;AAA3B,GAAtB,CAAR;AACAL,EAAAA,GAAG,CAACC,GAAJ,CAAQC,uBAAWI,IAAX,CAAgB;AAAEF,IAAAA,KAAK,EAAE;AAAT,GAAhB,CAAR;AACAJ,EAAAA,GAAG,CAACC,GAAJ,CAAQC,uBAAWK,IAAX,CAAgB;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAhB,CAAR;AACAR,EAAAA,GAAG,CAACC,GAAJ,CAAQ,yBAAR;AACAD,EAAAA,GAAG,CAACC,GAAJ,CAAQQ,mBAAOC,SAAP,EAAR;AACAV,EAAAA,GAAG,CAACW,OAAJ,CAAY,cAAZ;AAEA,MAAMC,kBAAkB,GAAG,OAA3B;AACAZ,EAAAA,GAAG,CAACC,GAAJ,CACEQ,mBAAOI,IAAP,CAAY;AACVC,IAAAA,MAAM,EAAEF;AADE,GAAZ,CADF;AAKD,CAdH;;eAgBeb,mB",
      "sourceRoot": "D:\\authentication\\middlewares\\",
      "sourcesContent": [
        "import bodyParser from 'body-parser'\nimport helmet from 'helmet'\n\nconst setGlobelMiddleware = app =>{\n    app.use(bodyParser.urlencoded({ limit: \"50mb\", extended: true }));\n    app.use(bodyParser.json({ limit: \"50mb\" }));\n    app.use(bodyParser.text({ type: \"application/x-ndjson\" }));\n    app.use(helmet());\n    app.use(helmet.xssFilter())\n    app.disable(\"x-powered-by\");\n\n    const sixtyDaysInSeconds = 5184000;\n    app.use(\n      helmet.hsts({\n        maxAge: sixtyDaysInSeconds\n      })\n    );\n  };\n\nexport default setGlobelMiddleware;"
      ]
    },
    "sourceType": "script",
    "mtime": 1594986606000
  },
  "{\"sourceRoot\":\"D:\\\\authentication\\\\aurthorization\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\authentication\",\"filename\":\"D:\\\\authentication\\\\aurthorization\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\authentication\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\authentication\\aurthorization\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\authentication",
      "filename": "D:\\authentication\\aurthorization\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\authentication",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\authentication\\aurthorization\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\authentication\\aurthorization\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\authentication\\aurthorization\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _auth = require(\"./auth.restRouter\");\n\nObject.keys(_auth).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _auth[key];\n    }\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSIsInNvdXJjZVJvb3QiOiJEOlxcYXV0aGVudGljYXRpb25cXGF1cnRob3JpemF0aW9uXFwiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9hdXRoLnJlc3RSb3V0ZXJcIjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [],
      "mappings": ";;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA",
      "sourceRoot": "D:\\authentication\\aurthorization\\",
      "sourcesContent": [
        "export * from \"./auth.restRouter\";"
      ]
    },
    "sourceType": "script",
    "mtime": 1594986604000
  },
  "{\"sourceRoot\":\"D:\\\\authentication\\\\aurthorization\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\authentication\",\"filename\":\"D:\\\\authentication\\\\aurthorization\\\\auth.restRouter.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\authentication\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\authentication\\aurthorization\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\authentication",
      "filename": "D:\\authentication\\aurthorization\\auth.restRouter.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\authentication",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\authentication\\aurthorization\\auth.restRouter.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\authentication\\aurthorization\\auth.restRouter.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\authentication\\aurthorization\\",
        "sourceFileName": "auth.restRouter.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.authRouter = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _auth = require(\"./auth.controller\");\n\nvar _auth2 = require(\"./auth.middleware\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar authRouter = _express[\"default\"].Router();\n\nexports.authRouter = authRouter;\nauthRouter.post('/signin', _auth2.requireSignIn, _auth.signin);\nauthRouter.post(\"/signup\", _auth.signup);\nauthRouter.post('/forgotpassword', _auth.forgotPassword);\nauthRouter.post(\"/resetpassword\", _auth.resetPassword);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGgucmVzdFJvdXRlci5qcyJdLCJuYW1lcyI6WyJhdXRoUm91dGVyIiwiZXhwcmVzcyIsIlJvdXRlciIsInBvc3QiLCJyZXF1aXJlU2lnbkluIiwic2lnbmluIiwic2lnbnVwIiwiZm9yZ290UGFzc3dvcmQiLCJyZXNldFBhc3N3b3JkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBTUE7Ozs7QUFDTyxJQUFNQSxVQUFVLEdBQUdDLG9CQUFRQyxNQUFSLEVBQW5COzs7QUFFUEYsVUFBVSxDQUFDRyxJQUFYLENBQWdCLFNBQWhCLEVBQTBCQyxvQkFBMUIsRUFBd0NDLFlBQXhDO0FBQ0FMLFVBQVUsQ0FBQ0csSUFBWCxDQUFnQixTQUFoQixFQUEyQkcsWUFBM0I7QUFDQU4sVUFBVSxDQUFDRyxJQUFYLENBQWdCLGlCQUFoQixFQUFrQ0ksb0JBQWxDO0FBQ0FQLFVBQVUsQ0FBQ0csSUFBWCxDQUFnQixnQkFBaEIsRUFBaUNLLG1CQUFqQyIsInNvdXJjZVJvb3QiOiJEOlxcYXV0aGVudGljYXRpb25cXGF1cnRob3JpemF0aW9uXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiO1xuaW1wb3J0IHtcbiAgICBzaWdudXAsXG4gICAgc2lnbmluLFxuICAgIGZvcmdvdFBhc3N3b3JkLFxuICAgIHJlc2V0UGFzc3dvcmRcbn0gZnJvbSAnLi9hdXRoLmNvbnRyb2xsZXInXG5pbXBvcnQge3JlcXVpcmVTaWduSW59IGZyb20gJy4vYXV0aC5taWRkbGV3YXJlJ1xuZXhwb3J0IGNvbnN0IGF1dGhSb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG5hdXRoUm91dGVyLnBvc3QoJy9zaWduaW4nLHJlcXVpcmVTaWduSW4sc2lnbmluKTtcbmF1dGhSb3V0ZXIucG9zdChcIi9zaWdudXBcIiwgc2lnbnVwKTtcbmF1dGhSb3V0ZXIucG9zdCgnL2ZvcmdvdHBhc3N3b3JkJyxmb3Jnb3RQYXNzd29yZCk7XG5hdXRoUm91dGVyLnBvc3QoXCIvcmVzZXRwYXNzd29yZFwiLHJlc2V0UGFzc3dvcmQpO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "auth.restRouter.js"
      ],
      "names": [
        "authRouter",
        "express",
        "Router",
        "post",
        "requireSignIn",
        "signin",
        "signup",
        "forgotPassword",
        "resetPassword"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAMA;;;;AACO,IAAMA,UAAU,GAAGC,oBAAQC,MAAR,EAAnB;;;AAEPF,UAAU,CAACG,IAAX,CAAgB,SAAhB,EAA0BC,oBAA1B,EAAwCC,YAAxC;AACAL,UAAU,CAACG,IAAX,CAAgB,SAAhB,EAA2BG,YAA3B;AACAN,UAAU,CAACG,IAAX,CAAgB,iBAAhB,EAAkCI,oBAAlC;AACAP,UAAU,CAACG,IAAX,CAAgB,gBAAhB,EAAiCK,mBAAjC",
      "sourceRoot": "D:\\authentication\\aurthorization\\",
      "sourcesContent": [
        "import express from \"express\";\nimport {\n    signup,\n    signin,\n    forgotPassword,\n    resetPassword\n} from './auth.controller'\nimport {requireSignIn} from './auth.middleware'\nexport const authRouter = express.Router();\n\nauthRouter.post('/signin',requireSignIn,signin);\nauthRouter.post(\"/signup\", signup);\nauthRouter.post('/forgotpassword',forgotPassword);\nauthRouter.post(\"/resetpassword\",resetPassword);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1594986604000
  },
  "{\"sourceRoot\":\"D:\\\\authentication\\\\aurthorization\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\authentication\",\"filename\":\"D:\\\\authentication\\\\aurthorization\\\\auth.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\authentication\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\authentication\\aurthorization\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\authentication",
      "filename": "D:\\authentication\\aurthorization\\auth.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\authentication",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\authentication\\aurthorization\\auth.controller.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\authentication\\aurthorization\\auth.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\authentication\\aurthorization\\",
        "sourceFileName": "auth.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resetPassword = exports.forgotPassword = exports.signin = exports.signup = void 0;\n\nvar _users = require(\"../api/users\");\n\nvar _bcryptNodejs = _interopRequireDefault(require(\"bcrypt-nodejs\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nvar _nodemailer = _interopRequireDefault(require(\"nodemailer\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// mail object\nvar smtpTransport = _nodemailer[\"default\"].createTransport({\n  host: \"smtp.gmail.com\",\n  port: 587,\n  auth: {\n    user: \"shubhamkanani.dds@gmail.com\",\n    pass: 'Sh9825784600'\n  }\n}); // Registration api\n\n\nvar signup = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var _req$body, email, name, uname, password, userName, emailRegexp, mobileNoRegexp, emailId, isEmailExist, mobileNo, ismobileNoExist;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _req$body = req.body, email = _req$body.email, name = _req$body.name, uname = _req$body.uname, password = _req$body.password;\n            userName = uname;\n            emailRegexp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n            mobileNoRegexp = /\\(?\\d{3}\\)?-? *\\d{3}-? *-?\\d{6}/;\n\n            if (!emailRegexp.test(email)) {\n              _context.next = 19;\n              break;\n            }\n\n            emailId = email.toLowerCase();\n            _context.next = 9;\n            return _users.Users.findOne({\n              emailId: emailId\n            });\n\n          case 9:\n            isEmailExist = _context.sent;\n            console.log(isEmailExist);\n\n            if (!isEmailExist) {\n              _context.next = 13;\n              break;\n            }\n\n            return _context.abrupt(\"return\", res.status(422).send({\n              success: false,\n              message: \"Email is alrady exist\"\n            }));\n\n          case 13:\n            console.log(_bcryptNodejs[\"default\"].hashSync(password));\n            _context.next = 16;\n            return _users.Users.create({\n              emailId: emailId,\n              name: name,\n              userName: userName,\n              password: _bcryptNodejs[\"default\"].hashSync(password)\n            });\n\n          case 16:\n            return _context.abrupt(\"return\", res.status(201).send({\n              success: true,\n              message: \"User created successfully.\"\n            }));\n\n          case 19:\n            if (!mobileNoRegexp.test(email)) {\n              _context.next = 31;\n              break;\n            }\n\n            mobileNo = email;\n            _context.next = 23;\n            return _users.Users.findOne({\n              mobileNo: mobileNo\n            });\n\n          case 23:\n            ismobileNoExist = _context.sent;\n\n            if (!ismobileNoExist) {\n              _context.next = 26;\n              break;\n            }\n\n            return _context.abrupt(\"return\", res.status(422).send({\n              success: false,\n              message: \"Mobile number is alrady exist\"\n            }));\n\n          case 26:\n            _context.next = 28;\n            return _users.Users.create({\n              mobileNo: mobileNo,\n              name: name,\n              userName: userName,\n              password: _bcryptNodejs[\"default\"].hashSync(password)\n            });\n\n          case 28:\n            return _context.abrupt(\"return\", res.status(201).send({\n              success: true,\n              message: \"User created successfully.\"\n            }));\n\n          case 31:\n            return _context.abrupt(\"return\", res.status(401).send({\n              success: false,\n              message: \"User not created.\"\n            }));\n\n          case 32:\n            _context.next = 37;\n            break;\n\n          case 34:\n            _context.prev = 34;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(422).send({\n              success: false,\n              message: _context.t0.message\n            });\n\n          case 37:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 34]]);\n  }));\n\n  return function signup(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}(); //token genration\n\n\nexports.signup = signup;\nvar expirationInterval = process.env.NODE_ENV === \"development\" ? 30 * 24 * 60 * 60 : (parseInt(process.env.JWTSECRET) || 1) * 24 * 60 * 60;\n\nvar tokenForUser = function tokenForUser(user) {\n  try {\n    console.log(user.emailId);\n    var timestamp = new Date().getTime();\n    return _jsonwebtoken[\"default\"].sign({\n      sub: user.emailId,\n      iat: timestamp,\n      // entityDetails: loginDetails.relatedFaEntities[0],\n      exp: Math.floor(Date.now() / 1000) + expirationInterval\n    }, _config[\"default\"].secrets.JWT_SECRET);\n  } catch (err) {\n    throw err;\n  }\n}; //signin api\n\n\nvar signin = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var email, emailRegexp, mobileNoRegexp, userExistence, _userExistence;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            email = req.body.email;\n            _context2.prev = 1;\n            emailRegexp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n            mobileNoRegexp = /\\(?\\d{3}\\)?-? *\\d{3}-? *-?\\d{6}/;\n\n            if (!emailRegexp.test(email)) {\n              _context2.next = 11;\n              break;\n            }\n\n            _context2.next = 7;\n            return _users.Users.findOne({\n              emailId: email.toLowerCase()\n            });\n\n          case 7:\n            userExistence = _context2.sent;\n\n            if (userExistence) {\n              res.status(200).send({\n                success: true,\n                token: tokenForUser(userExistence),\n                data: userExistence\n              });\n            }\n\n            _context2.next = 16;\n            break;\n\n          case 11:\n            if (!mobileNoRegexp.test(email)) {\n              _context2.next = 16;\n              break;\n            }\n\n            _context2.next = 14;\n            return _users.Users.findOne({\n              mobileNo: email\n            });\n\n          case 14:\n            _userExistence = _context2.sent;\n\n            if (_userExistence) {\n              res.status(200).send({\n                success: true,\n                token: tokenForUser(_userExistence),\n                data: _userExistence\n              });\n            }\n\n          case 16:\n            _context2.next = 21;\n            break;\n\n          case 18:\n            _context2.prev = 18;\n            _context2.t0 = _context2[\"catch\"](1);\n            res.status(422).send({\n              success: false,\n              error: \"Unable to Login using email - \".concat(email)\n            });\n\n          case 21:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 18]]);\n  }));\n\n  return function signin(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}(); //forget password Link genration\n\n\nexports.signin = signin;\n\nvar forgotPassword = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var email, emailId, emailRegexp, isEmailExist, mail, token, data;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            email = req.body.email;\n            emailId = email.toLowerCase();\n            emailRegexp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n            if (emailRegexp.test(emailId)) {\n              _context3.next = 6;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", res.status(422).send({\n              success: false,\n              message: \"Invalid Email\"\n            }));\n\n          case 6:\n            _context3.next = 8;\n            return _users.Users.findOne({\n              emailId: emailId\n            }).then(function (data) {\n              return data ? true : false;\n            });\n\n          case 8:\n            isEmailExist = _context3.sent;\n\n            if (isEmailExist) {\n              _context3.next = 11;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", res.status(422).send({\n              success: false,\n              message: \"email in not registered\"\n            }));\n\n          case 11:\n            mail = {\n              emailId: email\n            };\n            token = tokenForUser(mail);\n            data = {\n              to: emailId,\n              from: process.env.MAILER_EMAIL_ID,\n              subject: \"Click Below Link To Reset Password \",\n              text: \"Confirm your email address to get started.\\n\\n\" + \"Please click on the following link, or paste this into your browser to the reset password process:\\n\\n\" + \"http://localhost:4200/reset?token=\" + token + \"\\n\\n\" + \"If you did not need this, please ignore this email and your password will remain unchanged.\\n\"\n            };\n            _context3.next = 16;\n            return smtpTransport.sendMail(data, function (err) {\n              return err ? res.status(422).send({\n                success: false,\n                message: err\n              }) : res.status(200).send({\n                success: true,\n                message: \"please check your email to reset your password!\"\n              });\n            });\n\n          case 16:\n            _context3.next = 21;\n            break;\n\n          case 18:\n            _context3.prev = 18;\n            _context3.t0 = _context3[\"catch\"](0);\n            res.status(422).send({\n              success: false,\n              message: _context3.t0.message\n            });\n\n          case 21:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 18]]);\n  }));\n\n  return function forgotPassword(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexports.forgotPassword = forgotPassword;\n\nvar resetPassword = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var token, decoded;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            token = req.query.token;\n            decoded = _jsonwebtoken[\"default\"].decode(token);\n            console.log(decoded);\n            _context4.next = 6;\n            return _users.Users.findOneAndUpdate({\n              emailId: decoded.sub\n            }, {\n              password: _bcryptNodejs[\"default\"].hashSync(req.body.password)\n            });\n\n          case 6:\n            return _context4.abrupt(\"return\", res.status(200).send({\n              success: true,\n              message: \"your password changed successfully!\"\n            }));\n\n          case 9:\n            _context4.prev = 9;\n            _context4.t0 = _context4[\"catch\"](0);\n            res.status(422).send({\n              success: false,\n              message: _context4.t0.message\n            });\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 9]]);\n  }));\n\n  return function resetPassword(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nexports.resetPassword = resetPassword;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "auth.controller.js"
      ],
      "names": [
        "smtpTransport",
        "nodemailer",
        "createTransport",
        "host",
        "port",
        "auth",
        "user",
        "pass",
        "signup",
        "req",
        "res",
        "body",
        "email",
        "name",
        "uname",
        "password",
        "userName",
        "emailRegexp",
        "mobileNoRegexp",
        "test",
        "emailId",
        "toLowerCase",
        "Users",
        "findOne",
        "isEmailExist",
        "console",
        "log",
        "status",
        "send",
        "success",
        "message",
        "bcrypt",
        "hashSync",
        "create",
        "mobileNo",
        "ismobileNoExist",
        "expirationInterval",
        "process",
        "env",
        "NODE_ENV",
        "parseInt",
        "JWTSECRET",
        "tokenForUser",
        "timestamp",
        "Date",
        "getTime",
        "jwt",
        "sign",
        "sub",
        "iat",
        "exp",
        "Math",
        "floor",
        "now",
        "configKey",
        "secrets",
        "JWT_SECRET",
        "err",
        "signin",
        "userExistence",
        "token",
        "data",
        "error",
        "forgotPassword",
        "then",
        "mail",
        "to",
        "from",
        "MAILER_EMAIL_ID",
        "subject",
        "text",
        "sendMail",
        "resetPassword",
        "query",
        "decoded",
        "decode",
        "findOneAndUpdate"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\authentication\\aurthorization\\",
      "sourcesContent": [
        "import {Users} from '../api/users'\nimport bcrypt from 'bcrypt-nodejs'\nimport jwt from 'jsonwebtoken'\nimport configKey from '../config'\nimport nodemailer from 'nodemailer'\n\n// mail object\nconst smtpTransport = nodemailer.createTransport({\n    host: \"smtp.gmail.com\",\n    port: 587,\n    auth: {\n      user: \"shubhamkanani.dds@gmail.com\",\n      pass: 'Sh9825784600'\n    }\n  });\n// Registration api\n\nexport const signup = async (req,res) =>{\n    try{\n        const {email,name,uname,password} = req.body;\n        const userName = uname;\n        const emailRegexp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n        const mobileNoRegexp = /\\(?\\d{3}\\)?-? *\\d{3}-? *-?\\d{6}/;\n        if(emailRegexp.test(email)){\n            const emailId = email.toLowerCase();\n            const isEmailExist = await Users.findOne({emailId: emailId});\n            console.log(isEmailExist);\n            if(isEmailExist){\n                return res\n                    .status(422)\n                    .send({ success: false, message: \"Email is alrady exist\" });\n            }\n            console.log(bcrypt.hashSync(password))\n            await Users.create({\n                emailId,\n                name,\n                userName,\n                password:bcrypt.hashSync(password),\n            })\n            return res.status(201).send({\n                success: true,\n                message: \"User created successfully.\"\n              });\n        }\n        else if(mobileNoRegexp.test(email)){\n            const mobileNo = email;\n            const ismobileNoExist = await Users.findOne({mobileNo:mobileNo})\n            if(ismobileNoExist){\n                return res\n                    .status(422)\n                    .send({ success: false, message: \"Mobile number is alrady exist\" });\n            }\n            await Users.create({\n                mobileNo,\n                name,\n                userName,\n                password:bcrypt.hashSync(password),\n            })\n            return res.status(201).send({\n                success: true,\n                message: \"User created successfully.\"\n              });\n        }\n        else{\n            return res.status(401).send({\n                success: false,\n                message: \"User not created.\"\n              });\n        }\n    }\n    catch(err){\n        res.status(422).send({ success: false, message: err.message });\n    }\n}\n\n//token genration\nconst expirationInterval =\n    (process.env.NODE_ENV === \"development\")? 30 * 24 * 60 * 60: (parseInt(process.env.JWTSECRET) || 1) * 24 * 60 * 60;\n\nconst tokenForUser = (user) => {\n    try {\n      console.log(user.emailId)\n      const timestamp = new Date().getTime();\n      return jwt.sign(\n        {\n          sub: user.emailId,\n          iat: timestamp,\n          // entityDetails: loginDetails.relatedFaEntities[0],\n          exp: Math.floor(Date.now() / 1000) + expirationInterval\n        },\n        configKey.secrets.JWT_SECRET\n      );\n    }\n    catch (err) {\n      throw err;\n    }\n  };\n\n//signin api\n\nexport const signin = async (req,res) => {\n    const {email} = req.body;\n    try{\n        const emailRegexp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n        const mobileNoRegexp = /\\(?\\d{3}\\)?-? *\\d{3}-? *-?\\d{6}/;\n            if(emailRegexp.test(email)){\n               const userExistence = await Users.findOne({emailId:email.toLowerCase()})\n               if(userExistence){\n                res.status(200).send({\n                    success: true,\n                    token: tokenForUser(userExistence),\n                    data:userExistence\n                  });\n            }\n            }\n            else if(mobileNoRegexp.test(email)){\n               const userExistence = await Users.findOne({mobileNo:email})\n               if(userExistence){\n                res.status(200).send({\n                    success: true,\n                    token: tokenForUser(userExistence),\n                    data:userExistence\n                  });\n            }\n            }\n    }\n    catch(err){\n        res.status(422).send({\n            success: false,\n            error: `Unable to Login using email - ${email}`\n          });\n    }\n}\n\n//forget password Link genration\n\nexport const forgotPassword = async (req,res) =>{\n  try{\n    let {email} = req.body\n    const emailId = email.toLowerCase();\n    const emailRegexp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if (!emailRegexp.test(emailId)) {\n        return res.status(422).send({ success: false, message: \"Invalid Email\" });\n      }\n    const isEmailExist = await Users.findOne({emailId:emailId}).then(data => {\n        return data ? true : false;\n      });\n      if (!isEmailExist) {\n        return res\n          .status(422)\n          .send({ success: false, message: \"email in not registered\" });\n      }\n      const mail = {\n        emailId:email\n      }\n      const token = tokenForUser(mail);\n      const data = {\n        to: emailId,\n        from: process.env.MAILER_EMAIL_ID,\n        subject: \"Click Below Link To Reset Password \",\n        text:\n          \"Confirm your email address to get started.\\n\\n\" +\n          \"Please click on the following link, or paste this into your browser to the reset password process:\\n\\n\" +\n          \"http://localhost:4200/reset?token=\" +\n          token +\n          \"\\n\\n\" +\n          \"If you did not need this, please ignore this email and your password will remain unchanged.\\n\"\n      };\n      await smtpTransport.sendMail(data, err => {\n        return err ? res.status(422).send({\n              success: false,\n              message: err\n            }) : res.status(200).send({\n              success: true,\n              message: \"please check your email to reset your password!\"\n            });\n      });\n  }\n  catch(err){\n    res.status(422).send({ success: false, message: err.message });\n  }\n}\nexport const resetPassword = async(req,res) =>{\n  try{\n    const token = req.query.token;\n    const decoded =jwt.decode(token)\n    console.log(decoded);\n    await Users.findOneAndUpdate(\n      { emailId: decoded.sub },\n      { password: bcrypt.hashSync(req.body.password) }\n    );\n    return res.status(200).send({\n      success: true,\n      message: \"your password changed successfully!\"\n    });\n  }\n  catch(err){\n    res.status(422).send({ success: false, message: err.message });\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600856606773
  },
  "{\"sourceRoot\":\"D:\\\\authentication\\\\api\\\\users\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\authentication\",\"filename\":\"D:\\\\authentication\\\\api\\\\users\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\authentication\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\authentication\\api\\users\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\authentication",
      "filename": "D:\\authentication\\api\\users\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\authentication",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\authentication\\api\\users\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\authentication\\api\\users\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\authentication\\api\\users\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _user = require(\"./user.restRouter\");\n\nObject.keys(_user).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _user[key];\n    }\n  });\n});\n\nvar _user2 = require(\"./user.modal\");\n\nObject.keys(_user2).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _user2[key];\n    }\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFDQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEiLCJzb3VyY2VSb290IjoiRDpcXGF1dGhlbnRpY2F0aW9uXFxhcGlcXHVzZXJzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICcuL3VzZXIucmVzdFJvdXRlcic7XG5leHBvcnQgKiBmcm9tICcuL3VzZXIubW9kYWwnIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [],
      "mappings": ";;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA",
      "sourceRoot": "D:\\authentication\\api\\users\\",
      "sourcesContent": [
        "export * from './user.restRouter';\nexport * from './user.modal'"
      ]
    },
    "sourceType": "script",
    "mtime": 1594986602000
  },
  "{\"sourceRoot\":\"D:\\\\authentication\\\\api\\\\users\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\authentication\",\"filename\":\"D:\\\\authentication\\\\api\\\\users\\\\user.restRouter.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\authentication\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\authentication\\api\\users\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\authentication",
      "filename": "D:\\authentication\\api\\users\\user.restRouter.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\authentication",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\authentication\\api\\users\\user.restRouter.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\authentication\\api\\users\\user.restRouter.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\authentication\\api\\users\\",
        "sourceFileName": "user.restRouter.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.userRouter = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _user = require(\"./user.controller\");\n\nvar _multer = _interopRequireDefault(require(\"multer\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _config = _interopRequireDefault(require(\"../../config\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _user2 = require(\"./user.modal\");\n\nvar _querystring = require(\"querystring\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar userRouter = _express[\"default\"].Router();\n\nexports.userRouter = userRouter;\n\nvar pstorage = _multer[\"default\"].diskStorage({\n  destination: function () {\n    var _destination = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, file, cb) {\n      var profileUploadDir;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              profileUploadDir = _path[\"default\"].join(__dirname, '..', '..', 'public', 'profile');\n\n              if (_fs[\"default\"].existsSync(profileUploadDir)) {\n                cb(null, profileUploadDir);\n              } else {\n                _fs[\"default\"].mkdirSync(profileUploadDir);\n\n                cb(null, profileUploadDir);\n              }\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function destination(_x, _x2, _x3) {\n      return _destination.apply(this, arguments);\n    }\n\n    return destination;\n  }(),\n  filename: function () {\n    var _filename = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, file, cb) {\n      var decoded, data, extension;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n            case 2:\n              decoded = _context2.sent;\n              _context2.next = 5;\n              return _user2.Users.findOne({\n                emailId: decoded.sub\n              });\n\n            case 5:\n              data = _context2.sent;\n              extension = file.originalname.substring(file.originalname.lastIndexOf('.') + 1);\n              cb(null, data._id + '.' + extension);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function filename(_x4, _x5, _x6) {\n      return _filename.apply(this, arguments);\n    }\n\n    return filename;\n  }()\n});\n\nvar cstroge = _multer[\"default\"].diskStorage({\n  destination: function () {\n    var _destination2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, file, cb) {\n      var userId, coverUploaddir;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              userId = req.body.userId;\n              coverUploaddir = _path[\"default\"].join(__dirname, '..', '..', 'public', 'cover');\n\n              if (_fs[\"default\"].existsSync(coverUploaddir)) {\n                cb(null, coverUploaddir);\n              } else {\n                _fs[\"default\"].mkdirSync(coverUploaddir);\n\n                cb(null, coverUploaddir);\n              }\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function destination(_x7, _x8, _x9) {\n      return _destination2.apply(this, arguments);\n    }\n\n    return destination;\n  }(),\n  filename: function () {\n    var _filename2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, file, cb) {\n      var decoded, data, extension;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n            case 2:\n              decoded = _context4.sent;\n              _context4.next = 5;\n              return _user2.Users.findOne({\n                emailId: decoded.sub\n              });\n\n            case 5:\n              data = _context4.sent;\n              extension = file.originalname.substring(file.originalname.lastIndexOf('.') + 1);\n              cb(null, data._id + '.' + extension);\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function filename(_x10, _x11, _x12) {\n      return _filename2.apply(this, arguments);\n    }\n\n    return filename;\n  }()\n});\n\nvar uploadCoverImg = (0, _multer[\"default\"])({\n  storage: cstroge,\n  fileFilter: function () {\n    var _fileFilter = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, file, cb) {\n      var decoded, data, extension, coverUploaddir;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n            case 3:\n              decoded = _context5.sent;\n              _context5.next = 6;\n              return _user2.Users.findOne({\n                emailId: decoded.sub\n              });\n\n            case 6:\n              data = _context5.sent;\n              extension = data.coverImgURl.substring(data.coverImgURl.lastIndexOf(\".\") + 1);\n              coverUploaddir = _path[\"default\"].join(__dirname, '..', '..', 'public', 'cover');\n              console.log(extension);\n\n              if (_fs[\"default\"].existsSync(coverUploaddir + '/' + data._id + '.' + extension)) {\n                _fs[\"default\"].unlink(coverUploaddir + '/' + data._id + '.' + extension, function (err) {\n                  if (err) throw err; // if no error, file has been deleted successfully\n\n                  console.log('File deleted!');\n                });\n              }\n\n              cb(null, true);\n              _context5.next = 17;\n              break;\n\n            case 14:\n              _context5.prev = 14;\n              _context5.t0 = _context5[\"catch\"](0);\n              cb(null, false, new Error(_context5.t0.message));\n\n            case 17:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 14]]);\n    }));\n\n    function fileFilter(_x13, _x14, _x15) {\n      return _fileFilter.apply(this, arguments);\n    }\n\n    return fileFilter;\n  }()\n});\nvar uploadProfileImg = (0, _multer[\"default\"])({\n  storage: pstorage,\n  fileFilter: function () {\n    var _fileFilter2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, file, cb) {\n      var decoded, data, extension, profileUploadDir;\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n            case 3:\n              decoded = _context6.sent;\n              _context6.next = 6;\n              return _user2.Users.findOne({\n                emailId: decoded.sub\n              });\n\n            case 6:\n              data = _context6.sent;\n              extension = data.coverImgURl.substring(data.coverImgURl.lastIndexOf(\".\") + 1);\n              profileUploadDir = _path[\"default\"].join(__dirname, '..', '..', 'public', 'profile');\n              console.log(extension);\n\n              if (_fs[\"default\"].existsSync(profileUploadDir + '/' + data._id + '.' + extension)) {\n                _fs[\"default\"].unlink(profileUploadDir + '/' + data._id + '.' + extension, function (err) {\n                  if (err) throw err; // if no error, file has been deleted successfully\n\n                  console.log('File deleted!');\n                });\n              }\n\n              cb(null, true);\n              _context6.next = 17;\n              break;\n\n            case 14:\n              _context6.prev = 14;\n              _context6.t0 = _context6[\"catch\"](0);\n              cb(null, false, new Error(_context6.t0.message));\n\n            case 17:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[0, 14]]);\n    }));\n\n    function fileFilter(_x16, _x17, _x18) {\n      return _fileFilter2.apply(this, arguments);\n    }\n\n    return fileFilter;\n  }()\n});\nuserRouter.post('/setprofileimg', uploadProfileImg.single('image'), _user.setProfileImg);\nuserRouter.post('/setcoverimg', uploadCoverImg.single('image'), _user.setCoverImg);\nuserRouter.get('/profile', _user.getProfile);\nuserRouter.post('/serach', _user.serachUser);\nuserRouter.post('/update', _user.updateUser);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "user.restRouter.js"
      ],
      "names": [
        "userRouter",
        "express",
        "Router",
        "pstorage",
        "multer",
        "diskStorage",
        "destination",
        "req",
        "file",
        "cb",
        "profileUploadDir",
        "path",
        "join",
        "__dirname",
        "fs",
        "existsSync",
        "mkdirSync",
        "filename",
        "jwt",
        "verify",
        "headers",
        "token",
        "configKey",
        "secrets",
        "JWT_SECRET",
        "decoded",
        "Users",
        "findOne",
        "emailId",
        "sub",
        "data",
        "extension",
        "originalname",
        "substring",
        "lastIndexOf",
        "_id",
        "cstroge",
        "userId",
        "body",
        "coverUploaddir",
        "uploadCoverImg",
        "storage",
        "fileFilter",
        "coverImgURl",
        "console",
        "log",
        "unlink",
        "err",
        "Error",
        "message",
        "uploadProfileImg",
        "post",
        "single",
        "setProfileImg",
        "setCoverImg",
        "get",
        "getProfile",
        "serachUser",
        "updateUser"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\authentication\\api\\users\\",
      "sourcesContent": [
        "import express from \"express\";\nimport {\n    getProfile,\n    serachUser,\n    updateUser,\n    setProfileImg,\n    setCoverImg,\n    \n} from './user.controller';\nimport multer from 'multer';\nimport path from 'path';\nimport fs from 'fs';\nimport configKey from '../../config'\nimport jwt from 'jsonwebtoken';\nimport { Users } from \"./user.modal\";\nimport { decode } from \"querystring\";\nexport const userRouter = express.Router();\n\nvar pstorage = multer.diskStorage({\n    destination: async function(req, file, cb){\n        const profileUploadDir = path.join(__dirname,'..','..','public','profile');\n        if (fs.existsSync(profileUploadDir)){\n            cb(null, profileUploadDir)\n        }\n        else{\n            fs.mkdirSync(profileUploadDir)\n            cb(null, profileUploadDir)\n        }\n    },\n    filename:async function(req,file,cb){\n        const decoded = await jwt.verify(req.headers.token, configKey.secrets.JWT_SECRET);\n        const data = await Users.findOne({emailId:decoded.sub})\n        const extension = file.originalname.substring(file.originalname.lastIndexOf('.') + 1);\n        cb(null, data._id+'.'+extension)\n    }\n})\n\nvar cstroge = multer.diskStorage({\n    destination: async function(req, file, cb){\n        const {userId} = req.body;\n        const coverUploaddir = path.join(__dirname,'..','..','public','cover');\n        if (fs.existsSync(coverUploaddir)){\n            cb(null, coverUploaddir)\n        }\n        else{\n            fs.mkdirSync(coverUploaddir)\n            cb(null, coverUploaddir)\n        }\n    },\n    filename:async function(req,file,cb){\n        const decoded = await jwt.verify(req.headers.token, configKey.secrets.JWT_SECRET);\n        const data = await Users.findOne({emailId:decoded.sub})\n        const extension = file.originalname.substring(file.originalname.lastIndexOf('.') + 1);\n        cb(null, data._id+'.'+extension)\n    }\n})\nconst uploadCoverImg = multer({storage:cstroge,\n    fileFilter:async function (req, file, cb){\n        try{\n            const decoded = await jwt.verify(req.headers.token, configKey.secrets.JWT_SECRET);\n              \n        const data = await Users.findOne({emailId:decoded.sub})\n            const extension = data.coverImgURl.substring(data.coverImgURl.lastIndexOf(\".\") + 1);\n            const coverUploaddir = path.join(__dirname,'..','..','public','cover');\n            console.log(extension);\n            \n            if(fs.existsSync(coverUploaddir+'/'+data._id+'.'+extension)){\n                fs.unlink(coverUploaddir+'/'+data._id+'.'+extension, function (err) {\n                    if (err) throw err;\n                    // if no error, file has been deleted successfully\n                    console.log('File deleted!');\n                });\n            }\n            cb(null,true);\n        }\n        catch(err){\n            cb(null,false,new Error(err.message));\n        }\n\n}\n})\nconst uploadProfileImg = multer({storage:pstorage,\n    fileFilter:async function (req, file, cb){\n        try{\n            const decoded = await jwt.verify(req.headers.token, configKey.secrets.JWT_SECRET);\n        const data = await Users.findOne({emailId:decoded.sub})\n            const extension = data.coverImgURl.substring(data.coverImgURl.lastIndexOf(\".\") + 1);\n            const profileUploadDir = path.join(__dirname,'..','..','public','profile');\n            console.log(extension);\n            \n            if(fs.existsSync(profileUploadDir+'/'+data._id+'.'+extension)){\n                fs.unlink(profileUploadDir+'/'+data._id+'.'+extension, function (err) {\n                    if (err) throw err;\n                    // if no error, file has been deleted successfully\n                    console.log('File deleted!');\n                });\n            }\n            cb(null,true);\n        }\n        catch(err){\n            cb(null,false,new Error(err.message));\n        }\n\n}\n})\n\nuserRouter.post('/setprofileimg', uploadProfileImg.single('image'),setProfileImg);\nuserRouter.post('/setcoverimg',uploadCoverImg.single('image'),setCoverImg);\nuserRouter.get('/profile',getProfile);\nuserRouter.post('/serach',serachUser);\nuserRouter.post('/update',updateUser);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1596627854000
  },
  "{\"sourceRoot\":\"D:\\\\authentication\\\\api\\\\users\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\authentication\",\"filename\":\"D:\\\\authentication\\\\api\\\\users\\\\user.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\authentication\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\authentication\\api\\users\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\authentication",
      "filename": "D:\\authentication\\api\\users\\user.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\authentication",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\authentication\\api\\users\\user.controller.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\authentication\\api\\users\\user.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\authentication\\api\\users\\",
        "sourceFileName": "user.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setCoverImg = exports.setProfileImg = exports.updateUser = exports.serachUser = exports.getProfile = void 0;\n\nvar _user = require(\"./user.modal\");\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _config = _interopRequireDefault(require(\"../../config\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// get user profile by id\nvar getProfile = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var userId, profileData;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            userId = req.query.id;\n            _context.next = 4;\n            return _user.Users.findOne(userId);\n\n          case 4:\n            profileData = _context.sent;\n            console.log(profileData);\n\n            if (profileData.length <= 0) {\n              res.status(401).send({\n                success: false,\n                message: 'somthing goes to wrong in find data'\n              });\n            } else {\n              res.status(201).send({\n                success: true,\n                data: profileData,\n                message: 'data find successfully'\n              });\n            }\n\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context.t0.message\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 9]]);\n  }));\n\n  return function getProfile(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}(); //search User\n\n\nexports.getProfile = getProfile;\n\nvar serachUser = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$body, serchData, userId, searchDataBackend, allUser;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _req$body = req.body, serchData = _req$body.serchData, userId = _req$body.userId;\n            searchDataBackend = [];\n            _context2.next = 5;\n            return _user.Users.aggregate([{\n              $match: {}\n            }, {\n              $project: {\n                _id: 1,\n                userName: 1,\n                profileImgURL: 1,\n                city: 1\n              }\n            }]);\n\n          case 5:\n            allUser = _context2.sent;\n            _context2.next = 8;\n            return Promise.all(allUser.map(function (item) {\n              var ID = item._id.toString();\n\n              if (item.userName.match(serchData) && !ID.match(userId)) {\n                searchDataBackend.push(item);\n              }\n            }));\n\n          case 8:\n            //console.log(allUser);\n            res.status(201).send({\n              success: true,\n              data: searchDataBackend\n            });\n            _context2.next = 14;\n            break;\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context2.t0.message\n            });\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 11]]);\n  }));\n\n  return function serachUser(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}(); //edit profile page\n\n\nexports.serachUser = serachUser;\n\nvar updateUser = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var _req$body2, userId, designation, country, city, hobbies, success;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _req$body2 = req.body, userId = _req$body2.userId, designation = _req$body2.designation, country = _req$body2.country, city = _req$body2.city, hobbies = _req$body2.hobbies;\n            _context3.next = 4;\n            return _user.Users.findByIdAndUpdate({\n              _id: userId\n            }, {\n              designation: designation,\n              country: country,\n              city: city,\n              hobbies: hobbies\n            });\n\n          case 4:\n            success = _context3.sent;\n\n            if (!success) {\n              res.status(401).send({\n                success: false,\n                message: 'data update process failed due to user not found error'\n              });\n            }\n\n            res.status(201).send({\n              success: true,\n              message: 'data update successsully'\n            });\n            _context3.next = 12;\n            break;\n\n          case 9:\n            _context3.prev = 9;\n            _context3.t0 = _context3[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context3.t0.message\n            });\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 9]]);\n  }));\n\n  return function updateUser(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}(); //upload profile Image\n\n\nexports.updateUser = updateUser;\n\nvar setProfileImg = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var decoded;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n\n            if (!req.file) {\n              _context4.next = 11;\n              break;\n            }\n\n            console.log(req.file);\n            _context4.next = 5;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 5:\n            decoded = _context4.sent;\n            _context4.next = 8;\n            return _user.Users.findOneAndUpdate({\n              emailId: decoded.sub\n            }, {\n              profileImgURL: \"http://localhost:8000/profile/\" + req.file.filename\n            });\n\n          case 8:\n            return _context4.abrupt(\"return\", res.status(201).send({\n              success: true,\n              message: 'image upload successfully'\n            }));\n\n          case 11:\n            res.status(401).send({\n              success: false,\n              message: \"Image file either not supported or not found\"\n            });\n\n          case 12:\n            _context4.next = 17;\n            break;\n\n          case 14:\n            _context4.prev = 14;\n            _context4.t0 = _context4[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context4.t0.message\n            });\n\n          case 17:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 14]]);\n  }));\n\n  return function setProfileImg(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}(); //upload Cover Image\n\n\nexports.setProfileImg = setProfileImg;\n\nvar setCoverImg = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var decoded;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n\n            if (!req.file) {\n              _context5.next = 11;\n              break;\n            }\n\n            console.log(req.file);\n            _context5.next = 5;\n            return _jsonwebtoken[\"default\"].verify(req.headers.token, _config[\"default\"].secrets.JWT_SECRET);\n\n          case 5:\n            decoded = _context5.sent;\n            _context5.next = 8;\n            return _user.Users.findOneAndUpdate({\n              emailId: decoded.sub\n            }, {\n              coverImgURl: \"http://localhost:8000/profile/\" + req.file.filename\n            });\n\n          case 8:\n            return _context5.abrupt(\"return\", res.status(201).send({\n              success: true,\n              message: 'image upload successfully'\n            }));\n\n          case 11:\n            res.status(401).send({\n              success: false,\n              message: \"Image file either not supported or not found\"\n            });\n\n          case 12:\n            _context5.next = 17;\n            break;\n\n          case 14:\n            _context5.prev = 14;\n            _context5.t0 = _context5[\"catch\"](0);\n            res.status(401).send({\n              success: false,\n              message: _context5.t0.message\n            });\n\n          case 17:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 14]]);\n  }));\n\n  return function setCoverImg(_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nexports.setCoverImg = setCoverImg;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "user.controller.js"
      ],
      "names": [
        "getProfile",
        "req",
        "res",
        "userId",
        "query",
        "id",
        "Users",
        "findOne",
        "profileData",
        "console",
        "log",
        "length",
        "status",
        "send",
        "success",
        "message",
        "data",
        "serachUser",
        "body",
        "serchData",
        "searchDataBackend",
        "aggregate",
        "$match",
        "$project",
        "_id",
        "userName",
        "profileImgURL",
        "city",
        "allUser",
        "Promise",
        "all",
        "map",
        "item",
        "ID",
        "toString",
        "match",
        "push",
        "updateUser",
        "designation",
        "country",
        "hobbies",
        "findByIdAndUpdate",
        "setProfileImg",
        "file",
        "jwt",
        "verify",
        "headers",
        "token",
        "configKey",
        "secrets",
        "JWT_SECRET",
        "decoded",
        "findOneAndUpdate",
        "emailId",
        "sub",
        "filename",
        "setCoverImg",
        "coverImgURl"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;AACA;AACO,IAAMA,UAAU;AAAA,qEAAG,iBAAMC,GAAN,EAAUC,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEZC,YAAAA,MAFY,GAEHF,GAAG,CAACG,KAAJ,CAAUC,EAFP;AAAA;AAAA,mBAGQC,YAAMC,OAAN,CAAcJ,MAAd,CAHR;;AAAA;AAGZK,YAAAA,WAHY;AAIlBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;;AACA,gBAAGA,WAAW,CAACG,MAAZ,IAAoB,CAAvB,EAAyB;AACrBT,cAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,gBAAAA,OAAO,EAAC,KADS;AAEjBC,gBAAAA,OAAO,EAAC;AAFS,eAArB;AAIH,aALD,MAMI;AACAb,cAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,gBAAAA,OAAO,EAAC,IADS;AAEjBE,gBAAAA,IAAI,EAACR,WAFY;AAGjBO,gBAAAA,OAAO,EAAC;AAHS,eAArB;AAKH;;AAjBiB;AAAA;;AAAA;AAAA;AAAA;AAoBlBb,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,KADS;AAEjBC,cAAAA,OAAO,EAAC,YAAIA;AAFK,aAArB;;AApBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVf,UAAU;AAAA;AAAA;AAAA,GAAhB,C,CA0BP;;;;;AACO,IAAMiB,UAAU;AAAA,sEAAG,kBAAMhB,GAAN,EAAUC,GAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAESD,GAAG,CAACiB,IAFb,EAEXC,SAFW,aAEXA,SAFW,EAEDhB,MAFC,aAEDA,MAFC;AAGZiB,YAAAA,iBAHY,GAGQ,EAHR;AAAA;AAAA,mBAIId,YAAMe,SAAN,CAAgB,CAAC;AACnCC,cAAAA,MAAM,EAAC;AAD4B,aAAD,EAGtC;AACIC,cAAAA,QAAQ,EAAC;AACLC,gBAAAA,GAAG,EAAC,CADC;AAELC,gBAAAA,QAAQ,EAAC,CAFJ;AAGLC,gBAAAA,aAAa,EAAC,CAHT;AAILC,gBAAAA,IAAI,EAAC;AAJA;AADb,aAHsC,CAAhB,CAJJ;;AAAA;AAIZC,YAAAA,OAJY;AAAA;AAAA,mBAeZC,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,GAAR,CAAY,UAACC,IAAD,EAAQ;AAClC,kBAAMC,EAAE,GAAGD,IAAI,CAACR,GAAL,CAASU,QAAT,EAAX;;AACA,kBAAGF,IAAI,CAACP,QAAL,CAAcU,KAAd,CAAoBhB,SAApB,KAAkC,CAACc,EAAE,CAACE,KAAH,CAAShC,MAAT,CAAtC,EAAuD;AACnDiB,gBAAAA,iBAAiB,CAACgB,IAAlB,CAAuBJ,IAAvB;AACH;AACJ,aALiB,CAAZ,CAfY;;AAAA;AAqBlB;AACA9B,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,IADS;AAEjBE,cAAAA,IAAI,EAACI;AAFY,aAArB;AAtBkB;AAAA;;AAAA;AAAA;AAAA;AA4BlBlB,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,KADS;AAEjBC,cAAAA,OAAO,EAAC,aAAIA;AAFK,aAArB;;AA5BkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVE,UAAU;AAAA;AAAA;AAAA,GAAhB,C,CAkCP;;;;;AACO,IAAMoB,UAAU;AAAA,sEAAG,kBAAMpC,GAAN,EAAUC,GAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEgCD,GAAG,CAACiB,IAFpC,EAEXf,MAFW,cAEXA,MAFW,EAEJmC,WAFI,cAEJA,WAFI,EAEQC,OAFR,cAEQA,OAFR,EAEgBZ,IAFhB,cAEgBA,IAFhB,EAEqBa,OAFrB,cAEqBA,OAFrB;AAAA;AAAA,mBAGIlC,YAAMmC,iBAAN,CAAwB;AAACjB,cAAAA,GAAG,EAACrB;AAAL,aAAxB,EAAqC;AACvDmC,cAAAA,WAAW,EAAXA,WADuD;AAC3CC,cAAAA,OAAO,EAAPA,OAD2C;AACnCZ,cAAAA,IAAI,EAAJA,IADmC;AAC9Ba,cAAAA,OAAO,EAAPA;AAD8B,aAArC,CAHJ;;AAAA;AAGZ1B,YAAAA,OAHY;;AAMlB,gBAAG,CAACA,OAAJ,EAAY;AACRZ,cAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,gBAAAA,OAAO,EAAC,KADS;AAEjBC,gBAAAA,OAAO,EAAC;AAFS,eAArB;AAIH;;AACDb,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,IADS;AAEjBC,cAAAA,OAAO,EAAC;AAFS,aAArB;AAZkB;AAAA;;AAAA;AAAA;AAAA;AAkBlBb,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,KADS;AAEjBC,cAAAA,OAAO,EAAC,aAAIA;AAFK,aAArB;;AAlBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVsB,UAAU;AAAA;AAAA;AAAA,GAAhB,C,CAyBP;;;;;AACO,IAAMK,aAAa;AAAA,sEAAG,kBAAMzC,GAAN,EAAUC,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,iBAElBD,GAAG,CAAC0C,IAFc;AAAA;AAAA;AAAA;;AAGjBlC,YAAAA,OAAO,CAACC,GAAR,CAAYT,GAAG,CAAC0C,IAAhB;AAHiB;AAAA,mBAIKC,yBAAIC,MAAJ,CAAW5C,GAAG,CAAC6C,OAAJ,CAAYC,KAAvB,EAA8BC,mBAAUC,OAAV,CAAkBC,UAAhD,CAJL;;AAAA;AAIXC,YAAAA,OAJW;AAAA;AAAA,mBAKX7C,YAAM8C,gBAAN,CAAuB;AAACC,cAAAA,OAAO,EAACF,OAAO,CAACG;AAAjB,aAAvB,EAA6C;AAC/C5B,cAAAA,aAAa,EAAC,mCAAiCzB,GAAG,CAAC0C,IAAJ,CAASY;AADT,aAA7C,CALW;;AAAA;AAAA,8CAQVrD,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,cAAAA,OAAO,EAAC,IADgB;AAExBC,cAAAA,OAAO,EAAC;AAFgB,aAArB,CARU;;AAAA;AAcjBb,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,KADS;AAEjBC,cAAAA,OAAO,EAAC;AAFS,aAArB;;AAdiB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAqBrBb,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,KADS;AAEjBC,cAAAA,OAAO,EAAC,aAAIA;AAFK,aAArB;;AArBqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAb2B,aAAa;AAAA;AAAA;AAAA,GAAnB,C,CA4BP;;;;;AACO,IAAMc,WAAW;AAAA,sEAAE,kBAAMvD,GAAN,EAAUC,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,iBAEfD,GAAG,CAAC0C,IAFW;AAAA;AAAA;AAAA;;AAGdlC,YAAAA,OAAO,CAACC,GAAR,CAAYT,GAAG,CAAC0C,IAAhB;AAHc;AAAA,mBAIQC,yBAAIC,MAAJ,CAAW5C,GAAG,CAAC6C,OAAJ,CAAYC,KAAvB,EAA8BC,mBAAUC,OAAV,CAAkBC,UAAhD,CAJR;;AAAA;AAIRC,YAAAA,OAJQ;AAAA;AAAA,mBAKR7C,YAAM8C,gBAAN,CAAuB;AAACC,cAAAA,OAAO,EAACF,OAAO,CAACG;AAAjB,aAAvB,EAA6C;AAC/CG,cAAAA,WAAW,EAAC,mCAAiCxD,GAAG,CAAC0C,IAAJ,CAASY;AADP,aAA7C,CALQ;;AAAA;AAAA,8CAQPrD,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,cAAAA,OAAO,EAAC,IADgB;AAExBC,cAAAA,OAAO,EAAC;AAFgB,aAArB,CARO;;AAAA;AAcdb,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,KADS;AAEjBC,cAAAA,OAAO,EAAC;AAFS,aAArB;;AAdc;AAAA;AAAA;;AAAA;AAAA;AAAA;AAqBlBb,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,KADS;AAEjBC,cAAAA,OAAO,EAAC,aAAIA;AAFK,aAArB;;AArBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAF;;AAAA,kBAAXyC,WAAW;AAAA;AAAA;AAAA,GAAjB",
      "sourceRoot": "D:\\authentication\\api\\users\\",
      "sourcesContent": [
        "import {Users} from './user.modal'\nimport mongoose from 'mongoose'\nimport configKey from '../../config'\nimport jwt from 'jsonwebtoken';\n// get user profile by id\nexport const getProfile = async(req,res) =>{\n    try{\n        const userId = req.query.id;\n        const profileData = await Users.findOne(userId)\n        console.log(profileData);\n        if(profileData.length<=0){\n            res.status(401).send({\n                success:false,\n                message:'somthing goes to wrong in find data'\n            })\n        }\n        else{\n            res.status(201).send({\n                success:true,\n                data:profileData,\n                message:'data find successfully'\n            })\n        }\n    }\n    catch(err){\n        res.status(401).send({\n            success:false,\n            message:err.message\n        })\n    }\n}\n//search User\nexport const serachUser = async(req,res) =>{\n    try{\n        const {serchData,userId} = req.body;\n        const searchDataBackend = []\n        const allUser = await Users.aggregate([{\n            $match:{}\n        },\n        {\n            $project:{\n                _id:1,\n                userName:1,\n                profileImgURL:1,\n                city:1\n            }\n        }]);\n        await Promise.all(allUser.map((item)=>{\n            const ID = item._id.toString();\n            if(item.userName.match(serchData) && !ID.match(userId)){\n                searchDataBackend.push(item);\n            }\n        }))\n        //console.log(allUser);\n        res.status(201).send({\n            success:true,\n            data:searchDataBackend\n        })\n    }\n    catch(err){\n        res.status(401).send({\n            success:false,\n            message:err.message\n        })\n    }\n}\n//edit profile page\nexport const updateUser = async(req,res) =>{\n    try{\n        const {userId,designation,country,city,hobbies} = req.body;\n        const success = await Users.findByIdAndUpdate({_id:userId},{\n            designation,country,city,hobbies\n        })\n        if(!success){\n            res.status(401).send({\n                success:false,\n                message:'data update process failed due to user not found error'\n            })\n        }\n        res.status(201).send({\n            success:true,\n            message:'data update successsully'\n        })\n    }\n    catch(err){\n        res.status(401).send({\n            success:false,\n            message:err.message\n        })\n    }\n}\n\n//upload profile Image\nexport const setProfileImg = async(req,res) =>{\n    try{\n        if(req.file){\n            console.log(req.file);\n            const decoded = await jwt.verify(req.headers.token, configKey.secrets.JWT_SECRET);\n            await Users.findOneAndUpdate({emailId:decoded.sub},{\n                profileImgURL:\"http://localhost:8000/profile/\"+req.file.filename\n            })\n            return res.status(201).send({\n                success:true,\n                message:'image upload successfully'\n            })\n        }\n        else{\n            res.status(401).send({\n                success:false,\n                message:\"Image file either not supported or not found\"\n            })\n        }\n    }\n    catch(err){\n        res.status(401).send({\n            success:false,\n            message:err.message\n        })\n    }\n}\n\n//upload Cover Image\nexport const setCoverImg= async(req,res) =>{\n    try{\n        if(req.file){\n            console.log(req.file);\n            const decoded = await jwt.verify(req.headers.token, configKey.secrets.JWT_SECRET);\n            await Users.findOneAndUpdate({emailId:decoded.sub},{\n                coverImgURl:\"http://localhost:8000/profile/\"+req.file.filename\n            })\n            return res.status(201).send({\n                success:true,\n                message:'image upload successfully'\n            })\n        }\n        else{\n            res.status(401).send({\n                success:false,\n                message:\"Image file either not supported or not found\"\n            })\n        }\n    }\n    catch(err){\n        res.status(401).send({\n            success:false,\n            message:err.message\n        })\n    }\n}\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1597033922000
  },
  "{\"sourceRoot\":\"D:\\\\authentication\\\\api\\\\users\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\authentication\",\"filename\":\"D:\\\\authentication\\\\api\\\\users\\\\user.modal.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\authentication\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\authentication\\api\\users\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\authentication",
      "filename": "D:\\authentication\\api\\users\\user.modal.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\authentication",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\authentication\\api\\users\\user.modal.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\authentication\\api\\users\\user.modal.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\authentication\\api\\users\\",
        "sourceFileName": "user.modal.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Users = void 0;\n\nvar _mongoose = _interopRequireWildcard(require(\"mongoose\"));\n\nvar _mongooseTimestamp = _interopRequireDefault(require(\"mongoose-timestamp\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar userSchema = (0, _mongoose.Schema)({\n  name: String,\n  emailId: String,\n  password: String,\n  mobileNo: Number,\n  userName: String,\n  designation: String,\n  country: String,\n  city: String,\n  hobbies: Array,\n  profileImgURL: String,\n  coverImgURl: String,\n  content: String\n}, {\n  timestamps: {\n    createdAt: 'created_at'\n  }\n});\n\nvar Users = _mongoose[\"default\"].model('userInfo', userSchema);\n\nexports.Users = Users;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIubW9kYWwuanMiXSwibmFtZXMiOlsidXNlclNjaGVtYSIsIm5hbWUiLCJTdHJpbmciLCJlbWFpbElkIiwicGFzc3dvcmQiLCJtb2JpbGVObyIsIk51bWJlciIsInVzZXJOYW1lIiwiZGVzaWduYXRpb24iLCJjb3VudHJ5IiwiY2l0eSIsImhvYmJpZXMiLCJBcnJheSIsInByb2ZpbGVJbWdVUkwiLCJjb3ZlckltZ1VSbCIsImNvbnRlbnQiLCJ0aW1lc3RhbXBzIiwiY3JlYXRlZEF0IiwiVXNlcnMiLCJtb25nb29zZSIsIm1vZGVsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7QUFFQSxJQUFNQSxVQUFVLEdBQUcsc0JBQU87QUFDdEJDLEVBQUFBLElBQUksRUFBQ0MsTUFEaUI7QUFFdEJDLEVBQUFBLE9BQU8sRUFBQ0QsTUFGYztBQUd0QkUsRUFBQUEsUUFBUSxFQUFDRixNQUhhO0FBSXRCRyxFQUFBQSxRQUFRLEVBQUNDLE1BSmE7QUFLdEJDLEVBQUFBLFFBQVEsRUFBQ0wsTUFMYTtBQU10Qk0sRUFBQUEsV0FBVyxFQUFDTixNQU5VO0FBT3RCTyxFQUFBQSxPQUFPLEVBQUNQLE1BUGM7QUFRdEJRLEVBQUFBLElBQUksRUFBQ1IsTUFSaUI7QUFTdEJTLEVBQUFBLE9BQU8sRUFBQ0MsS0FUYztBQVV0QkMsRUFBQUEsYUFBYSxFQUFDWCxNQVZRO0FBV3RCWSxFQUFBQSxXQUFXLEVBQUNaLE1BWFU7QUFZdEJhLEVBQUFBLE9BQU8sRUFBQ2I7QUFaYyxDQUFQLEVBZWhCO0FBQUVjLEVBQUFBLFVBQVUsRUFBRTtBQUFDQyxJQUFBQSxTQUFTLEVBQUM7QUFBWDtBQUFkLENBZmdCLENBQW5COztBQWlCTyxJQUFNQyxLQUFLLEdBQUdDLHFCQUFTQyxLQUFULENBQWUsVUFBZixFQUEwQnBCLFVBQTFCLENBQWQiLCJzb3VyY2VSb290IjoiRDpcXGF1dGhlbnRpY2F0aW9uXFxhcGlcXHVzZXJzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UsIHtTY2hlbWF9IGZyb20gJ21vbmdvb3NlJztcbmltcG9ydCB0aW1lc3RhbXBzIGZyb20gXCJtb25nb29zZS10aW1lc3RhbXBcIjtcblxuY29uc3QgdXNlclNjaGVtYSA9IFNjaGVtYSh7XG4gICAgbmFtZTpTdHJpbmcsXG4gICAgZW1haWxJZDpTdHJpbmcsXG4gICAgcGFzc3dvcmQ6U3RyaW5nLFxuICAgIG1vYmlsZU5vOk51bWJlcixcbiAgICB1c2VyTmFtZTpTdHJpbmcsXG4gICAgZGVzaWduYXRpb246U3RyaW5nLFxuICAgIGNvdW50cnk6U3RyaW5nLFxuICAgIGNpdHk6U3RyaW5nLFxuICAgIGhvYmJpZXM6QXJyYXksXG4gICAgcHJvZmlsZUltZ1VSTDpTdHJpbmcsXG4gICAgY292ZXJJbWdVUmw6U3RyaW5nLFxuICAgIGNvbnRlbnQ6U3RyaW5nLFxuXG5cbn0sIHsgdGltZXN0YW1wczoge2NyZWF0ZWRBdDonY3JlYXRlZF9hdCd9IH0pXG5cbmV4cG9ydCBjb25zdCBVc2VycyA9IG1vbmdvb3NlLm1vZGVsKCd1c2VySW5mbycsdXNlclNjaGVtYSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "user.modal.js"
      ],
      "names": [
        "userSchema",
        "name",
        "String",
        "emailId",
        "password",
        "mobileNo",
        "Number",
        "userName",
        "designation",
        "country",
        "city",
        "hobbies",
        "Array",
        "profileImgURL",
        "coverImgURl",
        "content",
        "timestamps",
        "createdAt",
        "Users",
        "mongoose",
        "model"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;;;;;;;AAEA,IAAMA,UAAU,GAAG,sBAAO;AACtBC,EAAAA,IAAI,EAACC,MADiB;AAEtBC,EAAAA,OAAO,EAACD,MAFc;AAGtBE,EAAAA,QAAQ,EAACF,MAHa;AAItBG,EAAAA,QAAQ,EAACC,MAJa;AAKtBC,EAAAA,QAAQ,EAACL,MALa;AAMtBM,EAAAA,WAAW,EAACN,MANU;AAOtBO,EAAAA,OAAO,EAACP,MAPc;AAQtBQ,EAAAA,IAAI,EAACR,MARiB;AAStBS,EAAAA,OAAO,EAACC,KATc;AAUtBC,EAAAA,aAAa,EAACX,MAVQ;AAWtBY,EAAAA,WAAW,EAACZ,MAXU;AAYtBa,EAAAA,OAAO,EAACb;AAZc,CAAP,EAehB;AAAEc,EAAAA,UAAU,EAAE;AAACC,IAAAA,SAAS,EAAC;AAAX;AAAd,CAfgB,CAAnB;;AAiBO,IAAMC,KAAK,GAAGC,qBAASC,KAAT,CAAe,UAAf,EAA0BpB,UAA1B,CAAd",
      "sourceRoot": "D:\\authentication\\api\\users\\",
      "sourcesContent": [
        "import mongoose, {Schema} from 'mongoose';\nimport timestamps from \"mongoose-timestamp\";\n\nconst userSchema = Schema({\n    name:String,\n    emailId:String,\n    password:String,\n    mobileNo:Number,\n    userName:String,\n    designation:String,\n    country:String,\n    city:String,\n    hobbies:Array,\n    profileImgURL:String,\n    coverImgURl:String,\n    content:String,\n\n\n}, { timestamps: {createdAt:'created_at'} })\n\nexport const Users = mongoose.model('userInfo',userSchema);"
      ]
    },
    "sourceType": "script",
    "mtime": 1596627818000
  },
  "{\"sourceRoot\":\"D:\\\\authentication\\\\aurthorization\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\authentication\",\"filename\":\"D:\\\\authentication\\\\aurthorization\\\\auth.middleware.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\authentication\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\authentication\\aurthorization\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\authentication",
      "filename": "D:\\authentication\\aurthorization\\auth.middleware.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\authentication",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\authentication\\aurthorization\\auth.middleware.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\authentication\\aurthorization\\auth.middleware.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\authentication\\aurthorization\\",
        "sourceFileName": "auth.middleware.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.requireSignIn = exports.requireAuth = void 0;\n\nvar passportService = require(\"./passport\");\n\nvar passport = require(\"passport\"); // Create the interceptor and ensure that the cookie is turned off\n\n\nvar requireAuth = passport.authenticate(\"jwt\", {\n  session: false\n});\nexports.requireAuth = requireAuth;\nvar requireSignIn = passport.authenticate(\"local\", {\n  session: false\n});\nexports.requireSignIn = requireSignIn;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGgubWlkZGxld2FyZS5qcyJdLCJuYW1lcyI6WyJwYXNzcG9ydFNlcnZpY2UiLCJyZXF1aXJlIiwicGFzc3BvcnQiLCJyZXF1aXJlQXV0aCIsImF1dGhlbnRpY2F0ZSIsInNlc3Npb24iLCJyZXF1aXJlU2lnbkluIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsSUFBTUEsZUFBZSxHQUFHQyxPQUFPLENBQUMsWUFBRCxDQUEvQjs7QUFDQSxJQUFNQyxRQUFRLEdBQUdELE9BQU8sQ0FBQyxVQUFELENBQXhCLEMsQ0FFQTs7O0FBQ08sSUFBTUUsV0FBVyxHQUFHRCxRQUFRLENBQUNFLFlBQVQsQ0FBc0IsS0FBdEIsRUFBNkI7QUFBRUMsRUFBQUEsT0FBTyxFQUFFO0FBQVgsQ0FBN0IsQ0FBcEI7O0FBQ0EsSUFBTUMsYUFBYSxHQUFHSixRQUFRLENBQUNFLFlBQVQsQ0FBc0IsT0FBdEIsRUFBK0I7QUFBRUMsRUFBQUEsT0FBTyxFQUFFO0FBQVgsQ0FBL0IsQ0FBdEIiLCJzb3VyY2VSb290IjoiRDpcXGF1dGhlbnRpY2F0aW9uXFxhdXJ0aG9yaXphdGlvblxcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcGFzc3BvcnRTZXJ2aWNlID0gcmVxdWlyZShcIi4vcGFzc3BvcnRcIik7XG5jb25zdCBwYXNzcG9ydCA9IHJlcXVpcmUoXCJwYXNzcG9ydFwiKTtcblxuLy8gQ3JlYXRlIHRoZSBpbnRlcmNlcHRvciBhbmQgZW5zdXJlIHRoYXQgdGhlIGNvb2tpZSBpcyB0dXJuZWQgb2ZmXG5leHBvcnQgY29uc3QgcmVxdWlyZUF1dGggPSBwYXNzcG9ydC5hdXRoZW50aWNhdGUoXCJqd3RcIiwgeyBzZXNzaW9uOiBmYWxzZSB9KTtcbmV4cG9ydCBjb25zdCByZXF1aXJlU2lnbkluID0gcGFzc3BvcnQuYXV0aGVudGljYXRlKFwibG9jYWxcIiwgeyBzZXNzaW9uOiBmYWxzZSB9KTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "auth.middleware.js"
      ],
      "names": [
        "passportService",
        "require",
        "passport",
        "requireAuth",
        "authenticate",
        "session",
        "requireSignIn"
      ],
      "mappings": ";;;;;;;AAAA,IAAMA,eAAe,GAAGC,OAAO,CAAC,YAAD,CAA/B;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB,C,CAEA;;;AACO,IAAME,WAAW,GAAGD,QAAQ,CAACE,YAAT,CAAsB,KAAtB,EAA6B;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAA7B,CAApB;;AACA,IAAMC,aAAa,GAAGJ,QAAQ,CAACE,YAAT,CAAsB,OAAtB,EAA+B;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAA/B,CAAtB",
      "sourceRoot": "D:\\authentication\\aurthorization\\",
      "sourcesContent": [
        "const passportService = require(\"./passport\");\nconst passport = require(\"passport\");\n\n// Create the interceptor and ensure that the cookie is turned off\nexport const requireAuth = passport.authenticate(\"jwt\", { session: false });\nexport const requireSignIn = passport.authenticate(\"local\", { session: false });"
      ]
    },
    "sourceType": "script",
    "mtime": 1594986604000
  },
  "{\"sourceRoot\":\"D:\\\\authentication\\\\aurthorization\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\authentication\",\"filename\":\"D:\\\\authentication\\\\aurthorization\\\\passport.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\authentication\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\authentication\\aurthorization\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\authentication",
      "filename": "D:\\authentication\\aurthorization\\passport.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\authentication",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\authentication\\aurthorization\\passport.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\authentication\\aurthorization\\passport.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\authentication\\aurthorization\\",
        "sourceFileName": "passport.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _passportJwt = require(\"passport-jwt\");\n\nvar _users = require(\"../api/users\");\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nvar _bcryptNodejs = _interopRequireDefault(require(\"bcrypt-nodejs\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar passport = require(\"passport\");\n\nvar LocalStrategy = require(\"passport-local\");\n\nvar JwtStrategy = require(\"passport-jwt\").Strategy;\n\nvar localOptions = {\n  usernameField: \"email\"\n};\nvar localLogin = new LocalStrategy(localOptions, /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(email, password, done) {\n    var emailRegexp, mobileNoRegexp, userExistence, validPassword, _userExistence, _validPassword;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            emailRegexp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n            mobileNoRegexp = /\\(?\\d{3}\\)?-? *\\d{3}-? *-?\\d{6}/;\n\n            if (!emailRegexp.test(email)) {\n              _context.next = 17;\n              break;\n            }\n\n            _context.next = 6;\n            return _users.Users.findOne({\n              emailId: email.toLowerCase()\n            });\n\n          case 6:\n            userExistence = _context.sent;\n\n            if (userExistence) {\n              _context.next = 9;\n              break;\n            }\n\n            return _context.abrupt(\"return\", done(\"Either Password or EmailId Doesn't match\", false));\n\n          case 9:\n            _context.next = 11;\n            return _bcryptNodejs[\"default\"].compareSync(password, userExistence.password);\n\n          case 11:\n            validPassword = _context.sent;\n\n            if (validPassword) {\n              _context.next = 14;\n              break;\n            }\n\n            return _context.abrupt(\"return\", done(\"Password is Incorrect Please try Again later\", false));\n\n          case 14:\n            return _context.abrupt(\"return\", done(null, userExistence));\n\n          case 17:\n            if (!mobileNoRegexp.test(email)) {\n              _context.next = 30;\n              break;\n            }\n\n            _context.next = 20;\n            return _users.Users.findOne({\n              mobileNo: email\n            });\n\n          case 20:\n            _userExistence = _context.sent;\n\n            if (_userExistence) {\n              _context.next = 23;\n              break;\n            }\n\n            return _context.abrupt(\"return\", done(\"Either Password or EmailId Doesn't match\", false));\n\n          case 23:\n            _context.next = 25;\n            return _bcryptNodejs[\"default\"].compareSync(password, _userExistence.password);\n\n          case 25:\n            _validPassword = _context.sent;\n            console.log(_validPassword);\n\n            if (_validPassword) {\n              _context.next = 29;\n              break;\n            }\n\n            return _context.abrupt(\"return\", done(\"Password is Incorrect Please try Again later\", false));\n\n          case 29:\n            return _context.abrupt(\"return\", done(null, _userExistence));\n\n          case 30:\n            _context.next = 36;\n            break;\n\n          case 32:\n            _context.prev = 32;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n            return _context.abrupt(\"return\", done(\"System was unable to process the details\", false));\n\n          case 36:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 32]]);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}());\npassport.use(localLogin);\nvar jwtOptions = {\n  jwtFromRequest: _passportJwt.ExtractJwt.fromHeader(\"authorization\"),\n  secretOrKey: _config[\"default\"].secrets.JWT_SECRET\n};\nvar jwtLogin = new JwtStrategy(jwtOptions, function (jwt_payload, done) {\n  console.log(\"CHECKING LOGIN USING JWT\");\n\n  _users.Users.findOne({\n    emailId: jwt_payload.sub\n  }, function (err, user) {\n    if (err) {\n      return done(err.message, false);\n    }\n\n    if (user) {\n      return done(null, user);\n    } else {\n      return done(null, false);\n    }\n  });\n});\npassport.use(jwtLogin);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhc3Nwb3J0LmpzIl0sIm5hbWVzIjpbInBhc3Nwb3J0IiwicmVxdWlyZSIsIkxvY2FsU3RyYXRlZ3kiLCJKd3RTdHJhdGVneSIsIlN0cmF0ZWd5IiwibG9jYWxPcHRpb25zIiwidXNlcm5hbWVGaWVsZCIsImxvY2FsTG9naW4iLCJlbWFpbCIsInBhc3N3b3JkIiwiZG9uZSIsImVtYWlsUmVnZXhwIiwibW9iaWxlTm9SZWdleHAiLCJ0ZXN0IiwiVXNlcnMiLCJmaW5kT25lIiwiZW1haWxJZCIsInRvTG93ZXJDYXNlIiwidXNlckV4aXN0ZW5jZSIsImJjcnlwdCIsImNvbXBhcmVTeW5jIiwidmFsaWRQYXNzd29yZCIsIm1vYmlsZU5vIiwiY29uc29sZSIsImxvZyIsInVzZSIsImp3dE9wdGlvbnMiLCJqd3RGcm9tUmVxdWVzdCIsIkV4dHJhY3RKd3QiLCJmcm9tSGVhZGVyIiwic2VjcmV0T3JLZXkiLCJjb25maWdLZXkiLCJzZWNyZXRzIiwiSldUX1NFQ1JFVCIsImp3dExvZ2luIiwiand0X3BheWxvYWQiLCJzdWIiLCJlcnIiLCJ1c2VyIiwibWVzc2FnZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7QUFHQSxJQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXhCOztBQUNBLElBQU1DLGFBQWEsR0FBR0QsT0FBTyxDQUFDLGdCQUFELENBQTdCOztBQUNBLElBQU1FLFdBQVcsR0FBR0YsT0FBTyxDQUFDLGNBQUQsQ0FBUCxDQUF3QkcsUUFBNUM7O0FBRUEsSUFBTUMsWUFBWSxHQUFHO0FBQ2pCQyxFQUFBQSxhQUFhLEVBQUU7QUFERSxDQUFyQjtBQUlBLElBQU1DLFVBQVUsR0FBRyxJQUFJTCxhQUFKLENBQ2ZHLFlBRGU7QUFBQSxxRUFFZixpQkFBT0csS0FBUCxFQUFjQyxRQUFkLEVBQXdCQyxJQUF4QjtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFY0MsWUFBQUEsV0FGZCxHQUU0QiwrQ0FG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RkQsTUFFTztBQUNILGFBQU81QixJQUFJLENBQUMsSUFBRCxFQUFPLEtBQVAsQ0FBWDtBQUNIO0FBQ1IsR0FWRDtBQVdILENBYmdCLENBQWpCO0FBY0FWLFFBQVEsQ0FBQ3lCLEdBQVQsQ0FBYVMsUUFBYiIsInNvdXJjZVJvb3QiOiJEOlxcYXV0aGVudGljYXRpb25cXGF1cnRob3JpemF0aW9uXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFeHRyYWN0Snd0IH0gZnJvbSAncGFzc3BvcnQtand0J1xuaW1wb3J0IHtVc2Vyc30gZnJvbSAnLi4vYXBpL3VzZXJzJ1xuaW1wb3J0IGNvbmZpZ0tleSBmcm9tICcuLi9jb25maWcnXG5pbXBvcnQgYmNyeXB0IGZyb20gJ2JjcnlwdC1ub2RlanMnXG5cblxuY29uc3QgcGFzc3BvcnQgPSByZXF1aXJlKFwicGFzc3BvcnRcIik7XG5jb25zdCBMb2NhbFN0cmF0ZWd5ID0gcmVxdWlyZShcInBhc3Nwb3J0LWxvY2FsXCIpO1xuY29uc3QgSnd0U3RyYXRlZ3kgPSByZXF1aXJlKFwicGFzc3BvcnQtand0XCIpLlN0cmF0ZWd5O1xuXG5jb25zdCBsb2NhbE9wdGlvbnMgPSB7XG4gICAgdXNlcm5hbWVGaWVsZDogXCJlbWFpbFwiXG4gIH07XG5cbmNvbnN0IGxvY2FsTG9naW4gPSBuZXcgTG9jYWxTdHJhdGVneShcbiAgICBsb2NhbE9wdGlvbnMsXG4gICAgYXN5bmMgKGVtYWlsLCBwYXNzd29yZCwgZG9uZSk9PntcbiAgICAgICAgdHJ5e1xuICAgICAgICAgICAgY29uc3QgZW1haWxSZWdleHAgPSAvXlxcdysoW1xcLi1dP1xcdyspKkBcXHcrKFtcXC4tXT9cXHcrKSooXFwuXFx3ezIsM30pKyQvO1xuICAgICAgICAgICAgY29uc3QgbW9iaWxlTm9SZWdleHAgPSAvXFwoP1xcZHszfVxcKT8tPyAqXFxkezN9LT8gKi0/XFxkezZ9LztcbiAgICAgICAgICAgIGlmKGVtYWlsUmVnZXhwLnRlc3QoZW1haWwpKXtcbiAgICAgICAgICAgICAgICBjb25zdCB1c2VyRXhpc3RlbmNlID0gYXdhaXQgVXNlcnMuZmluZE9uZSh7ZW1haWxJZDplbWFpbC50b0xvd2VyQ2FzZSgpfSlcbiAgICAgICAgICAgICAgICBpZighdXNlckV4aXN0ZW5jZSl7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBkb25lKFwiRWl0aGVyIFBhc3N3b3JkIG9yIEVtYWlsSWQgRG9lc24ndCBtYXRjaFwiLGZhbHNlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgdmFsaWRQYXNzd29yZCA9IGF3YWl0IGJjcnlwdC5jb21wYXJlU3luYyhwYXNzd29yZCwgdXNlckV4aXN0ZW5jZS5wYXNzd29yZCk7XG4gICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyh2YWxpZFBhc3N3b3JkKVxuICAgICAgICAgICAgICAgIGlmKCF2YWxpZFBhc3N3b3JkKXtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRvbmUoXCJQYXNzd29yZCBpcyBJbmNvcnJlY3QgUGxlYXNlIHRyeSBBZ2FpbiBsYXRlclwiLGZhbHNlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRvbmUgKG51bGwsdXNlckV4aXN0ZW5jZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmKG1vYmlsZU5vUmVnZXhwLnRlc3QoZW1haWwpKXtcbiAgICAgICAgICAgICAgICBjb25zdCB1c2VyRXhpc3RlbmNlID0gYXdhaXQgVXNlcnMuZmluZE9uZSh7bW9iaWxlTm86ZW1haWx9KVxuICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2codXNlckV4aXN0ZW5jZSlcbiAgICAgICAgICAgICAgICBpZighdXNlckV4aXN0ZW5jZSl7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBkb25lKFwiRWl0aGVyIFBhc3N3b3JkIG9yIEVtYWlsSWQgRG9lc24ndCBtYXRjaFwiLGZhbHNlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgdmFsaWRQYXNzd29yZCA9IGF3YWl0IGJjcnlwdC5jb21wYXJlU3luYyhwYXNzd29yZCwgdXNlckV4aXN0ZW5jZS5wYXNzd29yZCk7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2codmFsaWRQYXNzd29yZClcbiAgICAgICAgICAgICAgICBpZighdmFsaWRQYXNzd29yZCl7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBkb25lKFwiUGFzc3dvcmQgaXMgSW5jb3JyZWN0IFBsZWFzZSB0cnkgQWdhaW4gbGF0ZXJcIixmYWxzZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBkb25lIChudWxsLHVzZXJFeGlzdGVuY2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoKGVycil7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICAgICAgcmV0dXJuIGRvbmUoXCJTeXN0ZW0gd2FzIHVuYWJsZSB0byBwcm9jZXNzIHRoZSBkZXRhaWxzXCIsIGZhbHNlKTtcbiAgICAgICAgfVxuICAgIH1cbilcblxucGFzc3BvcnQudXNlKGxvY2FsTG9naW4pO1xuXG5jb25zdCBqd3RPcHRpb25zID0ge1xuICAgIGp3dEZyb21SZXF1ZXN0OiBFeHRyYWN0Snd0LmZyb21IZWFkZXIoXCJhdXRob3JpemF0aW9uXCIpLFxuICAgIHNlY3JldE9yS2V5OiBjb25maWdLZXkuc2VjcmV0cy5KV1RfU0VDUkVUXG59XG5cbmNvbnN0IGp3dExvZ2luID0gbmV3IEp3dFN0cmF0ZWd5KGp3dE9wdGlvbnMsIChqd3RfcGF5bG9hZCwgZG9uZSk9PntcbiAgICBjb25zb2xlLmxvZyhcIkNIRUNLSU5HIExPR0lOIFVTSU5HIEpXVFwiKTtcbiAgICBVc2Vycy5maW5kT25lKHtlbWFpbElkOmp3dF9wYXlsb2FkLnN1Yn0sXG4gICAgICAgIChlcnIsIHVzZXIpPT57XG4gICAgICAgICAgICBpZihlcnIpe1xuICAgICAgICAgICAgICAgIHJldHVybiBkb25lKGVyci5tZXNzYWdlLCBmYWxzZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodXNlcikge1xuICAgICAgICAgICAgICAgIHJldHVybiBkb25lKG51bGwsIHVzZXIpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZG9uZShudWxsLCBmYWxzZSk7XG4gICAgICAgICAgICB9XG4gICAgfSlcbn0pXG5wYXNzcG9ydC51c2Uoand0TG9naW4pO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "passport.js"
      ],
      "names": [
        "passport",
        "require",
        "LocalStrategy",
        "JwtStrategy",
        "Strategy",
        "localOptions",
        "usernameField",
        "localLogin",
        "email",
        "password",
        "done",
        "emailRegexp",
        "mobileNoRegexp",
        "test",
        "Users",
        "findOne",
        "emailId",
        "toLowerCase",
        "userExistence",
        "bcrypt",
        "compareSync",
        "validPassword",
        "mobileNo",
        "console",
        "log",
        "use",
        "jwtOptions",
        "jwtFromRequest",
        "ExtractJwt",
        "fromHeader",
        "secretOrKey",
        "configKey",
        "secrets",
        "JWT_SECRET",
        "jwtLogin",
        "jwt_payload",
        "sub",
        "err",
        "user",
        "message"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\authentication\\aurthorization\\",
      "sourcesContent": [
        "import { ExtractJwt } from 'passport-jwt'\nimport {Users} from '../api/users'\nimport configKey from '../config'\nimport bcrypt from 'bcrypt-nodejs'\n\n\nconst passport = require(\"passport\");\nconst LocalStrategy = require(\"passport-local\");\nconst JwtStrategy = require(\"passport-jwt\").Strategy;\n\nconst localOptions = {\n    usernameField: \"email\"\n  };\n\nconst localLogin = new LocalStrategy(\n    localOptions,\n    async (email, password, done)=>{\n        try{\n            const emailRegexp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n            const mobileNoRegexp = /\\(?\\d{3}\\)?-? *\\d{3}-? *-?\\d{6}/;\n            if(emailRegexp.test(email)){\n                const userExistence = await Users.findOne({emailId:email.toLowerCase()})\n                if(!userExistence){\n                    return done(\"Either Password or EmailId Doesn't match\",false);\n                }\n                const validPassword = await bcrypt.compareSync(password, userExistence.password);\n                //console.log(validPassword)\n                if(!validPassword){\n                    return done(\"Password is Incorrect Please try Again later\",false);\n                }\n                return done (null,userExistence);\n            }\n            else if(mobileNoRegexp.test(email)){\n                const userExistence = await Users.findOne({mobileNo:email})\n                //console.log(userExistence)\n                if(!userExistence){\n                    return done(\"Either Password or EmailId Doesn't match\",false);\n                }\n                const validPassword = await bcrypt.compareSync(password, userExistence.password);\n                console.log(validPassword)\n                if(!validPassword){\n                    return done(\"Password is Incorrect Please try Again later\",false);\n                }\n                return done (null,userExistence);\n            }\n        }\n        catch(err){\n            console.log(err);\n            return done(\"System was unable to process the details\", false);\n        }\n    }\n)\n\npassport.use(localLogin);\n\nconst jwtOptions = {\n    jwtFromRequest: ExtractJwt.fromHeader(\"authorization\"),\n    secretOrKey: configKey.secrets.JWT_SECRET\n}\n\nconst jwtLogin = new JwtStrategy(jwtOptions, (jwt_payload, done)=>{\n    console.log(\"CHECKING LOGIN USING JWT\");\n    Users.findOne({emailId:jwt_payload.sub},\n        (err, user)=>{\n            if(err){\n                return done(err.message, false);\n            }\n            if (user) {\n                return done(null, user);\n            } else {\n                return done(null, false);\n            }\n    })\n})\npassport.use(jwtLogin);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1594986604000
  },
  "{\"sourceRoot\":\"D:\\\\authentication\\\\api\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\authentication\",\"filename\":\"D:\\\\authentication\\\\api\\\\restRouter.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\authentication\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\authentication\\api\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\authentication",
      "filename": "D:\\authentication\\api\\restRouter.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\authentication",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\authentication\\api\\restRouter.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\authentication\\api\\restRouter.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\authentication\\api\\",
        "sourceFileName": "restRouter.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.restRouter = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _users = require(\"./users\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar restRouter = _express[\"default\"].Router();\n\nexports.restRouter = restRouter;\nrestRouter.use('/user', _users.userRouter);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc3RSb3V0ZXIuanMiXSwibmFtZXMiOlsicmVzdFJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJ1c2UiLCJ1c2VyUm91dGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFTyxJQUFNQSxVQUFVLEdBQUdDLG9CQUFRQyxNQUFSLEVBQW5COzs7QUFHUEYsVUFBVSxDQUFDRyxHQUFYLENBQWUsT0FBZixFQUF1QkMsaUJBQXZCIiwic291cmNlUm9vdCI6IkQ6XFxhdXRoZW50aWNhdGlvblxcYXBpXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJ1xuaW1wb3J0IHt1c2VyUm91dGVyfSBmcm9tICcuL3VzZXJzJ1xuXG5leHBvcnQgY29uc3QgcmVzdFJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cblxucmVzdFJvdXRlci51c2UoJy91c2VyJyx1c2VyUm91dGVyKVxuXG5cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "restRouter.js"
      ],
      "names": [
        "restRouter",
        "express",
        "Router",
        "use",
        "userRouter"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEO,IAAMA,UAAU,GAAGC,oBAAQC,MAAR,EAAnB;;;AAGPF,UAAU,CAACG,GAAX,CAAe,OAAf,EAAuBC,iBAAvB",
      "sourceRoot": "D:\\authentication\\api\\",
      "sourcesContent": [
        "import express from 'express'\nimport {userRouter} from './users'\n\nexport const restRouter = express.Router();\n\n\nrestRouter.use('/user',userRouter)\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1600852532072
  }
}